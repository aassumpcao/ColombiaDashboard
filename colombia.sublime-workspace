{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ex",
				"expect_equal"
			],
			[
				"fi",
				"filtered_data"
			],
			[
				"extra",
				"extra_filter"
			],
			[
				"filte",
				"filter_selected"
			],
			[
				"filter_",
				"filter_selected"
			],
			[
				"filter",
				"filter_selected"
			],
			[
				"fil",
				"filenameID"
			],
			[
				"app",
				"app_sys"
			],
			[
				"fluid",
				"fluidRow"
			],
			[
				"ver",
				"verbatimTextOutput"
			],
			[
				"navba",
				"navbarPage"
			],
			[
				"dash",
				"dashboardPage"
			],
			[
				"bs4Das",
				"bs4DashFooter"
			],
			[
				"nav",
				"navbarMenu"
			],
			[
				"extr",
				"extract_text"
			],
			[
				"file",
				"filepath"
			],
			[
				"territo",
				"territory_id"
			],
			[
				"clas",
				"class"
			],
			[
				"occ",
				"occupations02"
			],
			[
				"if",
				"ifmain"
			],
			[
				"plot02",
				"plot02_summarized"
			],
			[
				"elem",
				"element_line"
			],
			[
				"edu",
				"education_loan"
			],
			[
				"responde",
				"response_id"
			],
			[
				"plot06",
				"plot06_sliced"
			],
			[
				"hig",
				"highest_degree"
			],
			[
				"hi",
				"highest_degree"
			],
			[
				"high",
				"highest_degree"
			],
			[
				"highe",
				"highest_degree"
			],
			[
				"plot",
				"plot06_sliced"
			],
			[
				"degere",
				"degree_location"
			],
			[
				"here",
				"highest_degree_location"
			],
			[
				"higeh",
				"highest_degree"
			],
			[
				"respo",
				"respondent_id"
			],
			[
				"resp",
				"respondent_id"
			],
			[
				"q5_12",
				"q5_12_8_text"
			],
			[
				"q5",
				"q5_12_8_text"
			],
			[
				"to_lode",
				"to_lodes_form"
			],
			[
				"SOUR",
				"SOURCE_n"
			],
			[
				"cairo",
				"cairo_pdf"
			],
			[
				"elemnet",
				"element_text"
			],
			[
				"ele",
				"element_blank"
			],
			[
				"summarize",
				"summarize"
			],
			[
				"numer",
				"number_of_cases"
			],
			[
				"create",
				"create_package"
			],
			[
				"instal",
				"install.packages"
			],
			[
				"analysi",
				"analysis01"
			],
			[
				"respon",
				"response_id"
			],
			[
				"anal",
				"analysis01"
			],
			[
				"cono",
				"conjoint01"
			],
			[
				"geom_t",
				"geom_treemap_text"
			],
			[
				"geom",
				"geom_treemap"
			],
			[
				"are",
				"area_of_study"
			],
			[
				"year",
				"years_lived_in_colombia"
			],
			[
				"data",
				"data_return"
			],
			[
				"scale",
				"scale_fill_brewer"
			],
			[
				"missing",
				"missing_countries"
			],
			[
				"fre",
				"frequency_of_visits"
			],
			[
				"scale_fill",
				"scale_fill_manual"
			],
			[
				"survey",
				"survey_data"
			],
			[
				"back",
				"background"
			],
			[
				"elemen",
				"element_text"
			],
			[
				"data-",
				"data-processed"
			],
			[
				"tid",
				"tidyverse"
			],
			[
				"temp",
				"tempo_politicos"
			],
			[
				"DS_",
				"DS_CARGO"
			],
			[
				"process",
				"processos_filtrados"
			],
			[
				"table06",
				"table06_final"
			],
			[
				"table",
				"table06_election"
			],
			[
				"DS",
				"DS_SIT_TOT_TURNO"
			],
			[
				"election",
				"election_year"
			],
			[
				"retun",
				"return_election"
			],
			[
				"inde",
				"indexes"
			],
			[
				"numero",
				"numero_unico_trib"
			],
			[
				"numero_",
				"numero_unico_trib"
			],
			[
				"label",
				"labelPosition"
			],
			[
				"co",
				"coord_flip"
			],
			[
				"processos",
				"processos_assuntos"
			],
			[
				"proce",
				"process_classes"
			],
			[
				"stat",
				"status_publiquese"
			],
			[
				"pro",
				"processos_filtrados"
			],
			[
				"proces",
				"processos_classes"
			],
			[
				"NA",
				"NA_real_"
			],
			[
				"element",
				"element_text"
			],
			[
				"group",
				"group_by"
			],
			[
				"cario",
				"cairo_pdf\t{grDevices}"
			],
			[
				"num",
				"numero_cnj"
			],
			[
				"enc",
				"encoded_data"
			],
			[
				"shapefi",
				"shapefiles_comarcas"
			],
			[
				"dir",
				"dir.create\t{base}"
			],
			[
				"shape",
				"shapefiles_comarcas"
			],
			[
				"amazon",
				"amazonia_legal"
			],
			[
				"install",
				"install.packages\t{utils}"
			],
			[
				"inst",
				"install.packages\t{utils}"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dev/02_dev.R",
			"settings":
			{
				"buffer_size": 2270,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dev/03_deploy.R",
			"settings":
			{
				"buffer_size": 1012,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dev/run_dev.R",
			"settings":
			{
				"buffer_size": 318,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "R/fct_helpers.R",
			"settings":
			{
				"buffer_size": 3324,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"paste",
					null,
					"AQAAAB4JAAAAAAAArwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeCQAAAAAAAB4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n#' "
					},
					"AgAAAK8JAAAAAAAAsAkAAAAAAAAAAAAAsAkAAAAAAACzCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvCQAAAAAAAK8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "prep"
					},
					"BQAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA7CQAAAAAAAAoAAABjb3VudF9kYXRhOwkAAAAAAAA8CQAAAAAAAAAAAAA8CQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABECQAAAAAAADoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "are_labels"
					},
					"CgAAAD4JAAAAAAAAPwkAAAAAAAAAAAAAPwkAAAAAAABACQAAAAAAAAAAAABACQAAAAAAAEEJAAAAAAAAAAAAAEEJAAAAAAAAQgkAAAAAAAAAAAAAQgkAAAAAAABDCQAAAAAAAAAAAABDCQAAAAAAAEQJAAAAAAAAAAAAAEQJAAAAAAAARQkAAAAAAAAAAAAARQkAAAAAAABGCQAAAAAAAAAAAABGCQAAAAAAAEcJAAAAAAAAAAAAAEcJAAAAAAAASAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+CQAAAAAAAD4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAALYJAAAAAAAAtgkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICQAAAAAAAEgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAALYJAAAAAAAAtwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICQAAAAAAAEgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					2,
					"left_delete",
					null,
					"AgAAALUJAAAAAAAAtQkAAAAAAAABAAAAJ7QJAAAAAAAAtAkAAAAAAAABAAAAIw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2CQAAAAAAALYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "prepare_labesl"
					},
					"DgAAALQJAAAAAAAAtQkAAAAAAAAAAAAAtQkAAAAAAAC2CQAAAAAAAAAAAAC2CQAAAAAAALcJAAAAAAAAAAAAALcJAAAAAAAAuAkAAAAAAAAAAAAAuAkAAAAAAAC5CQAAAAAAAAAAAAC5CQAAAAAAALoJAAAAAAAAAAAAALoJAAAAAAAAuwkAAAAAAAAAAAAAuwkAAAAAAAC8CQAAAAAAAAAAAAC8CQAAAAAAAL0JAAAAAAAAAAAAAL0JAAAAAAAAvgkAAAAAAAAAAAAAvgkAAAAAAAC/CQAAAAAAAAAAAAC/CQAAAAAAAMAJAAAAAAAAAAAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0CQAAAAAAALQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					2,
					"left_delete",
					null,
					"AgAAAMEJAAAAAAAAwQkAAAAAAAABAAAAbMAJAAAAAAAAwAkAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCCQAAAAAAAMIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "ls <- function"
					},
					"CwAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAADCCQAAAAAAAMYJAAAAAAAAAAAAAMYJAAAAAAAAxwkAAAAAAAAAAAAAxwkAAAAAAADICQAAAAAAAAAAAADICQAAAAAAAMkJAAAAAAAAAAAAAMkJAAAAAAAAygkAAAAAAAAAAAAAygkAAAAAAADLCQAAAAAAAAAAAADLCQAAAAAAAMwJAAAAAAAAAAAAAMwJAAAAAAAAzQkAAAAAAAAAAAAAzQkAAAAAAADOCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADACQAAAAAAAMAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM4JAAAAAAAA0AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOCQAAAAAAAM4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAADRCQAAAAAAANIJAAAAAAAAAAAAANIJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPCQAAAAAAAM8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANQJAAAAAAAA1gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUCQAAAAAAANQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANcJAAAAAAAA2AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXCQAAAAAAANcJAAAAAAAAAAAAAACQckA"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "data <- "
					},
					"BQAAANgJAAAAAAAA2QkAAAAAAAAAAAAA2QkAAAAAAADaCQAAAAAAAAAAAADaCQAAAAAAANsJAAAAAAAAAAAAANsJAAAAAAAA3AkAAAAAAAAAAAAA3AkAAAAAAADgCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYCQAAAAAAANgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "DIaspo"
					},
					"BgAAAOAJAAAAAAAA4QkAAAAAAAAAAAAA4QkAAAAAAADiCQAAAAAAAAAAAADiCQAAAAAAAOMJAAAAAAAAAAAAAOMJAAAAAAAA5AkAAAAAAAAAAAAA5AkAAAAAAADlCQAAAAAAAAAAAADlCQAAAAAAAOYJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgCQAAAAAAAOAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert_completion",
					{
						"completion": "DiasporaSurveyResults",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DiasporaSurveyResults"
					},
					"AgAAAOAJAAAAAAAA4AkAAAAAAAAGAAAARElhc3Bv4AkAAAAAAAD1CQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmCQAAAAAAAOYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPUJAAAAAAAA9gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1CQAAAAAAAPUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAPYJAAAAAAAA9wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2CQAAAAAAAPYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPcJAAAAAAAA+AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3CQAAAAAAAPcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "urvey_data"
					},
					"CgAAAPgJAAAAAAAA+QkAAAAAAAAAAAAA+QkAAAAAAAD6CQAAAAAAAAAAAAD6CQAAAAAAAPsJAAAAAAAAAAAAAPsJAAAAAAAA/AkAAAAAAAAAAAAA/AkAAAAAAAD9CQAAAAAAAAAAAAD9CQAAAAAAAP4JAAAAAAAAAAAAAP4JAAAAAAAA/wkAAAAAAAAAAAAA/wkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAEKAAAAAAAAAAAAAAEKAAAAAAAAAgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4CQAAAAAAAPgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAAIKAAAAAAAAAwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACCgAAAAAAAAIKAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAMKAAAAAAAABAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADCgAAAAAAAAMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "data <- "
					},
					"BQAAAAQKAAAAAAAABQoAAAAAAAAAAAAABQoAAAAAAAAGCgAAAAAAAAAAAAAGCgAAAAAAAAcKAAAAAAAAAAAAAAcKAAAAAAAACAoAAAAAAAAAAAAACAoAAAAAAAAMCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAECgAAAAAAAAQKAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAAsKAAAAAAAACwoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMCgAAAAAAAAwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAAsKAAAAAAAADAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALCgAAAAAAAAsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " prepare"
					},
					"CAAAAAsKAAAAAAAADAoAAAAAAAAAAAAADAoAAAAAAAANCgAAAAAAAAAAAAANCgAAAAAAAA4KAAAAAAAAAAAAAA4KAAAAAAAADwoAAAAAAAAAAAAADwoAAAAAAAAQCgAAAAAAAAAAAAAQCgAAAAAAABEKAAAAAAAAAAAAABEKAAAAAAAAEgoAAAAAAAAAAAAAEgoAAAAAAAATCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALCgAAAAAAAAsKAAAAAAAA////////738"
				],
				[
					111,
					1,
					"insert_completion",
					{
						"completion": "prepared_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "prepared_data"
					},
					"AgAAAAwKAAAAAAAADAoAAAAAAAAHAAAAcHJlcGFyZQwKAAAAAAAAGQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATCgAAAAAAABMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkKAAAAAAAAGwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZCgAAAAAAABkKAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAABoKAAAAAAAAGwoAAAAAAAAAAAAAGwoAAAAAAAAcCgAAAAAAAAAAAAAcCgAAAAAAAB0KAAAAAAAAAAAAAB0KAAAAAAAAHgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaCgAAAAAAABoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsKAAAAAAAADAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALCgAAAAAAAAsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAAwKAAAAAAAADQoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMCgAAAAAAAAwKAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAA0KAAAAAAAADgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANCgAAAAAAAA0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert_completion",
					{
						"completion": "DiasporaSurveyResults",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DiasporaSurveyResults"
					},
					"AgAAAAwKAAAAAAAADAoAAAAAAAACAAAARGkMCgAAAAAAACEKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOCgAAAAAAAA4KAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACEKAAAAAAAAIgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhCgAAAAAAACEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACIKAAAAAAAAJAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiCgAAAAAAACIKAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					3,
					"left_delete",
					null,
					"AwAAACMKAAAAAAAAIwoAAAAAAAABAAAAICIKAAAAAAAAIgoAAAAAAAABAAAAICEKAAAAAAAAIQoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkCgAAAAAAACQKAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACEKAAAAAAAAIgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhCgAAAAAAACEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					135,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAACIKAAAAAAAAIwoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiCgAAAAAAACIKAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"right_delete",
					null,
					"AQAAACMKAAAAAAAAIwoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjCgAAAAAAACMKAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAACoKAAAAAAAAKgoAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArCgAAAAAAACsKAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAQKAAAAAAAABgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAECgAAAAAAAAQKAAAAAAAAAAAAAAAAAAA"
				],
				[
					190,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAANgJAAAAAAAA2gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCQAAAAAAANoJAAAAAAAAAAAAAAAAMkA"
				],
				[
					208,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AwAAAEYIAAAAAAAARwgAAAAAAAAAAAAARwgAAAAAAABHCAAAAAAAAAYAAABtdXRhdGVHCAAAAAAAAEgIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMCAAAAAAAAEYIAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "lect"
					},
					"BAAAAEgIAAAAAAAASQgAAAAAAAAAAAAASQgAAAAAAABKCAAAAAAAAAAAAABKCAAAAAAAAEsIAAAAAAAAAAAAAEsIAAAAAAAATAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABICAAAAAAAAEgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"paste",
					null,
					"AgAAAB4JAAAAAAAA1gkAAAAAAAAAAAAA1gkAAAAAAADWCQAAAAAAALgAAAAjJyBoZWxwZXIgZnVuY3Rpb24KIycgQG5hbWUgcHJlcGFyZV9sYWJlbHMKIycgQGRlc2NyaXB0aW9uIGZ1bmN0aW9uIHRvIGNvdW50IHRoZSB2YXJpYWJsZXMgb2YgaW50ZXJlc3QKIycgQG5vUmQKIycgQGltcG9ydEZyb20gcmxhbmcgLmRhdGEKIycgQGV4cG9ydApwcmVwYXJlX2xhYmVscyA8LSBmdW5jdGlvbihkYXRhKXt9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWCQAAAAAAAB4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"paste",
					null,
					"AQAAANYJAAAAAAAAjgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWCQAAAAAAANYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOkJAAAAAAAA6gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpCQAAAAAAAOkJAAAAAAAAAAAAAAAAAAA"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAALQJAAAAAAAAtQkAAAAAAAAAAAAAtQkAAAAAAAC1CQAAAAAAAA4AAABwcmVwYXJlX2xhYmVscw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0CQAAAAAAAMIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "plit_data"
					},
					"CQAAALUJAAAAAAAAtgkAAAAAAAAAAAAAtgkAAAAAAAC3CQAAAAAAAAAAAAC3CQAAAAAAALgJAAAAAAAAAAAAALgJAAAAAAAAuQkAAAAAAAAAAAAAuQkAAAAAAAC6CQAAAAAAAAAAAAC6CQAAAAAAALsJAAAAAAAAAAAAALsJAAAAAAAAvAkAAAAAAAAAAAAAvAkAAAAAAAC9CQAAAAAAAAAAAAC9CQAAAAAAAL4JAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1CQAAAAAAALUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "split_data"
					},
					"CwAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA7CQAAAAAAAA4AAABwcmVwYXJlX2xhYmVsczsJAAAAAAAAPAkAAAAAAAAAAAAAPAkAAAAAAAA9CQAAAAAAAAAAAAA9CQAAAAAAAD4JAAAAAAAAAAAAAD4JAAAAAAAAPwkAAAAAAAAAAAAAPwkAAAAAAABACQAAAAAAAAAAAABACQAAAAAAAEEJAAAAAAAAAAAAAEEJAAAAAAAAQgkAAAAAAAAAAAAAQgkAAAAAAABDCQAAAAAAAAAAAABDCQAAAAAAAEQJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6CQAAAAAAAEgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"cut",
					null,
					"AQAAAB4JAAAAAAAAHgkAAAAAAADDAAAAIycgaGVscGVyIGZ1bmN0aW9uCiMnIEBuYW1lIHNwbGl0X2RhdGEKIycgQGRlc2NyaXB0aW9uIGZ1bmN0aW9uIHRvIGNvdW50IHRoZSB2YXJpYWJsZXMgb2YgaW50ZXJlc3QKIycgQG5vUmQKIycgQGltcG9ydEZyb20gcmxhbmcgLmRhdGEKIycgQGV4cG9ydApzcGxpdF9kYXRhIDwtIGZ1bmN0aW9uKGRhdGEpe30jJyBoZWxwZXIgZnVuY3Rpb24K",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhCQAAAAAAAB4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"right_delete",
					null,
					"AQAAAB4JAAAAAAAAHgkAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeCQAAAAAAAB4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMQJAAAAAAAAxQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADECQAAAAAAAMQJAAAAAAAAAAAAAAAAAAA"
				],
				[
					264,
					1,
					"paste",
					null,
					"AQAAAMUJAAAAAAAAiAoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFCQAAAAAAAMUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "e"
					},
					"BAAAAKEJAAAAAAAAogkAAAAAAAAAAAAAogkAAAAAAACiCQAAAAAAAAcAAABwcmVwYXJlJwkAAAAAAAAoCQAAAAAAAAAAAAAoCQAAAAAAACgJAAAAAAAABwAAAHByZXBhcmU",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAnCQAAAAAAAC4JAAAAAAAAAAAAAAAA8L+hCQAAAAAAAKgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AgAAAJwJAAAAAAAAnQkAAAAAAAAAAAAAKAkAAAAAAAApCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAoCQAAAAAAACgJAAAAAAAAAAAAAAAA8L+cCQAAAAAAAJwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AgAAAJ4JAAAAAAAAnwkAAAAAAAAAAAAAKQkAAAAAAAAqCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAApCQAAAAAAACkJAAAAAAAAAAAAAAAA8L+eCQAAAAAAAJ4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "ac"
					},
					"BAAAAKAJAAAAAAAAoQkAAAAAAAAAAAAAKgkAAAAAAAArCQAAAAAAAAAAAACiCQAAAAAAAKMJAAAAAAAAAAAAACsJAAAAAAAALAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAqCQAAAAAAACoJAAAAAAAAAAAAAAAA8L+gCQAAAAAAAKAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					2,
					"left_delete",
					null,
					"BAAAAKMJAAAAAAAAowkAAAAAAAABAAAAYysJAAAAAAAAKwkAAAAAAAABAAAAY6EJAAAAAAAAoQkAAAAAAAABAAAAYSoJAAAAAAAAKgkAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAsCQAAAAAAACwJAAAAAAAAAAAAAAAA8L+kCQAAAAAAAKQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "ract"
					},
					"CAAAAKAJAAAAAAAAoQkAAAAAAAAAAAAAKgkAAAAAAAArCQAAAAAAAAAAAACiCQAAAAAAAKMJAAAAAAAAAAAAACsJAAAAAAAALAkAAAAAAAAAAAAApAkAAAAAAAClCQAAAAAAAAAAAAAsCQAAAAAAAC0JAAAAAAAAAAAAAKYJAAAAAAAApwkAAAAAAAAAAAAALQkAAAAAAAAuCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAqCQAAAAAAACoJAAAAAAAAAAAAAAAA8L+gCQAAAAAAAKAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMAJAAAAAAAAwQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADACQAAAAAAAMAJAAAAAAAAAAAAAAAA8L8"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": " question_analys"
					},
					"EAAAAMEJAAAAAAAAwgkAAAAAAAAAAAAAwgkAAAAAAADDCQAAAAAAAAAAAADDCQAAAAAAAMQJAAAAAAAAAAAAAMQJAAAAAAAAxQkAAAAAAAAAAAAAxQkAAAAAAADGCQAAAAAAAAAAAADGCQAAAAAAAMcJAAAAAAAAAAAAAMcJAAAAAAAAyAkAAAAAAAAAAAAAyAkAAAAAAADJCQAAAAAAAAAAAADJCQAAAAAAAMoJAAAAAAAAAAAAAMoJAAAAAAAAywkAAAAAAAAAAAAAywkAAAAAAADMCQAAAAAAAAAAAADMCQAAAAAAAM0JAAAAAAAAAAAAAM0JAAAAAAAAzgkAAAAAAAAAAAAAzgkAAAAAAADPCQAAAAAAAAAAAADPCQAAAAAAANAJAAAAAAAAAAAAANAJAAAAAAAA0QkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBCQAAAAAAAMEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRCQAAAAAAANEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					313,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAANIJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSCQAAAAAAANIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANMJAAAAAAAA1AkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTCQAAAAAAANMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " group"
					},
					"BgAAANQJAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADWCQAAAAAAAAAAAADWCQAAAAAAANcJAAAAAAAAAAAAANcJAAAAAAAA2AkAAAAAAAAAAAAA2AkAAAAAAADZCQAAAAAAAAAAAADZCQAAAAAAANoJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUCQAAAAAAANQJAAAAAAAAAAAAAAAA8L8"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANoJAAAAAAAA2wkAAAAAAAAAAAAA2wkAAAAAAADcCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaCQAAAAAAANoJAAAAAAAAAAAAAAAA8L8"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": " NULL"
					},
					"BQAAANwJAAAAAAAA3QkAAAAAAAAAAAAA3QkAAAAAAADeCQAAAAAAAAAAAADeCQAAAAAAAN8JAAAAAAAAAAAAAN8JAAAAAAAA4AkAAAAAAAAAAAAA4AkAAAAAAADhCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcCQAAAAAAANwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					338,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAMEJAAAAAAAAwgkAAAAAAAAAAAAAwgkAAAAAAADCCQAAAAAAABQAAAAgcXVlc3Rpb25fYW5hbHlzaXMsIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVCQAAAAAAAMEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BwAAAMQEAAAAAAAAxQQAAAAAAAAAAAAAxQQAAAAAAADFBAAAAAAAAAQAAABkYXRhxQQAAAAAAADGBAAAAAAAAAAAAADGBAAAAAAAAMcEAAAAAAAAAAAAAMcEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADJBAAAAAAAAAAAAADJBAAAAAAAAMoEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIBAAAAAAAAMQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAAD8FAAAAAAAAPwUAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABABQAAAAAAAEAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					366,
					3,
					"left_delete",
					null,
					"AwAAAD4FAAAAAAAAPgUAAAAAAAABAAAAdD0FAAAAAAAAPQUAAAAAAAABAAAAYTwFAAAAAAAAPAUAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/BQAAAAAAAD8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BgAAADwFAAAAAAAAPQUAAAAAAAAAAAAAPQUAAAAAAAA+BQAAAAAAAAAAAAA+BQAAAAAAAD8FAAAAAAAAAAAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BgAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAD2BAAAAAAAAPcEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxBAAAAAAAAPEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": " values"
					},
					"BwAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3BAAAAAAAAPcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4EAAAAAAAA/wQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+BAAAAAAAAP4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AgAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADyBAAAAAAAAA4AAAB1bmlxdWUgdmFsdWVzIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/BAAAAAAAAPEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyBAAAAAAAAPIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					1,
					"left_delete",
					null,
					"AQAAAPIEAAAAAAAA8gQAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzBAAAAAAAAPMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "alues"
					},
					"BQAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA8wQAAAAAAAD0BAAAAAAAAAAAAAD0BAAAAAAAAPUEAAAAAAAAAAAAAPUEAAAAAAAA9gQAAAAAAAAAAAAA9gQAAAAAAAD3BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyBAAAAAAAAPIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3BAAAAAAAAPcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": " single"
					},
					"BwAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAP0EAAAAAAAAAAAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6BAAAAAAAAPoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " choice"
					},
					"BwAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAcFAAAAAAAAAAAAAAcFAAAAAAAACAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABBQAAAAAAAAEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					397,
					7,
					"left_delete",
					null,
					"BwAAAAcFAAAAAAAABwUAAAAAAAABAAAAZQYFAAAAAAAABgUAAAAAAAABAAAAYwUFAAAAAAAABQUAAAAAAAABAAAAaQQFAAAAAAAABAUAAAAAAAABAAAAbwMFAAAAAAAAAwUAAAAAAAABAAAAaAIFAAAAAAAAAgUAAAAAAAABAAAAYwEFAAAAAAAAAQUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIBQAAAAAAAAgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": "-choice"
					},
					"BwAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAcFAAAAAAAAAAAAAAcFAAAAAAAACAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABBQAAAAAAAAEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": " questions"
					},
					"CgAAAAgFAAAAAAAACQUAAAAAAAAAAAAACQUAAAAAAAAKBQAAAAAAAAAAAAAKBQAAAAAAAAsFAAAAAAAAAAAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA4FAAAAAAAAAAAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABEFAAAAAAAAAAAAABEFAAAAAAAAEgUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIBQAAAAAAAAgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					401,
					1,
					"left_delete",
					null,
					"AQAAABIFAAAAAAAAEgUAAAAAAAAVAAAAdmFyaWFibGVzIG9mIGludGVyZXN0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASBQAAAAAAACcFAAAAAAAA////////738"
				],
				[
					424,
					1,
					"paste",
					null,
					"AgAAALEJAAAAAAAA1AsAAAAAAAAAAAAA1AsAAAAAAADUCwAAAAAAADAAAABleHRyYWN0X2xhYmVscyA8LSBmdW5jdGlvbihkYXRhLCBncm91cCA9IE5VTEwpe30",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhCQAAAAAAALEJAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/02_selection.R",
			"settings":
			{
				"buffer_size": 14538,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "library(magrittr)\nlibrary(tidyverse)\nlibrary(rlang)\n\ndata <- DiasporaSurveyResults::prepare_data('q3_2')\nprepared_data <- DiasporaSurveyResults::count_unique(data, 'q3_2', 'q3_3')\n\ngroup <- 'q3_2'\n\n\n\n\nextract_labels(prepared_data, 'q3_3')\n\n\nlabels <- prepared_data %>%\n  group_by(q3_3) %>%\n  arrange(desc(abs_total), .by_group = TRUE) %>%\n  pull(q3_3) %>%\n  unique()\n\ndevtools::document()\n\n\n",
			"file": "dev/04_scratch.R",
			"file_size": 938,
			"file_write_time": 132600560334888721,
			"settings":
			{
				"buffer_size": 391,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAYwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"right_delete",
					null,
					"AQAAAC0AAAAAAAAALQAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AgAAAC0AAAAAAAAALQAAAAAAAAACAAAAIyAAAAAAAAAAAAAAAAAAAAAAAgAAACMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAGEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "library"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAcAAAAAAAAACQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "magrit"
					},
					"BgAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert_completion",
					{
						"completion": "magrittr",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "magrittr"
					},
					"AgAAAAgAAAAAAAAACAAAAAAAAAAGAAAAbWFncml0CAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\nlibrary"
					},
					"CAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "tidyver"
					},
					"BwAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert_completion",
					{
						"completion": "tidyverse",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "tidyverse"
					},
					"AgAAABoAAAAAAAAAGgAAAAAAAAAHAAAAdGlkeXZlchoAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIAAAAAAAAAgwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAAAAAAAAAIIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"",
					null,
					"AQAAAIMAAAAAAAAAhAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"",
					null,
					"AQAAAIMAAAAAAAAAgwAAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIMAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "q3-2"
					},
					"BAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					2,
					"left_delete",
					null,
					"AgAAAIcAAAAAAAAAhwAAAAAAAAABAAAAMoYAAAAAAAAAhgAAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "_2"
					},
					"AgAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGAAAAAAAAAIYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAH0AAAAAAAAAfQAAAAAAAAAGAAAAZGF0YSwg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAAAAAAAAAH0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"cut",
					null,
					"AQAAACYAAAAAAAAAJgAAAAAAAAArAAAAZGF0YSA8LSBEaWFzcG9yYVN1cnZleVJlc3VsdHM6OnN1cnZleV9kYXRhCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAAAAAAAAAFAAAAAAAAAAAAAAAADAeEA"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "prepared"
					},
					"CAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "_data <- Dias"
					},
					"CgAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGsAAAAAAAAAAAAAAGsAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABtAAAAAAAAAAAAAABtAAAAAAAAAG4AAAAAAAAAAAAAAG4AAAAAAAAAbwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert_completion",
					{
						"completion": "DiasporaSurveyResults",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DiasporaSurveyResults"
					},
					"AgAAAGsAAAAAAAAAawAAAAAAAAAFAAAARGlhc3BrAAAAAAAAAIAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAAAAAAAAAIEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "count_data"
					},
					"CgAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAACHAAAAAAAAAAAAAACHAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAIsAAAAAAAAAjAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAAAAAAAAAIIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIwAAAAAAAAAjgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "data,"
					},
					"BQAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"",
					null,
					"AQAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"",
					null,
					"AQAAAJMAAAAAAAAAkwAAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJMAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "q3_2"
					},
					"BAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFgAAAAAAAAAWQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZAAAAAAAAAFkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					2,
					"left_delete",
					null,
					"AgAAAFkAAAAAAAAAWQAAAAAAAAABAAAAIFgAAAAAAAAAWAAAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAJoAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"left_delete",
					null,
					"AQAAACUAAAAAAAAAJQAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJsAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAAAAA"
				],
				[
					156,
					1,
					"paste",
					null,
					"AQAAAJwAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAALAAAAAAAAAAsQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					2,
					"left_delete",
					null,
					"AgAAAJoAAAAAAAAAmgAAAAAAAAABAAAALJkAAAAAAAAAmQAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoAAAAAAAAAmwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAAAAAAAAAJoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"",
					null,
					"AQAAAJsAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"",
					null,
					"AQAAAJsAAAAAAAAAmwAAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJsAAAAAAAAAnQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "q3_3"
					},
					"BAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "prep"
					},
					"BAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					200,
					1,
					"insert_completion",
					{
						"completion": "prepare_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "prepare_data"
					},
					"AgAAAKQAAAAAAAAApAAAAAAAAAAEAAAAcHJlcKQAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					5,
					"left_delete",
					null,
					"BQAAAK8AAAAAAAAArwAAAAAAAAABAAAAYa4AAAAAAAAArgAAAAAAAAABAAAAdK0AAAAAAAAArQAAAAAAAAABAAAAYawAAAAAAAAArAAAAAAAAAABAAAAZKsAAAAAAAAAqwAAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "d_data %>% "
					},
					"BwAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAArwAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAALEAAAAAAAAAAAAAALEAAAAAAAAAtgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"reindent",
					null,
					"AQAAALcAAAAAAAAAuQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AAAAAAAAALcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "gr"
					},
					"AgAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					2,
					"left_delete",
					null,
					"AgAAALoAAAAAAAAAugAAAAAAAAABAAAAcrkAAAAAAAAAuQAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AAAAAAAAALsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "dplyr"
					},
					"BQAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					5,
					"left_delete",
					null,
					"BQAAAL0AAAAAAAAAvQAAAAAAAAABAAAAcrwAAAAAAAAAvAAAAAAAAAABAAAAebsAAAAAAAAAuwAAAAAAAAABAAAAbLoAAAAAAAAAugAAAAAAAAABAAAAcLkAAAAAAAAAuQAAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AAAAAAAAAL4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "groupb"
					},
					"BgAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert_completion",
					{
						"completion": "group_by",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "group_by"
					},
					"AgAAALkAAAAAAAAAuQAAAAAAAAAGAAAAZ3JvdXBiuQAAAAAAAADBAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AAAAAAAAAL8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMEAAAAAAAAAwwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBAAAAAAAAAMEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAMIAAAAAAAAAwwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAAAAAAAAAMIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": "_3"
					},
					"AgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAMcAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAAAAAAAAAMcAAAAAAAAA////////738"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "arrange"
					},
					"BwAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANYAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "desc"
					},
					"BAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAADZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "perc_to"
					},
					"BwAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					7,
					"left_delete",
					null,
					"BwAAAOIAAAAAAAAA4gAAAAAAAAABAAAAb+EAAAAAAAAA4QAAAAAAAAABAAAAdOAAAAAAAAAA4AAAAAAAAAABAAAAX98AAAAAAAAA3wAAAAAAAAABAAAAY94AAAAAAAAA3gAAAAAAAAABAAAAct0AAAAAAAAA3QAAAAAAAAABAAAAZdwAAAAAAAAA3AAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "abs_total"
					},
					"CQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " .keep_"
					},
					"BwAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAAAAAAAAAOcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "groups"
					},
					"BgAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					4,
					"right_delete",
					null,
					"BAAAAOkAAAAAAAAA6QAAAAAAAAABAAAAa+kAAAAAAAAA6QAAAAAAAAABAAAAZekAAAAAAAAA6QAAAAAAAAABAAAAZekAAAAAAAAA6QAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAAAAAAAAAOkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "by"
					},
					"AgAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAAAAAAAAAOkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"left_delete",
					null,
					"AQAAAPEAAAAAAAAA8QAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": " TRUE"
					},
					"BQAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAAAAAAAAAPMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAPkAAAAAAAAA/gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AAAAAAAAAPkAAAAAAAAA////////738"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "\npull"
					},
					"BgAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUBAAAAAAAABwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "q3"
					},
					"AgAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAQAAAAAAAAYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAkBAAAAAAAACgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAAsBAAAAAAAAEAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAQAAAAAAAAsBAAAAAAAA////////738"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "\ns"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"left_delete",
					null,
					"AQAAABMBAAAAAAAAEwEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BgAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABkBAAAAAAAAGwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAQAAAAAAABkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": "labels <- "
					},
					"BwAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAArgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					292,
					1,
					"trim_trailing_white_space",
					null,
					"BAAAABkBAAAAAAAAGQEAAAAAAAABAAAAIAcBAAAAAAAABwEAAAAAAAABAAAAINUAAAAAAAAA1QAAAAAAAAABAAAAIL8AAAAAAAAAvwAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAAAAAAAAAK4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAKMAAAAAAAAAAAAAAACAVkA"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAAAAAA"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKYAAAAAAAAApwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					327,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKcAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAKcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": "is.null"
					},
					"BwAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK8AAAAAAAAAsQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": "group"
					},
					"BQAAALAAAAAAAAAAsQAAAAAAAAAAAAAAsQAAAAAAAACyAAAAAAAAAAAAAACyAAAAAAAAALMAAAAAAAAAAAAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAAAAAAAAALAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AAAAAAAAALcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALgAAAAAAAAAugAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALkAAAAAAAAAugAAAAAAAAAAAAAAugAAAAAAAAC7AAAAAAAAAAAAAAC6AAAAAAAAALwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					347,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALoAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AAAAAAAAALoAAAAAAAAAAAAAAAAAAAA"
				],
				[
					350,
					1,
					"paste",
					null,
					"AQAAALwAAAAAAAAAOgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AAAAAAAAALwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					355,
					1,
					"indent",
					null,
					"BAAAANgAAAAAAAAA2gAAAAAAAAAAAAAA7wAAAAAAAADxAAAAAAAAAAAAAAAiAQAAAAAAACQBAAAAAAAAAAAAADUBAAAAAAAANwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAADoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "dplyr:"
					},
					"EwAAACYBAAAAAAAAJwEAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAEUBAAAAAAAARQEAAAAAAAACAAAAICApAQAAAAAAACoBAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAMAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAAQkDzAAAAAAAAAPMAAAAAAAAAAAAAAAAAQkAmAQAAAAAAACYBAAAAAAAAAAAAAAAAQkA"
				],
				[
					368,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AwAAAOIAAAAAAAAA4wAAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAMAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L//AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L84AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAAkBAAAAAAAACgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "plyr:"
					},
					"BQAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					379,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAQAAAAAAAA8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVAQAAAAAAABUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": "library"
					},
					"BwAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAAAAAAAAACUAAAAAAAAAAAAAAADQdEA"
				],
				[
					392,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACwAAAAAAAAALgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "rlang"
					},
					"BQAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADMAAAAAAAAANAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"
					},
					"AQAAADQAAAAAAAAANAAAAAAAAAAFAAAALmRhdGE",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADkAAAAAAAAA////////738"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAAAAAAAAALIAAAAAAAAAAAAAAAAAAAA"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAALMAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAALMAAAAAAAAAAAAAAAAAAAA"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": "uestion_analusis"
					},
					"EAAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAC2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AAAAAAAAALQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					425,
					4,
					"left_delete",
					null,
					"BAAAAMMAAAAAAAAAwwAAAAAAAAABAAAAc8IAAAAAAAAAwgAAAAAAAAABAAAAacEAAAAAAAAAwQAAAAAAAAABAAAAc8AAAAAAAAAAwAAAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "yss"
					},
					"AwAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					427,
					1,
					"left_delete",
					null,
					"AQAAAMIAAAAAAAAAwgAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "is <- "
					},
					"AwAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAAAAAAAAAMIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					429,
					1,
					"",
					null,
					"AQAAAMgAAAAAAAAAyQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					430,
					1,
					"",
					null,
					"AQAAAMgAAAAAAAAAyAAAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					431,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMgAAAAAAAAAygAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "q3_"
					},
					"AwAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					438,
					1,
					"left_delete",
					null,
					"AQAAAMwAAAAAAAAAzAAAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAAAAAAAAAM0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					444,
					1,
					"left_delete",
					null,
					"AQAAAMwAAAAAAAAAzAAAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAAAAAAAAAM0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMwAAAAAAAAAzQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "group"
					},
					"BgAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC0AAAAAAAAABEAAABxdWVzdGlvbl9hbmFseXNpc7QAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAC2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAALMAAAAAAAAAAAAAAAAAAAA"
				],
				[
					477,
					1,
					"right_delete",
					null,
					"AQAAAIQBAAAAAAAAhAEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAQAAAAAAAIQBAAAAAAAAAAAAAAAgbEA"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGAQAAAAAAAIYBAAAAAAAAAAAAAAAAW0A"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIsBAAAAAAAAjAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAQAAAAAAAIsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					484,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIwBAAAAAAAAjgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAQAAAAAAAIwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAMkAAAAAAAAAygAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "prea"
					},
					"BQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADfAAAAAAAAAAYAAABsYWJlbHPfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"left_delete",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "pared_data"
					},
					"CgAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					518,
					1,
					"cut",
					null,
					"AQAAABoBAAAAAAAAGgEAAAAAAAByAAAAICU+JQogICAgZHBseXI6OmFycmFuZ2UoZHBseXI6OmRlc2MoLmRhdGEkYWJzX3RvdGFsKSwgLmJ5X2dyb3VwID0gVFJVRSkgJT4lCiAgICBkcGx5cjo6cHVsbChxM18zKSAlPiUKICAgIHVuaXF1ZSgp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAQAAAAAAAIwBAAAAAAAAAAAAAAAgbEA"
				],
				[
					522,
					1,
					"paste",
					null,
					"AQAAACUBAAAAAAAAlwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAQAAAAAAACUBAAAAAAAAAAAAAAAgbEA"
				],
				[
					527,
					1,
					"left_delete",
					null,
					"AQAAABwBAAAAAAAAHAEAAAAAAAAIAAAAIGVsc2Uge30",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAQAAAAAAABwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					1,
					"left_delete",
					null,
					"AQAAAB0BAAAAAAAAHQEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAQAAAAAAAB4BAAAAAAAAAAAAAAAAIkA"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAB4BAAAAAAAAHwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAQAAAAAAAB4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert_completion",
					{
						"completion": "prepared_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "prepared_data"
					},
					"AgAAAB0BAAAAAAAAHQEAAAAAAAACAAAAcHIdAQAAAAAAACoBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACoBAAAAAAAAKwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					576,
					1,
					"cut",
					null,
					"AQAAADMBAAAAAAAAMwEAAAAAAAA+AAAAZHBseXI6OmFycmFuZ2UoZHBseXI6OmRlc2MoLmRhdGEkYWJzX3RvdGFsKSwgLmJ5X2dyb3VwID0gVFJVRSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAAHEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAQAAAAAAABoBAAAAAAAA////////738"
				],
				[
					581,
					1,
					"paste",
					null,
					"AQAAAB8BAAAAAAAAXQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAABoBAAAAAAAAHwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAQAAAAAAABoBAAAAAAAAAAAAAACQgkA"
				],
				[
					586,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAB4BAAAAAAAAHgEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					593,
					2,
					"left_delete",
					null,
					"AgAAAHYBAAAAAAAAdgEAAAAAAAAIAAAAICAgICAlPiV1AQAAAAAAAHUBAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+AQAAAAAAAHYBAAAAAAAAAAAAAAAAAAA"
				],
				[
					603,
					1,
					"paste",
					null,
					"AQAAAGQBAAAAAAAAcQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAQAAAAAAAGQBAAAAAAAAAAAAAAAAAAA"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": " <- "
					},
					"AQAAAHEBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAQAAAAAAAHEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"unindent",
					null,
					"AgAAAIcBAAAAAAAAhwEAAAAAAAACAAAAICCfAQAAAAAAAJ8BAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHAQAAAAAAAK4BAAAAAAAAAAAAAAAAAAA"
				],
				[
					621,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAQAAAAAAAGQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAQAAAAAAAGQBAAAAAAAAAAAAAAAAAAA"
				],
				[
					629,
					1,
					"insert",
					{
						"characters": "lavbe"
					},
					"BgAAAGYBAAAAAAAAZwEAAAAAAAAAAAAAZwEAAAAAAABnAQAAAAAAAA0AAABwcmVwYXJlZF9kYXRhZwEAAAAAAABoAQAAAAAAAAAAAABoAQAAAAAAAGkBAAAAAAAAAAAAAGkBAAAAAAAAagEAAAAAAAAAAAAAagEAAAAAAABrAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAHMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					631,
					3,
					"left_delete",
					null,
					"AwAAAGoBAAAAAAAAagEAAAAAAAABAAAAZWkBAAAAAAAAaQEAAAAAAAABAAAAYmgBAAAAAAAAaAEAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrAQAAAAAAAGsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "bels"
					},
					"BAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAQAAAAAAAGgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAGUBAAAAAAAAZgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAQAAAAAAAGUBAAAAAAAAAAAAAAAAS0A"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmAQAAAAAAAGYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "extract"
					},
					"BwAAAGcBAAAAAAAAaAEAAAAAAAAAAAAAaAEAAAAAAABpAQAAAAAAAAAAAABpAQAAAAAAAGoBAAAAAAAAAAAAAGoBAAAAAAAAawEAAAAAAAAAAAAAawEAAAAAAABsAQAAAAAAAAAAAABsAQAAAAAAAG0BAAAAAAAAAAAAAG0BAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnAQAAAAAAAGcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					1,
					"insert",
					{
						"characters": " labesl"
					},
					"BwAAAG4BAAAAAAAAbwEAAAAAAAAAAAAAbwEAAAAAAABwAQAAAAAAAAAAAABwAQAAAAAAAHEBAAAAAAAAAAAAAHEBAAAAAAAAcgEAAAAAAAAAAAAAcgEAAAAAAABzAQAAAAAAAAAAAABzAQAAAAAAAHQBAAAAAAAAAAAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAQAAAAAAAG4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					645,
					2,
					"left_delete",
					null,
					"AgAAAHQBAAAAAAAAdAEAAAAAAAABAAAAbHMBAAAAAAAAcwEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					646,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAHMBAAAAAAAAdAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAQAAAAAAAHMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAAYkA"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": " apply"
					},
					"BgAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": " group"
					},
					"BgAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLAAAAAAAAAMsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "filter"
					},
					"BgAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					663,
					2,
					"left_delete",
					null,
					"AgAAANsAAAAAAAAA2wAAAAAAAAABAAAAINoAAAAAAAAA2gAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					664,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": "assigned"
					},
					"CAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					686,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BwAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACYAAAAAAAAAAQAAABkYXRhmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAANoBAAAAAAAA3AEAAAAAAAAAAAAA1wEAAAAAAADXAQAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					696,
					1,
					"left_delete",
					null,
					"AQAAANgBAAAAAAAA2AEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAQAAAAAAANoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANgBAAAAAAAA2QEAAAAAAAAAAAAA2QEAAAAAAADaAQAAAAAAAAAAAADaAQAAAAAAANsBAAAAAAAAAAAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAQAAAAAAANgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "labesl"
					},
					"BgAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					701,
					2,
					"left_delete",
					null,
					"AgAAAOQBAAAAAAAA5AEAAAAAAAABAAAAbOMBAAAAAAAA4wEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAQAAAAAAAOUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					702,
					1,
					"insert",
					{
						"characters": "ls"
					},
					"AgAAAOMBAAAAAAAA5AEAAAAAAAAAAAAA5AEAAAAAAADlAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAQAAAAAAAOMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					704,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAN8BAAAAAAAA3wEAAAAAAAAGAAAAbGFiZWxz3wEAAAAAAADnAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					707,
					1,
					"left_delete",
					null,
					"AQAAAN4BAAAAAAAA3gEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					718,
					1,
					"paste",
					null,
					"AgAAADcBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABHAQAAAAAAAAQAAABxM18z",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AQAAAAAAADcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					723,
					1,
					"paste",
					null,
					"AgAAAM4BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADeAQAAAAAAAAQAAABxM18z",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAQAAAAAAAM4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAPcBAAAAAAAA+AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3AQAAAAAAAPcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					742,
					1,
					"insert",
					{
						"characters": "ist(data"
					},
					"CAAAAPgBAAAAAAAA+QEAAAAAAAAAAAAA+QEAAAAAAAD6AQAAAAAAAAAAAAD6AQAAAAAAAPsBAAAAAAAAAAAAAPsBAAAAAAAA/AEAAAAAAAAAAAAA/AEAAAAAAAD9AQAAAAAAAAAAAAD9AQAAAAAAAP4BAAAAAAAAAAAAAP4BAAAAAAAA/wEAAAAAAAAAAAAA/wEAAAAAAAAAAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AQAAAAAAAPgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAACAAAAAAAAAQIAAAAAAAAAAAAAAQIAAAAAAAACAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAA8L8"
				],
				[
					744,
					1,
					"insert",
					{
						"characters": " prepared"
					},
					"CQAAAAICAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAAEAgAAAAAAAAAAAAAEAgAAAAAAAAUCAAAAAAAAAAAAAAUCAAAAAAAABgIAAAAAAAAAAAAABgIAAAAAAAAHAgAAAAAAAAAAAAAHAgAAAAAAAAgCAAAAAAAAAAAAAAgCAAAAAAAACQIAAAAAAAAAAAAACQIAAAAAAAAKAgAAAAAAAAAAAAAKAgAAAAAAAAsCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAgAAAAAAAAICAAAAAAAAAAAAAAAA8L8"
				],
				[
					746,
					1,
					"insert",
					{
						"characters": "_data"
					},
					"BQAAAAsCAAAAAAAADAIAAAAAAAAAAAAADAIAAAAAAAANAgAAAAAAAAAAAAANAgAAAAAAAA4CAAAAAAAAAAAAAA4CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAQAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABACAAAAAAAAEQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAgAAAAAAABACAAAAAAAAAAAAAAAA8L8"
				],
				[
					749,
					1,
					"insert",
					{
						"characters": " labels"
					},
					"BwAAABECAAAAAAAAEgIAAAAAAAAAAAAAEgIAAAAAAAATAgAAAAAAAAAAAAATAgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFQIAAAAAAAAAAAAAFQIAAAAAAAAWAgAAAAAAAAAAAAAWAgAAAAAAABcCAAAAAAAAAAAAABcCAAAAAAAAGAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAgAAAAAAABECAAAAAAAAAAAAAAAA8L8"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABgCAAAAAAAAGQIAAAAAAAAAAAAAGQIAAAAAAAAaAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					751,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoCAAAAAAAAGwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAgAAAAAAABoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACICAAAAAAAAIwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAgAAAAAAACICAAAAAAAA////////738"
				],
				[
					764,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					770,
					1,
					"paste",
					null,
					"AQAAAMYAAAAAAAAA9AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					775,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAPQAAAAAAAAA9AAAAAAAAABfAQAACiMgYXBwbHkgZ3JvdXAgZmlsdGVyIGlmIGFzc2lnbmVkCmlmICghaXMubnVsbChncm91cCkpIHsKICBwcmVwYXJlZF9kYXRhIDwtIHByZXBhcmVkX2RhdGEgJT4lCiAgICBkcGx5cjo6Z3JvdXBfYnkoISFhcy5uYW1lKGdyb3VwKSkgJT4lCiAgICBkcGx5cjo6YXJyYW5nZShkcGx5cjo6ZGVzYyguZGF0YSRhYnNfdG90YWwpLCAuYnlfZ3JvdXAgPSBUUlVFKQp9CgojIGV4dHJhY3QgbGFiZWxzCmxhYmVscyA8LSBwcmVwYXJlZF9kYXRhICU+JQogIGRwbHlyOjpwdWxsKCEhYXMubmFtZShncm91cCkpICU+JQogIHVuaXF1ZSgpCgpyZXR1cm4obGlzdChkYXRhID0gcHJlcGFyZWRfZGF0YSwgbGFiZWxzID0gbGFiZWxzKSkK9AAAAAAAAABVAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0AAAAAAAAAFMCAAAAAAAAAAAAAAAAAAA"
				],
				[
					787,
					1,
					"indent",
					null,
					"CwAAAPYAAAAAAAAA+AAAAAAAAAAAAAAAGQEAAAAAAAAbAQAAAAAAAAAAAAAyAQAAAAAAADQBAAAAAAAAAAAAAFkBAAAAAAAAWwEAAAAAAAAAAAAAhQEAAAAAAACHAQAAAAAAAAAAAADKAQAAAAAAAMwBAAAAAAAAAAAAAM8BAAAAAAAA0QEAAAAAAAAAAAAA4gEAAAAAAADkAQAAAAAAAAAAAAAAAgAAAAAAAAICAAAAAAAAAAAAACYCAAAAAAAAKAIAAAAAAAAAAAAANAIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AAAAAAAAAFMCAAAAAAAA////////738"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAGwCAAAAAAAAbQIAAAAAAAAAAAAAbQIAAAAAAABuAgAAAAAAAAAAAABuAgAAAAAAAG8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAgAAAAAAAGwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					796,
					1,
					"insert",
					{
						"characters": "prep"
					},
					"BAAAAG4CAAAAAAAAbwIAAAAAAAAAAAAAbwIAAAAAAABwAgAAAAAAAAAAAABwAgAAAAAAAHECAAAAAAAAAAAAAHECAAAAAAAAcgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAgAAAAAAAG4CAAAAAAAAAAAAAAAAAAA"
				],
				[
					798,
					1,
					"insert_completion",
					{
						"completion": "prepared_data",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "prepared_data"
					},
					"AgAAAG4CAAAAAAAAbgIAAAAAAAAEAAAAcHJlcG4CAAAAAAAAewIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAgAAAAAAAHICAAAAAAAAAAAAAAAA8L8"
				],
				[
					799,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHsCAAAAAAAAfQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AgAAAAAAAHsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					800,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHsCAAAAAAAAewIAAAAAAAABAAAAKHsCAAAAAAAAewIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AgAAAAAAAHwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					805,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAG4CAAAAAAAAbwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAgAAAAAAAG4CAAAAAAAAAAAAAAAAAAA"
				],
				[
					807,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAG8CAAAAAAAAcAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					809,
					1,
					"insert",
					{
						"characters": "tract_labels"
					},
					"DAAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAB4AgAAAAAAAHkCAAAAAAAAAAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwAgAAAAAAAHACAAAAAAAAAAAAAAAA8L8"
				],
				[
					810,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAHwCAAAAAAAAfQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AgAAAAAAAHwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					812,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAIoCAAAAAAAAiwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAgAAAAAAAIoCAAAAAAAA////////738"
				],
				[
					823,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM0BAAAAAAAAzgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAQAAAAAAAM0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": "else"
					},
					"BAAAAM4BAAAAAAAAzwEAAAAAAAAAAAAAzwEAAAAAAADQAQAAAAAAAAAAAADQAQAAAAAAANEBAAAAAAAAAAAAANEBAAAAAAAA0gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAQAAAAAAAM4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIBAAAAAAAA0wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAQAAAAAAANIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					828,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANMBAAAAAAAA1QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					830,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANQBAAAAAAAA1QEAAAAAAAAAAAAA1QEAAAAAAADXAQAAAAAAAAAAAADXAQAAAAAAANgBAAAAAAAAAAAAANgBAAAAAAAA2gEAAAAAAAAAAAAA1QEAAAAAAADVAQAAAAAAAAIAAAAgINUBAAAAAAAA2QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAQAAAAAAANQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					849,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AwAAACACAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAhAgAAAAAAABAAAAAhIWFzLm5hbWUoZ3JvdXAp1QEAAAAAAADVAQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAACACAAAAAAAAAAAAAAAA8L8"
				],
				[
					861,
					1,
					"right_delete",
					null,
					"AgAAAEcBAAAAAAAARwEAAAAAAAAJAAAAcHJlcGFyZWRfNgEAAAAAAAA2AQAAAAAAAAkAAABwcmVwYXJlZF8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAA/AQAAAAAAADYBAAAAAAAAAAAAAAAA8L9HAQAAAAAAAFABAAAAAAAAAAAAAAAA8L8"
				],
				[
					879,
					1,
					"left_delete",
					null,
					"AQAAADQCAAAAAAAANAIAAAAAAAAJAAAAcHJlcGFyZWRf",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AgAAAAAAAD0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					891,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGwCAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsAgAAAAAAAGwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0CAAAAAAAAbgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAgAAAAAAAG0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					893,
					1,
					"",
					null,
					"AQAAAG4CAAAAAAAAbwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAgAAAAAAAG4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					894,
					1,
					"",
					null,
					"AQAAAG4CAAAAAAAAbgIAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					895,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAG4CAAAAAAAAcAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuAgAAAAAAAG4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": "q3-"
					},
					"AwAAAG8CAAAAAAAAcAIAAAAAAAAAAAAAcAIAAAAAAABxAgAAAAAAAAAAAABxAgAAAAAAAHICAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					897,
					1,
					"left_delete",
					null,
					"AQAAAHECAAAAAAAAcQIAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByAgAAAAAAAHICAAAAAAAAAAAAAAAA8L8"
				],
				[
					898,
					1,
					"insert",
					{
						"characters": "_3"
					},
					"AgAAAHECAAAAAAAAcgIAAAAAAAAAAAAAcgIAAAAAAABzAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAgAAAAAAAHECAAAAAAAAAAAAAAAA8L8"
				],
				[
					911,
					1,
					"cut",
					null,
					"AQAAAMkBAAAAAAAAyQEAAAAAAABUAAAAICAjIGV4dHJhY3QgbGFiZWxzCiAgbGFiZWxzIDwtIHByZXBhcmVkX2RhdGEgJT4lCiAgICBkcGx5cjo6cHVsbCgxKSAlPiUKICAgIHVuaXF1ZSgp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAgAAAAAAAMkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					915,
					1,
					"paste",
					null,
					"AQAAAMMBAAAAAAAAFwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					923,
					1,
					"indent",
					null,
					"BAAAAMMBAAAAAAAAxQEAAAAAAAAAAAAA2AEAAAAAAADaAQAAAAAAAAAAAAD4AQAAAAAAAPoBAAAAAAAAAAAAABECAAAAAAAAEwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAQAAAAAAABcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAALcBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AQAAAAAAALcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					934,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALwBAAAAAAAAvQEAAAAAAAAAAAAAvQEAAAAAAADDAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8AQAAAAAAALwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": "dplyr:"
					},
					"BgAAAMMBAAAAAAAAxAEAAAAAAAAAAAAAxAEAAAAAAADFAQAAAAAAAAAAAADFAQAAAAAAAMYBAAAAAAAAAAAAAMYBAAAAAAAAxwEAAAAAAAAAAAAAxwEAAAAAAADIAQAAAAAAAAAAAADIAQAAAAAAAMkBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					939,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAMkBAAAAAAAAygEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAQAAAAAAAMkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": "pull"
					},
					"BAAAAMoBAAAAAAAAywEAAAAAAAAAAAAAywEAAAAAAADMAQAAAAAAAAAAAADMAQAAAAAAAM0BAAAAAAAAAAAAAM0BAAAAAAAAzgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAQAAAAAAAMoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					947,
					1,
					"left_delete",
					null,
					"AQAAAMMBAAAAAAAAwwEAAAAAAAALAAAAZHBseXI6OnB1bGw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAQAAAAAAAMMBAAAAAAAAAAAAAAAAS0A"
				],
				[
					949,
					9,
					"left_delete",
					null,
					"CQAAAMEBAAAAAAAAwQEAAAAAAAACAAAAICC/AQAAAAAAAL8BAAAAAAAAAgAAACAgvQEAAAAAAAC9AQAAAAAAAAIAAAAgILwBAAAAAAAAvAEAAAAAAAABAAAACrsBAAAAAAAAuwEAAAAAAAABAAAAILoBAAAAAAAAugEAAAAAAAABAAAAJbkBAAAAAAAAuQEAAAAAAAABAAAAPrgBAAAAAAAAuAEAAAAAAAABAAAAJbcBAAAAAAAAtwEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					954,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC+AQAAAAAAAAAAAAC+AQAAAAAAAL8BAAAAAAAAAAAAAL8BAAAAAAAAxQEAAAAAAAAAAAAAuAEAAAAAAAC4AQAAAAAAAAYAAAAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AQAAAAAAALcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					955,
					1,
					"left_delete",
					null,
					"AQAAAL0BAAAAAAAAvQEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AQAAAAAAAL8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					956,
					1,
					"insert",
					{
						"characters": "labels"
					},
					"BgAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAAC/AQAAAAAAAAAAAAC/AQAAAAAAAMABAAAAAAAAAAAAAMABAAAAAAAAwQEAAAAAAAAAAAAAwQEAAAAAAADCAQAAAAAAAAAAAADCAQAAAAAAAMMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9AQAAAAAAAL0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					957,
					1,
					"left_delete",
					null,
					"AQAAAMIBAAAAAAAAwgEAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAQAAAAAAAMMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAMIBAAAAAAAAxwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAQAAAAAAAMIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					962,
					5,
					"left_delete",
					null,
					"BQAAAMYBAAAAAAAAxgEAAAAAAAABAAAAIMUBAAAAAAAAxQEAAAAAAAABAAAAJcQBAAAAAAAAxAEAAAAAAAABAAAAPsMBAAAAAAAAwwEAAAAAAAABAAAAJcIBAAAAAAAAwgEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAQAAAAAAAMcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					963,
					1,
					"insert",
					{
						"characters": " <- data %>% "
					},
					"BgAAAMIBAAAAAAAAxgEAAAAAAAAAAAAAxgEAAAAAAADHAQAAAAAAAAAAAADHAQAAAAAAAMgBAAAAAAAAAAAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAyQEAAAAAAADKAQAAAAAAAAAAAADKAQAAAAAAAM8BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCAQAAAAAAAMIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA0AEAAAAAAADUAQAAAAAAAAAAAADUAQAAAAAAANYBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAQAAAAAAAM8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "dplur"
					},
					"BQAAANYBAAAAAAAA1wEAAAAAAAAAAAAA1wEAAAAAAADYAQAAAAAAAAAAAADYAQAAAAAAANkBAAAAAAAAAAAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADbAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					967,
					2,
					"left_delete",
					null,
					"AgAAANoBAAAAAAAA2gEAAAAAAAABAAAActkBAAAAAAAA2QEAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAQAAAAAAANsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": "yr:"
					},
					"AwAAANkBAAAAAAAA2gEAAAAAAAAAAAAA2gEAAAAAAADbAQAAAAAAAAAAAADbAQAAAAAAANwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAQAAAAAAANkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					970,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAANwBAAAAAAAA3QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAQAAAAAAANwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					971,
					1,
					"insert",
					{
						"characters": "pull"
					},
					"BAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA3gEAAAAAAADfAQAAAAAAAAAAAADfAQAAAAAAAOABAAAAAAAAAAAAAOABAAAAAAAA4QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAQAAAAAAAN0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					972,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEBAAAAAAAA4wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAQAAAAAAAOEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "!!as.name"
					},
					"CQAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA5gEAAAAAAADnAQAAAAAAAAAAAADnAQAAAAAAAOgBAAAAAAAAAAAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADqAQAAAAAAAAAAAADqAQAAAAAAAOsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAQAAAAAAAOIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					974,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOsBAAAAAAAA7QEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAQAAAAAAAOsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					975,
					1,
					"insert",
					{
						"characters": "group"
					},
					"BQAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAADuAQAAAAAAAO8BAAAAAAAAAAAAAO8BAAAAAAAA8AEAAAAAAAAAAAAA8AEAAAAAAADxAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAQAAAAAAAOwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					977,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAPMBAAAAAAAA+AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzAQAAAAAAAPMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPgBAAAAAAAA+QEAAAAAAAAAAAAA+QEAAAAAAAD/AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AQAAAAAAAPgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": "unique*"
					},
					"BwAAAP8BAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAICAAAAAAAAAAAAAAICAAAAAAAAAwIAAAAAAAAAAAAAAwIAAAAAAAAEAgAAAAAAAAAAAAAEAgAAAAAAAAUCAAAAAAAAAAAAAAUCAAAAAAAABgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AQAAAAAAAP8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					981,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAYCAAAAAAAACAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					982,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAAYCAAAAAAAABgIAAAAAAAABAAAAKAYCAAAAAAAABgIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					983,
					1,
					"left_delete",
					null,
					"AQAAAAUCAAAAAAAABQIAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					984,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAUCAAAAAAAABwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAgAAAAAAAAUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABICAAAAAAAAEwIAAAAAAAAAAAAAEwIAAAAAAAAVAgAAAAAAAAAAAAAVAgAAAAAAABcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASAgAAAAAAABICAAAAAAAAAAAAAACAX0A"
				],
				[
					989,
					1,
					"trim_trailing_white_space",
					null,
					"AwAAABMCAAAAAAAAEwIAAAAAAAAEAAAAICAgIPcBAAAAAAAA9wEAAAAAAAABAAAAIM4BAAAAAAAAzgEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAgAAAAAAABcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					998,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1002,
					1,
					"reindent",
					null,
					"AQAAADIBAAAAAAAANgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1005,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAADYBAAAAAAAANwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AQAAAAAAADYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1009,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AAAAAAAAAPgAAAAAAAAAAAAAAAAAMkA"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA6AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAMkA"
				],
				[
					1018,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD0BAAAAAAAAPgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAA////////738"
				],
				[
					1020,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAD4BAAAAAAAAQAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1021,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1022,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAEEBAAAAAAAAQwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1023,
					1,
					"insert",
					{
						"characters": "ar"
					},
					"AgAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1024,
					2,
					"left_delete",
					null,
					"AgAAAEMBAAAAAAAAQwEAAAAAAAABAAAAckIBAAAAAAAAQgEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1025,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAEEBAAAAAAAAQQEAAAAAAAABAAAAW0EBAAAAAAAAQQEAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1026,
					2,
					"left_delete",
					null,
					"AgAAAEABAAAAAAAAQAEAAAAAAAABAAAAZT8BAAAAAAAAPwEAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1027,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAD4BAAAAAAAAPgEAAAAAAAABAAAAWz4BAAAAAAAAPgEAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1028,
					1,
					"insert",
					{
						"characters": "preare"
					},
					"BgAAAD4BAAAAAAAAPwEAAAAAAAAAAAAAPwEAAAAAAABAAQAAAAAAAAAAAABAAQAAAAAAAEEBAAAAAAAAAAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1029,
					3,
					"left_delete",
					null,
					"AwAAAEMBAAAAAAAAQwEAAAAAAAABAAAAZUIBAAAAAAAAQgEAAAAAAAABAAAAckEBAAAAAAAAQQEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "pare"
					},
					"BAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " ta"
					},
					"AwAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAQAAAAAAAEUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1032,
					2,
					"left_delete",
					null,
					"AgAAAEcBAAAAAAAARwEAAAAAAAABAAAAYUYBAAAAAAAARgEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAQAAAAAAAEgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1033,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAABIAQAAAAAAAEkBAAAAAAAAAAAAAEkBAAAAAAAASgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAQAAAAAAAEYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1036,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANEBAAAAAAAA0gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAQAAAAAAANEBAAAAAAAAAAAAAABAZEA"
				],
				[
					1037,
					1,
					"reindent",
					null,
					"AQAAANIBAAAAAAAA2AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAQAAAAAAANIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1039,
					1,
					"left_delete",
					null,
					"AQAAANYBAAAAAAAA1gEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAQAAAAAAANgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1040,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAANYBAAAAAAAA1wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAQAAAAAAANYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": " preapr"
					},
					"BwAAANcBAAAAAAAA2AEAAAAAAAAAAAAA2AEAAAAAAADZAQAAAAAAAAAAAADZAQAAAAAAANoBAAAAAAAAAAAAANoBAAAAAAAA2wEAAAAAAAAAAAAA2wEAAAAAAADcAQAAAAAAAAAAAADcAQAAAAAAAN0BAAAAAAAAAAAAAN0BAAAAAAAA3gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAQAAAAAAANcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1042,
					3,
					"left_delete",
					null,
					"AwAAAN0BAAAAAAAA3QEAAAAAAAABAAAActwBAAAAAAAA3AEAAAAAAAABAAAAcNsBAAAAAAAA2wEAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAQAAAAAAAN4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": "prare"
					},
					"BQAAANsBAAAAAAAA3AEAAAAAAAAAAAAA3AEAAAAAAADdAQAAAAAAAAAAAADdAQAAAAAAAN4BAAAAAAAAAAAAAN4BAAAAAAAA3wEAAAAAAAAAAAAA3wEAAAAAAADgAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAQAAAAAAANsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1044,
					4,
					"left_delete",
					null,
					"BAAAAN8BAAAAAAAA3wEAAAAAAAABAAAAZd4BAAAAAAAA3gEAAAAAAAABAAAAct0BAAAAAAAA3QEAAAAAAAABAAAAYdwBAAAAAAAA3AEAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAQAAAAAAAOABAAAAAAAAAAAAAAAA8L8"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": "are"
					},
					"AwAAANwBAAAAAAAA3QEAAAAAAAAAAAAA3QEAAAAAAADeAQAAAAAAAAAAAADeAQAAAAAAAN8BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAQAAAAAAANwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1046,
					1,
					"insert",
					{
						"characters": " labels"
					},
					"BwAAAN8BAAAAAAAA4AEAAAAAAAAAAAAA4AEAAAAAAADhAQAAAAAAAAAAAADhAQAAAAAAAOIBAAAAAAAAAAAAAOIBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAAOUBAAAAAAAAAAAAAOUBAAAAAAAA5gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAQAAAAAAAN8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1047,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAADUBAAAAAAAANQEAAAAAAAACAAAAICD2AAAAAAAAAPYAAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAQAAAAAAAOYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1054,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAACAX0A"
				],
				[
					1061,
					4,
					"left_delete",
					null,
					"BAAAADQCAAAAAAAANAIAAAAAAAACAAAAICAyAgAAAAAAADICAAAAAAAAAgAAACAgMAIAAAAAAAAwAgAAAAAAAAIAAAAgIC8CAAAAAAAALwIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAAS0A"
				],
				[
					1068,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8CAAAAAAAAMAIAAAAAAAAAAAAAMAIAAAAAAAA2AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAACAX0A"
				],
				[
					1069,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAADACAAAAAAAAMAIAAAAAAAAGAAAAICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1075,
					1,
					"right_delete",
					null,
					"AQAAAJ8CAAAAAAAAnwIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAAAAA"
				],
				[
					1077,
					1,
					"left_delete",
					null,
					"AQAAAJ4CAAAAAAAAngIAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAgAAAAAAAJ4CAAAAAAAAAAAAAAAAAAA"
				],
				[
					1088,
					1,
					"reindent",
					null,
					"AQAAAJ8CAAAAAAAAoQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAgAAAAAAAJ8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKECAAAAAAAAogIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAgAAAAAAAKECAAAAAAAAAAAAAAAA8L8"
				],
				[
					1093,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKICAAAAAAAAowIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAgAAAAAAAKICAAAAAAAAAAAAAAAA8L8"
				],
				[
					1095,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAKMCAAAAAAAApAIAAAAAAAAAAAAApAIAAAAAAAClAgAAAAAAAAAAAAClAgAAAAAAAKYCAAAAAAAAAAAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAgAAAAAAAKMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1096,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkCAAAAAAAAqgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAgAAAAAAAKkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1098,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAKoCAAAAAAAAqwIAAAAAAAAAAAAAqwIAAAAAAACsAgAAAAAAAAAAAACsAgAAAAAAAK0CAAAAAAAAAAAAAK0CAAAAAAAArgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAgAAAAAAAKoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAACwAgAAAAAAALECAAAAAAAAAAAAALECAAAAAAAAsgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAgAAAAAAAK4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1100,
					1,
					"insert",
					{
						"characters": " labels"
					},
					"BwAAALICAAAAAAAAswIAAAAAAAAAAAAAswIAAAAAAAC0AgAAAAAAAAAAAAC0AgAAAAAAALUCAAAAAAAAAAAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC3AgAAAAAAAAAAAAC3AgAAAAAAALgCAAAAAAAAAAAAALgCAAAAAAAAuQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAgAAAAAAALICAAAAAAAAAAAAAAAA8L8"
				],
				[
					1114,
					3,
					"left_delete",
					null,
					"AwAAAAkDAAAAAAAACQMAAAAAAAAGAAAAJ3EzXzMnCAMAAAAAAAAIAwAAAAAAAAEAAAAgBwMAAAAAAAAHAwAAAAAAAAEAAAAs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAcDAAAAAAAACAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAwAAAAAAAAcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1132,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgDAAAAAAAACQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAwAAAAAAAAgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1133,
					1,
					"",
					null,
					"AQAAAAkDAAAAAAAACgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1134,
					1,
					"",
					null,
					"AQAAAAkDAAAAAAAACQMAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1135,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAkDAAAAAAAACwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1136,
					1,
					"insert",
					{
						"characters": "q3-3"
					},
					"BAAAAAoDAAAAAAAACwMAAAAAAAAAAAAACwMAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAA0DAAAAAAAAAAAAAA0DAAAAAAAADgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1137,
					2,
					"left_delete",
					null,
					"AgAAAA0DAAAAAAAADQMAAAAAAAABAAAAMwwDAAAAAAAADAMAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAwAAAAAAAA4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1138,
					1,
					"insert",
					{
						"characters": "_3"
					},
					"AgAAAAwDAAAAAAAADQMAAAAAAAAAAAAADQMAAAAAAAAOAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAwAAAAAAAAwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1144,
					1,
					"right_delete",
					null,
					"AQAAAGACAAAAAAAAYAIAAAAAAAAJAAAAcHJlcGFyZWRf",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAgAAAAAAAGACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1161,
					1,
					"insert",
					{
						"characters": "se"
					},
					"AgAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AgAAAAAAAHgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1163,
					4,
					"left_delete",
					null,
					"BAAAAHkCAAAAAAAAeQIAAAAAAAABAAAAZXgCAAAAAAAAeAIAAAAAAAABAAAAc3cCAAAAAAAAdwIAAAAAAAABAAAAdXYCAAAAAAAAdgIAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6AgAAAAAAAHoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": "select"
					},
					"BgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB4AgAAAAAAAAAAAAB4AgAAAAAAAHkCAAAAAAAAAAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AgAAAAAAAHYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1165,
					2,
					"right_delete",
					null,
					"AgAAAHwCAAAAAAAAfAIAAAAAAAABAAAAbHwCAAAAAAAAfAIAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AgAAAAAAAHwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1167,
					1,
					"insert",
					{
						"characters": "\nul"
					},
					"BAAAAIMCAAAAAAAAhAIAAAAAAAAAAAAAhAIAAAAAAACKAgAAAAAAAAAAAACKAgAAAAAAAIsCAAAAAAAAAAAAAIsCAAAAAAAAjAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAgAAAAAAAIMCAAAAAAAA////////738"
				],
				[
					1169,
					1,
					"left_delete",
					null,
					"AQAAAIsCAAAAAAAAiwIAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAgAAAAAAAIwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1170,
					1,
					"insert",
					{
						"characters": "nlist"
					},
					"BQAAAIsCAAAAAAAAjAIAAAAAAAAAAAAAjAIAAAAAAACNAgAAAAAAAAAAAACNAgAAAAAAAI4CAAAAAAAAAAAAAI4CAAAAAAAAjwIAAAAAAAAAAAAAjwIAAAAAAACQAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAgAAAAAAAIsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1171,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJACAAAAAAAAkgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAgAAAAAAAJACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAJICAAAAAAAAlwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAgAAAAAAAJICAAAAAAAAAAAAAAAA8L8"
				],
				[
					1174,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAJYCAAAAAAAAlgIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAgAAAAAAAJcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1189,
					3,
					"left_delete",
					null,
					"AwAAABUDAAAAAAAAFQMAAAAAAAAGAAAAJ3EzXzMnFAMAAAAAAAAUAwAAAAAAAAEAAAAgEwMAAAAAAAATAwAAAAAAAAEAAAAs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAwAAAAAAABUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1200,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AgAAAHYCAAAAAAAAdwIAAAAAAAAAAAAAdwIAAAAAAAB3AgAAAAAAAAYAAABzZWxlY3Q",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AgAAAAAAAHwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAHcCAAAAAAAAeAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AgAAAAAAAHcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1204,
					1,
					"insert",
					{
						"characters": "yr"
					},
					"AgAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB6AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AgAAAAAAAHgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1210,
					1,
					"insert",
					{
						"characters": "prepared_"
					},
					"CQAAAGACAAAAAAAAYQIAAAAAAAAAAAAAYQIAAAAAAABiAgAAAAAAAAAAAABiAgAAAAAAAGMCAAAAAAAAAAAAAGMCAAAAAAAAZAIAAAAAAAAAAAAAZAIAAAAAAABlAgAAAAAAAAAAAABlAgAAAAAAAGYCAAAAAAAAAAAAAGYCAAAAAAAAZwIAAAAAAAAAAAAAZwIAAAAAAABoAgAAAAAAAAAAAABoAgAAAAAAAGkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAgAAAAAAAGACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1218,
					3,
					"right_delete",
					null,
					"AwAAAIACAAAAAAAAgAIAAAAAAAABAAAAbIACAAAAAAAAgAIAAAAAAAABAAAAeYACAAAAAAAAgAIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAACAX0A"
				],
				[
					1219,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAIACAAAAAAAAgQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1221,
					1,
					"insert",
					{
						"characters": "ll"
					},
					"AgAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAgAAAAAAAIECAAAAAAAAAAAAAAAA8L8"
				],
				[
					1240,
					1,
					"cut",
					null,
					"AQAAAIsCAAAAAAAAiwIAAAAAAAATAAAAICAgICAgdW5saXN0KCkgJT4lCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAgAAAAAAAI4CAAAAAAAAAAAAAAAAO0A"
				],
				[
					1250,
					9,
					"right_delete",
					null,
					"CQAAAGACAAAAAAAAYAIAAAAAAAABAAAAcGACAAAAAAAAYAIAAAAAAAABAAAAcmACAAAAAAAAYAIAAAAAAAABAAAAZWACAAAAAAAAYAIAAAAAAAABAAAAcGACAAAAAAAAYAIAAAAAAAABAAAAYWACAAAAAAAAYAIAAAAAAAABAAAAcmACAAAAAAAAYAIAAAAAAAABAAAAZWACAAAAAAAAYAIAAAAAAAABAAAAZGACAAAAAAAAYAIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAgAAAAAAAGACAAAAAAAAAAAAAACAX0A"
				],
				[
					1261,
					1,
					"insert",
					{
						"characters": "preparete"
					},
					"CQAAAFMBAAAAAAAAVAEAAAAAAAAAAAAAVAEAAAAAAABVAQAAAAAAAAAAAABVAQAAAAAAAFYBAAAAAAAAAAAAAFYBAAAAAAAAVwEAAAAAAAAAAAAAVwEAAAAAAABYAQAAAAAAAAAAAABYAQAAAAAAAFkBAAAAAAAAAAAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAQAAAAAAAFMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1262,
					2,
					"left_delete",
					null,
					"AgAAAFsBAAAAAAAAWwEAAAAAAAABAAAAZVoBAAAAAAAAWgEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcAQAAAAAAAFwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1263,
					1,
					"insert",
					{
						"characters": "d_"
					},
					"AgAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABcAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaAQAAAAAAAFoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1271,
					1,
					"reindent",
					null,
					"AQAAADMBAAAAAAAANwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1274,
					1,
					"insert",
					{
						"characters": "grpu"
					},
					"BAAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1275,
					2,
					"left_delete",
					null,
					"AgAAADoBAAAAAAAAOgEAAAAAAAABAAAAdTkBAAAAAAAAOQEAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1276,
					1,
					"insert",
					{
						"characters": "oup <- "
					},
					"BAAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAQAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AQAAAAAAADkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1277,
					1,
					"",
					null,
					"AQAAAEABAAAAAAAAQQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAQAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				],
				[
					1278,
					1,
					"",
					null,
					"AQAAAEABAAAAAAAAQAEAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1279,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAEABAAAAAAAAQgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAQAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				],
				[
					1280,
					1,
					"insert",
					{
						"characters": "q3_3"
					},
					"BAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1289,
					1,
					"cut",
					null,
					"AQAAADMBAAAAAAAAMwEAAAAAAAAUAAAAICAgIGdyb3VwIDwtICdxM18zJwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1291,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADMBAAAAAAAANAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1315,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAcDAAAAAAAACAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAwAAAAAAAAcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1316,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAgDAAAAAAAACQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAwAAAAAAAAgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1317,
					1,
					"",
					null,
					"AQAAAAkDAAAAAAAACgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1318,
					1,
					"",
					null,
					"AQAAAAkDAAAAAAAACQMAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1319,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAkDAAAAAAAACwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1320,
					1,
					"insert",
					{
						"characters": "q3_3"
					},
					"BAAAAAoDAAAAAAAACwMAAAAAAAAAAAAACwMAAAAAAAAMAwAAAAAAAAAAAAAMAwAAAAAAAA0DAAAAAAAAAAAAAA0DAAAAAAAADgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAwAAAAAAAAoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1325,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPUBAAAAAAAA9gEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1AQAAAAAAAPUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1356,
					1,
					"cut",
					null,
					"AQAAAMYAAAAAAAAAxgAAAAAAAAAjAgAAZXh0cmFjdF9sYWJlbHMgPC0gZnVuY3Rpb24oZGF0YSwgZ3JvdXAgPSBOVUxMKXsKCiAgIyBhcHBseSBncm91cCBmaWx0ZXIgaWYgYXNzaWduZWQKICBpZiAoIWlzLm51bGwoZ3JvdXApKSB7CgogICAgIyBwcmVwYXJlIGRhdGEKICAgIGRhdGEgPC0gcHJlcGFyZWRfZGF0YSAlPiUKICAgICAgZHBseXI6Omdyb3VwX2J5KCEhYXMubmFtZShncm91cCkpICU+JQogICAgICBkcGx5cjo6YXJyYW5nZShkcGx5cjo6ZGVzYyguZGF0YSRhYnNfdG90YWwpLCAuYnlfZ3JvdXAgPSBUUlVFKQoKICAgICMgcHJlcGFyZSBsYWJlbHMKICAgIGxhYmVscyA8LSBkYXRhICU+JQogICAgICBkcGx5cjo6cHVsbCghIWFzLm5hbWUoZ3JvdXApKSAlPiUKICAgICAgdW5pcXVlKCkKCiAgfSBlbHNlIHsKCiAgICAjIGV4dHJhY3QgbGFiZWxzCiAgICBsYWJlbHMgPC0gZGF0YSAlPiUKICAgICAgZHBseXI6OnB1bGwoMSkgJT4lCiAgICAgIHVuaXF1ZSgpCiAgfQoKICAjIHJldHVybiBkYXRhIGFuZCBsYWJlbHMKICByZXR1cm4obGlzdChkYXRhID0gZGF0YSwgbGFiZWxzID0gbGFiZWxzKSkKfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAgAAAAAAAMYAAAAAAAAAAAAAAAAAAAA"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				],
				[
					"Packages/User/LaTeX.sublime-build",
					""
				],
				[
					"Packages/User/LaTeX.sublime-build",
					"Build Bibliography"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"PdfLaTeX"
			]
		],
		[
			[
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/SendCode/support/R - Source File.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rena",
				"File: Rename"
			],
			[
				"duplica",
				"File: Duplicate"
			],
			[
				"format r",
				"R-Box: Format Selected Code"
			],
			[
				"swap",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"ter",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"git pus",
				"git: push"
			],
			[
				"add remote",
				"git: remote add"
			],
			[
				"set remote",
				"github: set remote for integration"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"re",
				"Rename File"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"swa",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"git st",
				"git: status"
			],
			[
				"git clo",
				"git: clone"
			],
			[
				"send co",
				"SendCode: Choose Program"
			],
			[
				"R IDE",
				"Preferences: R-IDE Settings"
			],
			[
				"view toggl",
				"View: Toggle Tabs"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"title",
				"Convert Case: Title Case"
			],
			[
				"swpa",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"Rmkar",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"git stat",
				"git: status"
			],
			[
				"git remote a",
				"git: remote add"
			],
			[
				"git remove",
				"git: remote remove"
			],
			[
				"git add remote",
				"git: remote add"
			],
			[
				"git remote add",
				"git: remote add"
			],
			[
				"git remote",
				"github: set remote for integration"
			],
			[
				"git",
				"git: commit"
			],
			[
				"git remo",
				"git: remote remove"
			],
			[
				"git remode",
				"git: remote add"
			],
			[
				"quote",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"git status",
				"git: status"
			],
			[
				"git ",
				"git: commit"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"R-ID",
				"Preferences: R-IDE Settings"
			],
			[
				"LSP",
				"LSP: Enable Language Server Globally"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"file dupl",
				"File: Duplicate"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"move",
				"File: Move"
			],
			[
				"MOVE",
				"File: Move"
			],
			[
				"syntax RM",
				"Set Syntax: R Markdown"
			],
			[
				"build",
				"Build With: knitr - Run"
			],
			[
				"syntax rm",
				"Set Syntax: R Markdown"
			],
			[
				"buil",
				"Build: New Build System"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"syntax Rmd",
				"Set Syntax: R Markdown"
			],
			[
				"file move",
				"File: Move"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"syntax HT",
				"Set Syntax: HTML"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"wrap",
				"Wrap at Ruler"
			],
			[
				"bla",
				"Sublack: Format file"
			],
			[
				"black",
				"Sublack: Format file"
			],
			[
				"sub",
				"Sublack: Format file"
			],
			[
				"Sublack",
				"Sublack: Format file"
			],
			[
				"package contr",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"latex",
				"LaTeXTools: Check system"
			],
			[
				"preferences",
				"Preferences: Settings"
			],
			[
				"latext",
				"LaTeXTools: Check system"
			],
			[
				"file ren",
				"File: Rename"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"uit ",
				"UI: Select Theme"
			],
			[
				"package control i",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"Title",
				"Convert Case: Title Case"
			],
			[
				"syntax pyt",
				"Set Syntax: Python"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"terminus tab",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"package sync",
				"Package Syncing: Disable Syncing"
			],
			[
				"color sch",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 415.0,
		"history":
		[
			"exit()",
			"exit",
			"os.getcwd()",
			"import os",
			"which python"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts"
	],
	"file_history":
	[
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/codecov.yml",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/querido-diario-data-processing/index/elasticsearch.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat/test-app.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/functions.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw/survey_data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/03_deploy.R",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Management/translated_files.csv",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Scripts/03_processTranscripts.py",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Scripts/05_populateData.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/.gitignore",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/dev/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/untitledsurv",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/01_start.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/dev/01_start.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/untitled",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat/test-golem-recommended.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey_data.rda",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/.Rhistory",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey_data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_01_welcome.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_08_acknowledgement.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/mod_input.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/mod_geral.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/app_server.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/app_ui.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_07_senseofus.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_06_return.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_05_attachment.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_04_experience.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_03_demographics.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_02_selection.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/app_ui.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/README.Rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/dev copy/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/00_main.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/01_wrangleData.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/06_intent_of_returning.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/00_replication.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/07_text.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/scripts/00_replication.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/run_app.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/app.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/05_attachment.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/04_experience.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/03_demographics.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/02_selection.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/scratch/01_accessAPI.py",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/querido-diario-data-processing/data_extraction/text_extraction.py",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_extraction.sh",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/05_sourceOccupations.py",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2021 Políticos Litigantes/manuscript/01 Folha de Rosto.docx",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/tools_final01.csv",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/tools_focal.csv",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/A-01/pageimage_04.png",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/source_tools_A.txt",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/A-01/pageimage_07.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/manuscript/Analysis.rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/11_analyzeText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot40_identity.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot31_reasons_for_return.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot41_wall.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/q3_6_languages.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/08_conjoint.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/10_translateText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/requirements.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2018 Discretion and corruption/discretionperformance/analysis/12-DiscretionCorruption-Analysis.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2019 Electoral Crime/scripts/11_tse_analysis.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/survey_data.csv",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Q3_2-Q3_5_Sankey diagram.do",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/colombia.txt",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/test.txt",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/colombia_final.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/data.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data-raw/data.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/code_sample.rmd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/assumpcao.rmd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/functions.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/tests/testthat/test-CJIL.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.gitignore",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/create_package.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.Rproj.user/0FBC00F5/pcs/workbench-pane.pper",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/README.md",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/tests/testthat.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/data_XXX.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/man/nccourts.Rd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data-raw/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/data-raw/process.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL_draft/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/LICENSE.md",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/CJIL.Rproj",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.Rproj.user/shared/notebooks/paths",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/functions.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/replication_script.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Analysis.rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/python_environment.sh",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/12_analyzeText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/XX_analyzeText.py",
		"/Users/aassumpcao/nltk_data/corpora/stopwords/spanish",
		"/Users/aassumpcao/Dropbox (CID)/Colombia Diaspora/survey/Analysis/scripts/10_translateText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/07_conjoint.R",
		"/Users/aassumpcao/Dropbox (CID)/Albanian Diaspora Survey/scripts/01_processSurvey.R",
		"/Users/aassumpcao/Dropbox (CID)/Albanian Diaspora Survey/scripts/02_analyzeConjoints.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Login Shell",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2021 BID Administração Tributária/dados/base_mapeamento.csv",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Scripts/02_populateMetadata.py",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Data/data_batch2A.csv",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Data/data_batch1A.csv",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Completed Scripts/2A/012_translation.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Completed Scripts/2A/124_translation.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2021 Políticos Litigantes/scripts/02_analyzeData.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/02_demographics.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/03_experience.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Analysis.Rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-raw/Colombia+Diaspora+Survey+VF_February+11%2C+2021_14.06.zip"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"prepared_data",
			"prepared_",
			"prepare"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dev/02_dev.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2270,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"stats",
								"base",
								"grDevices",
								"graphics",
								"methods",
								"utils"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 140,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1615580882.44,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dev/03_deploy.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1012,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"stats",
								"base",
								"grDevices",
								"graphics",
								"methods",
								"utils"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 106,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1615580882.97,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dev/run_dev.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 318,
						"regions":
						{
						},
						"selection":
						[
							[
								317,
								317
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"stats",
								"base",
								"grDevices",
								"graphics",
								"methods",
								"utils"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 28,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										316,
										317
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										315,
										316
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1615580892.3,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "R/fct_helpers.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3324,
						"regions":
						{
						},
						"selection":
						[
							[
								235,
								235
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"stats",
								"base",
								"grDevices",
								"graphics",
								"methods",
								"utils"
							],
							"WordCount":
							{
								"changes": 302,
								"count": 198,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										234,
										235
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										222,
										223
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"gutter": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1615664429.0,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 514.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/02_selection.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14538,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"lode_leftward\t{ggalluvial}",
									"lode_leftward"
								],
								[
									"StatAlluvium\t{ggalluvial}",
									"StatAlluvium"
								],
								[
									"to_alluvia_form\t{ggalluvial}",
									"to_alluvia_form"
								],
								[
									"stat_alluvium\t{ggalluvial}",
									"stat_alluvium"
								],
								[
									"lode_zigzag\t{ggalluvial}",
									"lode_zigzag"
								],
								[
									"lode_zagzig\t{ggalluvial}",
									"lode_zagzig"
								],
								[
									"lode_leftright\t{ggalluvial}",
									"lode_leftright"
								],
								[
									"lode_forward\t{ggalluvial}",
									"lode_forward"
								],
								[
									"lode_rightleft\t{ggalluvial}",
									"lode_rightleft"
								],
								[
									"lode_backfront\t{ggalluvial}",
									"lode_backfront"
								],
								[
									"geom_lode\t{ggalluvial}",
									"geom_lode"
								],
								[
									"GeomStratum\t{ggalluvial}",
									"GeomStratum"
								],
								[
									"self_adjoin\t{ggalluvial}",
									"self_adjoin"
								],
								[
									"stat_stratum\t{ggalluvial}",
									"stat_stratum"
								],
								[
									"lode_rightward\t{ggalluvial}",
									"lode_rightward"
								],
								[
									"StatFlow\t{ggalluvial}",
									"StatFlow"
								],
								[
									"to_alluvia\t{ggalluvial}",
									"to_alluvia"
								],
								[
									"is_alluvial_alluvia\t{ggalluvial}",
									"is_alluvial_alluvia"
								],
								[
									"is_alluvia_form\t{ggalluvial}",
									"is_alluvia_form"
								],
								[
									"lode_backward\t{ggalluvial}",
									"lode_backward"
								],
								[
									"GeomLode\t{ggalluvial}",
									"GeomLode"
								],
								[
									"geom_stratum\t{ggalluvial}",
									"geom_stratum"
								],
								[
									"to_lodes\t{ggalluvial}",
									"to_lodes"
								],
								[
									"geom_alluvium\t{ggalluvial}",
									"geom_alluvium"
								],
								[
									"to_lodes_form\t{ggalluvial}",
									"to_lodes_form"
								],
								[
									"is_alluvial_lodes\t{ggalluvial}",
									"is_alluvial_lodes"
								],
								[
									"is_lodes_form\t{ggalluvial}",
									"is_lodes_form"
								],
								[
									"GeomAlluvium\t{ggalluvial}",
									"GeomAlluvium"
								],
								[
									"geom_flow\t{ggalluvial}",
									"geom_flow"
								],
								[
									"lode_frontback\t{ggalluvial}",
									"lode_frontback"
								],
								[
									"StatStratum\t{ggalluvial}",
									"StatStratum"
								],
								[
									"stat_flow\t{ggalluvial}",
									"stat_flow"
								],
								[
									"is_alluvial\t{ggalluvial}",
									"is_alluvial"
								],
								[
									"GeomFlow\t{ggalluvial}",
									"GeomFlow"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"tidyverse_logo\t{tidyverse}",
									"tidyverse_logo"
								],
								[
									"tidyverse_update\t{tidyverse}",
									"tidyverse_update"
								],
								[
									"tidyverse_conflicts\t{tidyverse}",
									"tidyverse_conflicts"
								],
								[
									"tidyverse_packages\t{tidyverse}",
									"tidyverse_packages"
								],
								[
									"tidyverse_deps\t{tidyverse}",
									"tidyverse_deps"
								],
								[
									"tidyverse_sitrep\t{tidyverse}",
									"tidyverse_sitrep"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"multiply_by_matrix\t{magrittr}",
									"multiply_by_matrix"
								],
								[
									"raise_to_power\t{magrittr}",
									"raise_to_power"
								],
								[
									"inset2\t{magrittr}",
									"inset2"
								],
								[
									"set_attributes\t{magrittr}",
									"set_attributes"
								],
								[
									"extract\t{magrittr}",
									"extract"
								],
								[
									"divide_by_int\t{magrittr}",
									"divide_by_int"
								],
								[
									"is_less_than\t{magrittr}",
									"is_less_than"
								],
								[
									"undebug_fseq\t{magrittr}",
									"undebug_fseq"
								],
								[
									"multiply_by\t{magrittr}",
									"multiply_by"
								],
								[
									"or\t{magrittr}",
									"or"
								],
								[
									"use_series\t{magrittr}",
									"use_series"
								],
								[
									"set_rownames\t{magrittr}",
									"set_rownames"
								],
								[
									"equals\t{magrittr}",
									"equals"
								],
								[
									"not\t{magrittr}",
									"not"
								],
								[
									"add\t{magrittr}",
									"add"
								],
								[
									"inset\t{magrittr}",
									"inset"
								],
								[
									"and\t{magrittr}",
									"and"
								],
								[
									"debug_pipe\t{magrittr}",
									"debug_pipe"
								],
								[
									"divide_by\t{magrittr}",
									"divide_by"
								],
								[
									"debug_fseq\t{magrittr}",
									"debug_fseq"
								],
								[
									"set_names\t{magrittr}",
									"set_names"
								],
								[
									"mod\t{magrittr}",
									"mod"
								],
								[
									"set_attr\t{magrittr}",
									"set_attr"
								],
								[
									"extract2\t{magrittr}",
									"extract2"
								],
								[
									"set_colnames\t{magrittr}",
									"set_colnames"
								],
								[
									"pas\t{magrittr}",
									"pas"
								],
								[
									"subtract\t{magrittr}",
									"subtract"
								],
								[
									"freduce\t{magrittr}",
									"freduce"
								],
								[
									"is_weakly_less_than\t{magrittr}",
									"is_weakly_less_than"
								],
								[
									"is_in\t{magrittr}",
									"is_in"
								],
								[
									"is_weakly_greater_than\t{magrittr}",
									"is_weakly_greater_than"
								],
								[
									"set_class\t{magrittr}",
									"set_class"
								],
								[
									"functions\t{magrittr}",
									"functions"
								],
								[
									"pipe_nested\t{magrittr}",
									"pipe_nested"
								],
								[
									"pipe_eager_lexical\t{magrittr}",
									"pipe_eager_lexical"
								],
								[
									"is_greater_than\t{magrittr}",
									"is_greater_than"
								],
								[
									"pipe_lazy_masking\t{magrittr}",
									"pipe_lazy_masking"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"ggalluvial",
								"stats",
								"base",
								"tidyverse",
								"grDevices",
								"graphics",
								"methods",
								"utils",
								"magrittr"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 802,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1615581148.32,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 5,
					"file": "dev/04_scratch.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 391,
						"regions":
						{
						},
						"selection":
						[
							[
								391,
								391
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"tidyverse_logo\t{tidyverse}",
									"tidyverse_logo"
								],
								[
									"tidyverse_update\t{tidyverse}",
									"tidyverse_update"
								],
								[
									"tidyverse_conflicts\t{tidyverse}",
									"tidyverse_conflicts"
								],
								[
									"tidyverse_packages\t{tidyverse}",
									"tidyverse_packages"
								],
								[
									"tidyverse_deps\t{tidyverse}",
									"tidyverse_deps"
								],
								[
									"tidyverse_sitrep\t{tidyverse}",
									"tidyverse_sitrep"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"is_dbl_na\t{rlang}",
									"is_dbl_na"
								],
								[
									"coerce_class\t{rlang}",
									"coerce_class"
								],
								[
									"as_quosure\t{rlang}",
									"as_quosure"
								],
								[
									"is_weakref\t{rlang}",
									"is_weakref"
								],
								[
									"as_quosures\t{rlang}",
									"as_quosures"
								],
								[
									"quo_get_env\t{rlang}",
									"quo_get_env"
								],
								[
									"return_to\t{rlang}",
									"return_to"
								],
								[
									"env_binding_are_lazy\t{rlang}",
									"env_binding_are_lazy"
								],
								[
									"quo_is_call\t{rlang}",
									"quo_is_call"
								],
								[
									"new_call\t{rlang}",
									"new_call"
								],
								[
									"is_scoped\t{rlang}",
									"is_scoped"
								],
								[
									"set_names\t{rlang}",
									"set_names"
								],
								[
									"expr_deparse\t{rlang}",
									"expr_deparse"
								],
								[
									"as_box_if\t{rlang}",
									"as_box_if"
								],
								[
									"lang_head\t{rlang}",
									"lang_head"
								],
								[
									"ns_env\t{rlang}",
									"ns_env"
								],
								[
									"list_along\t{rlang}",
									"list_along"
								],
								[
									"parse_quo\t{rlang}",
									"parse_quo"
								],
								[
									"lang_tail\t{rlang}",
									"lang_tail"
								],
								[
									"env_bind_fns\t{rlang}",
									"env_bind_fns"
								],
								[
									"is_bare_atomic\t{rlang}",
									"is_bare_atomic"
								],
								[
									"cnd_header\t{rlang}",
									"cnd_header"
								],
								[
									"as_utf8_character\t{rlang}",
									"as_utf8_character"
								],
								[
									"lang\t{rlang}",
									"lang"
								],
								[
									"check_installed\t{rlang}",
									"check_installed"
								],
								[
									"is_callable\t{rlang}",
									"is_callable"
								],
								[
									"as_name\t{rlang}",
									"as_name"
								],
								[
									"eval_bare\t{rlang}",
									"eval_bare"
								],
								[
									"is_lambda\t{rlang}",
									"is_lambda"
								],
								[
									"pairlist2\t{rlang}",
									"pairlist2"
								],
								[
									"switch_class\t{rlang}",
									"switch_class"
								],
								[
									"call_args\t{rlang}",
									"call_args"
								],
								[
									"quo_name\t{rlang}",
									"quo_name"
								],
								[
									"is_list\t{rlang}",
									"is_list"
								],
								[
									"new_character_along\t{rlang}",
									"new_character_along"
								],
								[
									"env_bind_active\t{rlang}",
									"env_bind_active"
								],
								[
									"is_dictionaryish\t{rlang}",
									"is_dictionaryish"
								],
								[
									"is_stack\t{rlang}",
									"is_stack"
								],
								[
									"is_bare_list\t{rlang}",
									"is_bare_list"
								],
								[
									"is_integerish\t{rlang}",
									"is_integerish"
								],
								[
									"chr_along\t{rlang}",
									"chr_along"
								],
								[
									"rst_jump\t{rlang}",
									"rst_jump"
								],
								[
									"env_name\t{rlang}",
									"env_name"
								],
								[
									"quo_text\t{rlang}",
									"quo_text"
								],
								[
									"env_length\t{rlang}",
									"env_length"
								],
								[
									"cnd_muffle\t{rlang}",
									"cnd_muffle"
								],
								[
									"env_unbind\t{rlang}",
									"env_unbind"
								],
								[
									"mut_attrs\t{rlang}",
									"mut_attrs"
								],
								[
									"quo_set_expr\t{rlang}",
									"quo_set_expr"
								],
								[
									"is_zap\t{rlang}",
									"is_zap"
								],
								[
									"is_scalar_vector\t{rlang}",
									"is_scalar_vector"
								],
								[
									"is_scalar_raw\t{rlang}",
									"is_scalar_raw"
								],
								[
									"signal\t{rlang}",
									"signal"
								],
								[
									"is_bare_raw\t{rlang}",
									"is_bare_raw"
								],
								[
									"new_data_mask\t{rlang}",
									"new_data_mask"
								],
								[
									"warn\t{rlang}",
									"warn"
								],
								[
									"as_data_pronoun\t{rlang}",
									"as_data_pronoun"
								],
								[
									"exec\t{rlang}",
									"exec"
								],
								[
									"squash_raw\t{rlang}",
									"squash_raw"
								],
								[
									"is_formula\t{rlang}",
									"is_formula"
								],
								[
									"call_standardise\t{rlang}",
									"call_standardise"
								],
								[
									"is_raw\t{rlang}",
									"is_raw"
								],
								[
									"rst_maybe_jump\t{rlang}",
									"rst_maybe_jump"
								],
								[
									"int\t{rlang}",
									"int"
								],
								[
									"as_overscope\t{rlang}",
									"as_overscope"
								],
								[
									"new_double\t{rlang}",
									"new_double"
								],
								[
									"is_symbolic\t{rlang}",
									"is_symbolic"
								],
								[
									"enquos\t{rlang}",
									"enquos"
								],
								[
									"set_expr\t{rlang}",
									"set_expr"
								],
								[
									"search_env\t{rlang}",
									"search_env"
								],
								[
									"rst_abort\t{rlang}",
									"rst_abort"
								],
								[
									"new_integer\t{rlang}",
									"new_integer"
								],
								[
									"chr\t{rlang}",
									"chr"
								],
								[
									"entrace\t{rlang}",
									"entrace"
								],
								[
									"invoke\t{rlang}",
									"invoke"
								],
								[
									"enexpr\t{rlang}",
									"enexpr"
								],
								[
									"as_character\t{rlang}",
									"as_character"
								],
								[
									".data\t{rlang}",
									".data"
								],
								[
									"quo_is_symbolic\t{rlang}",
									"quo_is_symbolic"
								],
								[
									"bytes\t{rlang}",
									"bytes"
								],
								[
									"last_error\t{rlang}",
									"last_error"
								],
								[
									"is_done_box\t{rlang}",
									"is_done_box"
								],
								[
									"flatten_raw\t{rlang}",
									"flatten_raw"
								],
								[
									"is_node\t{rlang}",
									"is_node"
								],
								[
									"mut_node_cadr\t{rlang}",
									"mut_node_cadr"
								],
								[
									"as_complex\t{rlang}",
									"as_complex"
								],
								[
									".env\t{rlang}",
									".env"
								],
								[
									"locally\t{rlang}",
									"locally"
								],
								[
									"quo_label\t{rlang}",
									"quo_label"
								],
								[
									"new_list_along\t{rlang}",
									"new_list_along"
								],
								[
									"is_formulaish\t{rlang}",
									"is_formulaish"
								],
								[
									"pkg_env_name\t{rlang}",
									"pkg_env_name"
								],
								[
									"mut_node_caar\t{rlang}",
									"mut_node_caar"
								],
								[
									"is_call_stack\t{rlang}",
									"is_call_stack"
								],
								[
									"is_bare_numeric\t{rlang}",
									"is_bare_numeric"
								],
								[
									"arg_match\t{rlang}",
									"arg_match"
								],
								[
									"qq_show\t{rlang}",
									"qq_show"
								],
								[
									"is_character\t{rlang}",
									"is_character"
								],
								[
									"as_data_mask\t{rlang}",
									"as_data_mask"
								],
								[
									"zap\t{rlang}",
									"zap"
								],
								[
									"env_label\t{rlang}",
									"env_label"
								],
								[
									"scoped_options\t{rlang}",
									"scoped_options"
								],
								[
									"env_poke\t{rlang}",
									"env_poke"
								],
								[
									"is_lgl_na\t{rlang}",
									"is_lgl_na"
								],
								[
									"lang_args\t{rlang}",
									"lang_args"
								],
								[
									"cnd_body\t{rlang}",
									"cnd_body"
								],
								[
									"expr_text\t{rlang}",
									"expr_text"
								],
								[
									"is_null\t{rlang}",
									"is_null"
								],
								[
									"new_logical\t{rlang}",
									"new_logical"
								],
								[
									"peek_option\t{rlang}",
									"peek_option"
								],
								[
									"as_environment\t{rlang}",
									"as_environment"
								],
								[
									"type_of\t{rlang}",
									"type_of"
								],
								[
									"quo_is_symbol\t{rlang}",
									"quo_is_symbol"
								],
								[
									"restarting\t{rlang}",
									"restarting"
								],
								[
									"is_quosures\t{rlang}",
									"is_quosures"
								],
								[
									"is_integer\t{rlang}",
									"is_integer"
								],
								[
									"call_inspect\t{rlang}",
									"call_inspect"
								],
								[
									"as_pairlist\t{rlang}",
									"as_pairlist"
								],
								[
									"pkg_env\t{rlang}",
									"pkg_env"
								],
								[
									"ctxt_stack\t{rlang}",
									"ctxt_stack"
								],
								[
									"is_closure\t{rlang}",
									"is_closure"
								],
								[
									"is_expression\t{rlang}",
									"is_expression"
								],
								[
									"is_scalar_logical\t{rlang}",
									"is_scalar_logical"
								],
								[
									"env_bind_lazy\t{rlang}",
									"env_bind_lazy"
								],
								[
									"hash\t{rlang}",
									"hash"
								],
								[
									"new_raw_along\t{rlang}",
									"new_raw_along"
								],
								[
									"mut_node_cddr\t{rlang}",
									"mut_node_cddr"
								],
								[
									"cnd_entrace\t{rlang}",
									"cnd_entrace"
								],
								[
									"fn_body\t{rlang}",
									"fn_body"
								],
								[
									"modify\t{rlang}",
									"modify"
								],
								[
									"squash\t{rlang}",
									"squash"
								],
								[
									"is_scalar_integer\t{rlang}",
									"is_scalar_integer"
								],
								[
									"expr_name\t{rlang}",
									"expr_name"
								],
								[
									"fn_fmls\t{rlang}",
									"fn_fmls"
								],
								[
									"dots_list\t{rlang}",
									"dots_list"
								],
								[
									"search_envs\t{rlang}",
									"search_envs"
								],
								[
									"scoped_names\t{rlang}",
									"scoped_names"
								],
								[
									"is_cpl_na\t{rlang}",
									"is_cpl_na"
								],
								[
									"f_text\t{rlang}",
									"f_text"
								],
								[
									"quo_is_null\t{rlang}",
									"quo_is_null"
								],
								[
									"is_environment\t{rlang}",
									"is_environment"
								],
								[
									"stack_trim\t{rlang}",
									"stack_trim"
								],
								[
									"is_scalar_integerish\t{rlang}",
									"is_scalar_integerish"
								],
								[
									"cpl_len\t{rlang}",
									"cpl_len"
								],
								[
									"base_env\t{rlang}",
									"base_env"
								],
								[
									"dbl_len\t{rlang}",
									"dbl_len"
								],
								[
									"is_bare_formula\t{rlang}",
									"is_bare_formula"
								],
								[
									"is_na\t{rlang}",
									"is_na"
								],
								[
									"na_int\t{rlang}",
									"na_int"
								],
								[
									"mut_node_cdar\t{rlang}",
									"mut_node_cdar"
								],
								[
									"as_list\t{rlang}",
									"as_list"
								],
								[
									"as_function\t{rlang}",
									"as_function"
								],
								[
									"with_env\t{rlang}",
									"with_env"
								],
								[
									"error_cnd\t{rlang}",
									"error_cnd"
								],
								[
									"cnd\t{rlang}",
									"cnd"
								],
								[
									"na_chr\t{rlang}",
									"na_chr"
								],
								[
									"env_has\t{rlang}",
									"env_has"
								],
								[
									"env_browse\t{rlang}",
									"env_browse"
								],
								[
									"cnd_type\t{rlang}",
									"cnd_type"
								],
								[
									"env_lock\t{rlang}",
									"env_lock"
								],
								[
									"set_env\t{rlang}",
									"set_env"
								],
								[
									"is_bare_integer\t{rlang}",
									"is_bare_integer"
								],
								[
									"enquos0\t{rlang}",
									"enquos0"
								],
								[
									"squash_dbl\t{rlang}",
									"squash_dbl"
								],
								[
									"is_primitive\t{rlang}",
									"is_primitive"
								],
								[
									"chr_len\t{rlang}",
									"chr_len"
								],
								[
									"call2\t{rlang}",
									"call2"
								],
								[
									"new_complex_along\t{rlang}",
									"new_complex_along"
								],
								[
									"scoped_envs\t{rlang}",
									"scoped_envs"
								],
								[
									"dots_values\t{rlang}",
									"dots_values"
								],
								[
									"node\t{rlang}",
									"node"
								],
								[
									"parse_expr\t{rlang}",
									"parse_expr"
								],
								[
									"quo\t{rlang}",
									"quo"
								],
								[
									"arg_match0\t{rlang}",
									"arg_match0"
								],
								[
									"with_interactive\t{rlang}",
									"with_interactive"
								],
								[
									"int_along\t{rlang}",
									"int_along"
								],
								[
									"missing_arg\t{rlang}",
									"missing_arg"
								],
								[
									"is_empty\t{rlang}",
									"is_empty"
								],
								[
									"call_depth\t{rlang}",
									"call_depth"
								],
								[
									"flatten_dbl\t{rlang}",
									"flatten_dbl"
								],
								[
									"f_name\t{rlang}",
									"f_name"
								],
								[
									"trace_length\t{rlang}",
									"trace_length"
								],
								[
									"cpl_along\t{rlang}",
									"cpl_along"
								],
								[
									"format_error_bullets\t{rlang}",
									"format_error_bullets"
								],
								[
									"new_weakref\t{rlang}",
									"new_weakref"
								],
								[
									"is_eval_stack\t{rlang}",
									"is_eval_stack"
								],
								[
									"enexprs\t{rlang}",
									"enexprs"
								],
								[
									"caller_env\t{rlang}",
									"caller_env"
								],
								[
									"switch_type\t{rlang}",
									"switch_type"
								],
								[
									"call_fn\t{rlang}",
									"call_fn"
								],
								[
									"overscope_clean\t{rlang}",
									"overscope_clean"
								],
								[
									"eval_tidy\t{rlang}",
									"eval_tidy"
								],
								[
									"bytes_len\t{rlang}",
									"bytes_len"
								],
								[
									"UQS\t{rlang}",
									"UQS"
								],
								[
									"new_definition\t{rlang}",
									"new_definition"
								],
								[
									"is_scalar_character\t{rlang}",
									"is_scalar_character"
								],
								[
									"frame_position\t{rlang}",
									"frame_position"
								],
								[
									"cpl\t{rlang}",
									"cpl"
								],
								[
									"is_scalar_bytes\t{rlang}",
									"is_scalar_bytes"
								],
								[
									"call_modify\t{rlang}",
									"call_modify"
								],
								[
									"interrupt\t{rlang}",
									"interrupt"
								],
								[
									"local_bindings\t{rlang}",
									"local_bindings"
								],
								[
									"expr_label\t{rlang}",
									"expr_label"
								],
								[
									"squash_lgl\t{rlang}",
									"squash_lgl"
								],
								[
									"env_binding_are_locked\t{rlang}",
									"env_binding_are_locked"
								],
								[
									"new_quosures\t{rlang}",
									"new_quosures"
								],
								[
									"node_poke_tag\t{rlang}",
									"node_poke_tag"
								],
								[
									"seq2\t{rlang}",
									"seq2"
								],
								[
									"trace_back\t{rlang}",
									"trace_back"
								],
								[
									"new_double_along\t{rlang}",
									"new_double_along"
								],
								[
									"unbox\t{rlang}",
									"unbox"
								],
								[
									"empty_env\t{rlang}",
									"empty_env"
								],
								[
									"ll\t{rlang}",
									"ll"
								],
								[
									"node_poke_cdr\t{rlang}",
									"node_poke_cdr"
								],
								[
									"mut_node_tag\t{rlang}",
									"mut_node_tag"
								],
								[
									"lgl_len\t{rlang}",
									"lgl_len"
								],
								[
									"is_spliced\t{rlang}",
									"is_spliced"
								],
								[
									"as_integer\t{rlang}",
									"as_integer"
								],
								[
									"as_env\t{rlang}",
									"as_env"
								],
								[
									"is_missing\t{rlang}",
									"is_missing"
								],
								[
									"is_bool\t{rlang}",
									"is_bool"
								],
								[
									"env_get_list\t{rlang}",
									"env_get_list"
								],
								[
									"rep_along\t{rlang}",
									"rep_along"
								],
								[
									"is_frame\t{rlang}",
									"is_frame"
								],
								[
									"flatten_lgl\t{rlang}",
									"flatten_lgl"
								],
								[
									"UQ\t{rlang}",
									"UQ"
								],
								[
									"node_poke_car\t{rlang}",
									"node_poke_car"
								],
								[
									"new_integer_along\t{rlang}",
									"new_integer_along"
								],
								[
									"friendly_type\t{rlang}",
									"friendly_type"
								],
								[
									"as_closure\t{rlang}",
									"as_closure"
								],
								[
									"squash_int\t{rlang}",
									"squash_int"
								],
								[
									"is_env\t{rlang}",
									"is_env"
								],
								[
									"lang_modify\t{rlang}",
									"lang_modify"
								],
								[
									"dbl\t{rlang}",
									"dbl"
								],
								[
									"new_complex\t{rlang}",
									"new_complex"
								],
								[
									"env_binding_unlock\t{rlang}",
									"env_binding_unlock"
								],
								[
									"is_pairlist\t{rlang}",
									"is_pairlist"
								],
								[
									"ensyms\t{rlang}",
									"ensyms"
								],
								[
									"wref_value\t{rlang}",
									"wref_value"
								],
								[
									"new_formula\t{rlang}",
									"new_formula"
								],
								[
									"dots_splice\t{rlang}",
									"dots_splice"
								],
								[
									"get_env\t{rlang}",
									"get_env"
								],
								[
									"is_scalar_double\t{rlang}",
									"is_scalar_double"
								],
								[
									"parse_exprs\t{rlang}",
									"parse_exprs"
								],
								[
									"is_unary_lang\t{rlang}",
									"is_unary_lang"
								],
								[
									"enquo\t{rlang}",
									"enquo"
								],
								[
									"new_environment\t{rlang}",
									"new_environment"
								],
								[
									"with_options\t{rlang}",
									"with_options"
								],
								[
									"current_frame\t{rlang}",
									"current_frame"
								],
								[
									"caller_frame\t{rlang}",
									"caller_frame"
								],
								[
									"quos\t{rlang}",
									"quos"
								],
								[
									"env_names\t{rlang}",
									"env_names"
								],
								[
									"new_overscope\t{rlang}",
									"new_overscope"
								],
								[
									"is_int_na\t{rlang}",
									"is_int_na"
								],
								[
									"flatten_int\t{rlang}",
									"flatten_int"
								],
								[
									"dots_n\t{rlang}",
									"dots_n"
								],
								[
									"prim_name\t{rlang}",
									"prim_name"
								],
								[
									"list2\t{rlang}",
									"list2"
								],
								[
									"with_restarts\t{rlang}",
									"with_restarts"
								],
								[
									"cnd_message\t{rlang}",
									"cnd_message"
								],
								[
									"env_get\t{rlang}",
									"env_get"
								],
								[
									"is_true\t{rlang}",
									"is_true"
								],
								[
									"quo_get_expr\t{rlang}",
									"quo_get_expr"
								],
								[
									"is_atomic\t{rlang}",
									"is_atomic"
								],
								[
									"is_binary_lang\t{rlang}",
									"is_binary_lang"
								],
								[
									"squash_if\t{rlang}",
									"squash_if"
								],
								[
									"is_syntactic_literal\t{rlang}",
									"is_syntactic_literal"
								],
								[
									"expr\t{rlang}",
									"expr"
								],
								[
									"peek_options\t{rlang}",
									"peek_options"
								],
								[
									"is_named\t{rlang}",
									"is_named"
								],
								[
									"is_function\t{rlang}",
									"is_function"
								],
								[
									"ns_imports_env\t{rlang}",
									"ns_imports_env"
								],
								[
									"get_expr\t{rlang}",
									"get_expr"
								],
								[
									"global_env\t{rlang}",
									"global_env"
								],
								[
									"inform\t{rlang}",
									"inform"
								],
								[
									"inherits_all\t{rlang}",
									"inherits_all"
								],
								[
									"rst_exists\t{rlang}",
									"rst_exists"
								],
								[
									"is_chr_na\t{rlang}",
									"is_chr_na"
								],
								[
									"has_name\t{rlang}",
									"has_name"
								],
								[
									"env_parents\t{rlang}",
									"env_parents"
								],
								[
									"fn_fmls_syms\t{rlang}",
									"fn_fmls_syms"
								],
								[
									"f_label\t{rlang}",
									"f_label"
								],
								[
									"env_is_locked\t{rlang}",
									"env_is_locked"
								],
								[
									"is_namespace\t{rlang}",
									"is_namespace"
								],
								[
									"int_len\t{rlang}",
									"int_len"
								],
								[
									"env\t{rlang}",
									"env"
								],
								[
									"inherits_any\t{rlang}",
									"inherits_any"
								],
								[
									"quos_auto_name\t{rlang}",
									"quos_auto_name"
								],
								[
									"na_cpl\t{rlang}",
									"na_cpl"
								],
								[
									"push_options\t{rlang}",
									"push_options"
								],
								[
									"is_bare_double\t{rlang}",
									"is_bare_double"
								],
								[
									"node_tag\t{rlang}",
									"node_tag"
								],
								[
									"new_quosure\t{rlang}",
									"new_quosure"
								],
								[
									"current_env\t{rlang}",
									"current_env"
								],
								[
									"message_cnd\t{rlang}",
									"message_cnd"
								],
								[
									"string\t{rlang}",
									"string"
								],
								[
									"env_clone\t{rlang}",
									"env_clone"
								],
								[
									"quo_expr\t{rlang}",
									"quo_expr"
								],
								[
									"f_rhs\t{rlang}",
									"f_rhs"
								],
								[
									"expr_interp\t{rlang}",
									"expr_interp"
								],
								[
									"as_box\t{rlang}",
									"as_box"
								],
								[
									"is_node_list\t{rlang}",
									"is_node_list"
								],
								[
									"parse_quos\t{rlang}",
									"parse_quos"
								],
								[
									"node_poke_cdar\t{rlang}",
									"node_poke_cdar"
								],
								[
									"env_is_browsed\t{rlang}",
									"env_is_browsed"
								],
								[
									"ctxt_depth\t{rlang}",
									"ctxt_depth"
								],
								[
									"maybe_missing\t{rlang}",
									"maybe_missing"
								],
								[
									"zap_srcref\t{rlang}",
									"zap_srcref"
								],
								[
									"scoped_env\t{rlang}",
									"scoped_env"
								],
								[
									"current_fn\t{rlang}",
									"current_fn"
								],
								[
									"quo_is_lang\t{rlang}",
									"quo_is_lang"
								],
								[
									"lgl_along\t{rlang}",
									"lgl_along"
								],
								[
									"child_env\t{rlang}",
									"child_env"
								],
								[
									"is_box\t{rlang}",
									"is_box"
								],
								[
									"is_lang\t{rlang}",
									"is_lang"
								],
								[
									"new_raw\t{rlang}",
									"new_raw"
								],
								[
									"is_bare_integerish\t{rlang}",
									"is_bare_integerish"
								],
								[
									"scoped_bindings\t{rlang}",
									"scoped_bindings"
								],
								[
									"return_from\t{rlang}",
									"return_from"
								],
								[
									"call_parse_type\t{rlang}",
									"call_parse_type"
								],
								[
									"fn_fmls_names\t{rlang}",
									"fn_fmls_names"
								],
								[
									"node_car\t{rlang}",
									"node_car"
								],
								[
									"lgl\t{rlang}",
									"lgl"
								],
								[
									"new_function\t{rlang}",
									"new_function"
								],
								[
									"node_poke_cddr\t{rlang}",
									"node_poke_cddr"
								],
								[
									"env_bind_exprs\t{rlang}",
									"env_bind_exprs"
								],
								[
									"exprs\t{rlang}",
									"exprs"
								],
								[
									"as_double\t{rlang}",
									"as_double"
								],
								[
									"is_bare_bytes\t{rlang}",
									"is_bare_bytes"
								],
								[
									"env_binding_lock\t{rlang}",
									"env_binding_lock"
								],
								[
									"have_name\t{rlang}",
									"have_name"
								],
								[
									"na_dbl\t{rlang}",
									"na_dbl"
								],
								[
									"is_bare_character\t{rlang}",
									"is_bare_character"
								],
								[
									"is_double\t{rlang}",
									"is_double"
								],
								[
									"is_bare_logical\t{rlang}",
									"is_bare_logical"
								],
								[
									"names2\t{rlang}",
									"names2"
								],
								[
									"with_bindings\t{rlang}",
									"with_bindings"
								],
								[
									"warning_cnd\t{rlang}",
									"warning_cnd"
								],
								[
									"node_cdr\t{rlang}",
									"node_cdr"
								],
								[
									"is_reference\t{rlang}",
									"is_reference"
								],
								[
									"is_primitive_lazy\t{rlang}",
									"is_primitive_lazy"
								],
								[
									"env_parent\t{rlang}",
									"env_parent"
								],
								[
									"mut_node_car\t{rlang}",
									"mut_node_car"
								],
								[
									"wref_key\t{rlang}",
									"wref_key"
								],
								[
									"with_handlers\t{rlang}",
									"with_handlers"
								],
								[
									"call_ns\t{rlang}",
									"call_ns"
								],
								[
									"squash_cpl\t{rlang}",
									"squash_cpl"
								],
								[
									"squash_chr\t{rlang}",
									"squash_chr"
								],
								[
									"node_caar\t{rlang}",
									"node_caar"
								],
								[
									"is_definition\t{rlang}",
									"is_definition"
								],
								[
									"env_print\t{rlang}",
									"env_print"
								],
								[
									"inject\t{rlang}",
									"inject"
								],
								[
									"scoped_interactive\t{rlang}",
									"scoped_interactive"
								],
								[
									"ctxt_frame\t{rlang}",
									"ctxt_frame"
								],
								[
									"rep_named\t{rlang}",
									"rep_named"
								],
								[
									"is_quosure\t{rlang}",
									"is_quosure"
								],
								[
									"new_logical_along\t{rlang}",
									"new_logical_along"
								],
								[
									"is_false\t{rlang}",
									"is_false"
								],
								[
									"is_spliced_bare\t{rlang}",
									"is_spliced_bare"
								],
								[
									"env_binding_are_active\t{rlang}",
									"env_binding_are_active"
								],
								[
									"flatten_if\t{rlang}",
									"flatten_if"
								],
								[
									"is_scalar_atomic\t{rlang}",
									"is_scalar_atomic"
								],
								[
									"new_box\t{rlang}",
									"new_box"
								],
								[
									"mut_node_cdr\t{rlang}",
									"mut_node_cdr"
								],
								[
									"sym\t{rlang}",
									"sym"
								],
								[
									"fn_env\t{rlang}",
									"fn_env"
								],
								[
									"f_env\t{rlang}",
									"f_env"
								],
								[
									"env_depth\t{rlang}",
									"env_depth"
								],
								[
									"catch_cnd\t{rlang}",
									"catch_cnd"
								],
								[
									"node_cadr\t{rlang}",
									"node_cadr"
								],
								[
									"flatten_cpl\t{rlang}",
									"flatten_cpl"
								],
								[
									"flatten_chr\t{rlang}",
									"flatten_chr"
								],
								[
									"vec_poke_range\t{rlang}",
									"vec_poke_range"
								],
								[
									"are_na\t{rlang}",
									"are_na"
								],
								[
									"lang_args_names\t{rlang}",
									"lang_args_names"
								],
								[
									"node_poke_caar\t{rlang}",
									"node_poke_caar"
								],
								[
									"dbl_along\t{rlang}",
									"dbl_along"
								],
								[
									"is_primitive_eager\t{rlang}",
									"is_primitive_eager"
								],
								[
									"cnd_signal\t{rlang}",
									"cnd_signal"
								],
								[
									"seq2_along\t{rlang}",
									"seq2_along"
								],
								[
									"env_inherits\t{rlang}",
									"env_inherits"
								],
								[
									"env_bury\t{rlang}",
									"env_bury"
								],
								[
									"new_node\t{rlang}",
									"new_node"
								],
								[
									"is_copyable\t{rlang}",
									"is_copyable"
								],
								[
									"raw_deparse_str\t{rlang}",
									"raw_deparse_str"
								],
								[
									"is_symbol\t{rlang}",
									"is_symbol"
								],
								[
									"has_length\t{rlang}",
									"has_length"
								],
								[
									"expr_print\t{rlang}",
									"expr_print"
								],
								[
									"new_character\t{rlang}",
									"new_character"
								],
								[
									"node_poke_cadr\t{rlang}",
									"node_poke_cadr"
								],
								[
									"is_scalar_list\t{rlang}",
									"is_scalar_list"
								],
								[
									"lang_standardise\t{rlang}",
									"lang_standardise"
								],
								[
									"parse_quosures\t{rlang}",
									"parse_quosures"
								],
								[
									"with_abort\t{rlang}",
									"with_abort"
								],
								[
									"is_attached\t{rlang}",
									"is_attached"
								],
								[
									"call_frame\t{rlang}",
									"call_frame"
								],
								[
									"done\t{rlang}",
									"done"
								],
								[
									"env_unlock\t{rlang}",
									"env_unlock"
								],
								[
									"as_label\t{rlang}",
									"as_label"
								],
								[
									"list_len\t{rlang}",
									"list_len"
								],
								[
									"is_call\t{rlang}",
									"is_call"
								],
								[
									"quo_squash\t{rlang}",
									"quo_squash"
								],
								[
									"is_bare_vector\t{rlang}",
									"is_bare_vector"
								],
								[
									"is_vector\t{rlang}",
									"is_vector"
								],
								[
									"node_cdar\t{rlang}",
									"node_cdar"
								],
								[
									"call_args_names\t{rlang}",
									"call_args_names"
								],
								[
									"is_bare_string\t{rlang}",
									"is_bare_string"
								],
								[
									"env_poke_parent\t{rlang}",
									"env_poke_parent"
								],
								[
									"local_options\t{rlang}",
									"local_options"
								],
								[
									"new_language\t{rlang}",
									"new_language"
								],
								[
									"overscope_eval_next\t{rlang}",
									"overscope_eval_next"
								],
								[
									"chr_unserialise_unicode\t{rlang}",
									"chr_unserialise_unicode"
								],
								[
									"is_bytes\t{rlang}",
									"is_bytes"
								],
								[
									"local_interactive\t{rlang}",
									"local_interactive"
								],
								[
									"is_bare_env\t{rlang}",
									"is_bare_env"
								],
								[
									"vec_poke_n\t{rlang}",
									"vec_poke_n"
								],
								[
									"duplicate\t{rlang}",
									"duplicate"
								],
								[
									"lang_name\t{rlang}",
									"lang_name"
								],
								[
									"is_string\t{rlang}",
									"is_string"
								],
								[
									"inherits_only\t{rlang}",
									"inherits_only"
								],
								[
									"as_logical\t{rlang}",
									"as_logical"
								],
								[
									"caller_fn\t{rlang}",
									"caller_fn"
								],
								[
									"splice\t{rlang}",
									"splice"
								],
								[
									"coerce_type\t{rlang}",
									"coerce_type"
								],
								[
									"ns_env_name\t{rlang}",
									"ns_env_name"
								],
								[
									"na_lgl\t{rlang}",
									"na_lgl"
								],
								[
									"node_cddr\t{rlang}",
									"node_cddr"
								],
								[
									"parse_quosure\t{rlang}",
									"parse_quosure"
								],
								[
									"f_lhs\t{rlang}",
									"f_lhs"
								],
								[
									"as_string\t{rlang}",
									"as_string"
								],
								[
									"last_trace\t{rlang}",
									"last_trace"
								],
								[
									"lang_fn\t{rlang}",
									"lang_fn"
								],
								[
									"env_bind\t{rlang}",
									"env_bind"
								],
								[
									"is_bare_environment\t{rlang}",
									"is_bare_environment"
								],
								[
									"raw_along\t{rlang}",
									"raw_along"
								],
								[
									"flatten\t{rlang}",
									"flatten"
								],
								[
									"abort\t{rlang}",
									"abort"
								],
								[
									"rst_list\t{rlang}",
									"rst_list"
								],
								[
									"is_installed\t{rlang}",
									"is_installed"
								],
								[
									"is_interactive\t{rlang}",
									"is_interactive"
								],
								[
									"ensym\t{rlang}",
									"ensym"
								],
								[
									"global_frame\t{rlang}",
									"global_frame"
								],
								[
									"as_bytes\t{rlang}",
									"as_bytes"
								],
								[
									"new_list\t{rlang}",
									"new_list"
								],
								[
									"env_tail\t{rlang}",
									"env_tail"
								],
								[
									"syms\t{rlang}",
									"syms"
								],
								[
									"bytes_along\t{rlang}",
									"bytes_along"
								],
								[
									"dots_definitions\t{rlang}",
									"dots_definitions"
								],
								[
									"cnd_footer\t{rlang}",
									"cnd_footer"
								],
								[
									"calling\t{rlang}",
									"calling"
								],
								[
									"call_stack\t{rlang}",
									"call_stack"
								],
								[
									"call_name\t{rlang}",
									"call_name"
								],
								[
									"enquo0\t{rlang}",
									"enquo0"
								],
								[
									"quo_set_env\t{rlang}",
									"quo_set_env"
								],
								[
									"prepend\t{rlang}",
									"prepend"
								],
								[
									"set_attrs\t{rlang}",
									"set_attrs"
								],
								[
									"is_condition\t{rlang}",
									"is_condition"
								],
								[
									"is_logical\t{rlang}",
									"is_logical"
								],
								[
									"exprs_auto_name\t{rlang}",
									"exprs_auto_name"
								],
								[
									"exiting\t{rlang}",
									"exiting"
								],
								[
									"raw_len\t{rlang}",
									"raw_len"
								],
								[
									"is_expr\t{rlang}",
									"is_expr"
								],
								[
									"quo_is_missing\t{rlang}",
									"quo_is_missing"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"multiply_by_matrix\t{magrittr}",
									"multiply_by_matrix"
								],
								[
									"raise_to_power\t{magrittr}",
									"raise_to_power"
								],
								[
									"inset2\t{magrittr}",
									"inset2"
								],
								[
									"set_attributes\t{magrittr}",
									"set_attributes"
								],
								[
									"extract\t{magrittr}",
									"extract"
								],
								[
									"divide_by_int\t{magrittr}",
									"divide_by_int"
								],
								[
									"is_less_than\t{magrittr}",
									"is_less_than"
								],
								[
									"undebug_fseq\t{magrittr}",
									"undebug_fseq"
								],
								[
									"multiply_by\t{magrittr}",
									"multiply_by"
								],
								[
									"or\t{magrittr}",
									"or"
								],
								[
									"use_series\t{magrittr}",
									"use_series"
								],
								[
									"set_rownames\t{magrittr}",
									"set_rownames"
								],
								[
									"equals\t{magrittr}",
									"equals"
								],
								[
									"not\t{magrittr}",
									"not"
								],
								[
									"add\t{magrittr}",
									"add"
								],
								[
									"inset\t{magrittr}",
									"inset"
								],
								[
									"and\t{magrittr}",
									"and"
								],
								[
									"debug_pipe\t{magrittr}",
									"debug_pipe"
								],
								[
									"divide_by\t{magrittr}",
									"divide_by"
								],
								[
									"debug_fseq\t{magrittr}",
									"debug_fseq"
								],
								[
									"set_names\t{magrittr}",
									"set_names"
								],
								[
									"mod\t{magrittr}",
									"mod"
								],
								[
									"set_attr\t{magrittr}",
									"set_attr"
								],
								[
									"extract2\t{magrittr}",
									"extract2"
								],
								[
									"set_colnames\t{magrittr}",
									"set_colnames"
								],
								[
									"pas\t{magrittr}",
									"pas"
								],
								[
									"subtract\t{magrittr}",
									"subtract"
								],
								[
									"freduce\t{magrittr}",
									"freduce"
								],
								[
									"is_weakly_less_than\t{magrittr}",
									"is_weakly_less_than"
								],
								[
									"is_in\t{magrittr}",
									"is_in"
								],
								[
									"is_weakly_greater_than\t{magrittr}",
									"is_weakly_greater_than"
								],
								[
									"set_class\t{magrittr}",
									"set_class"
								],
								[
									"functions\t{magrittr}",
									"functions"
								],
								[
									"pipe_nested\t{magrittr}",
									"pipe_nested"
								],
								[
									"pipe_eager_lexical\t{magrittr}",
									"pipe_eager_lexical"
								],
								[
									"is_greater_than\t{magrittr}",
									"is_greater_than"
								],
								[
									"pipe_lazy_masking\t{magrittr}",
									"pipe_lazy_masking"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"stats",
								"base",
								"tidyverse",
								"grDevices",
								"rlang",
								"graphics",
								"methods",
								"utils",
								"magrittr"
							],
							"WordCount":
							{
								"changes": 1044,
								"count": 12,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"incomplete_sync": null,
							"sorttabs_lastactivated": 1615663877.81,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 234.0
	},
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 126.0
	},
	"output.markdown":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.show_commit_info":
	{
		"height": 126.0
	},
	"pinned_build_system": "Packages/knitr/knitr-Markdown.sublime-build",
	"project": "colombia.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				".Rproj.user/26B2EB61/pcs/windowlayoutstate.pper"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 237.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
