{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"element",
				"element_blank"
			],
			[
				"elemen",
				"element_blank"
			],
			[
				"scale_fil",
				"scale_fill_brewer"
			],
			[
				"sample",
				"sample_cleaning"
			],
			[
				"narr",
				"narrow_cities"
			],
			[
				"sampl",
				"sample_cleaning"
			],
			[
				"tran",
				"transmute"
			],
			[
				"ques",
				"questions"
			],
			[
				"regex",
				"regex_left_join"
			],
			[
				"selec",
				"selection_analysis"
			],
			[
				"trna",
				"transmute"
			],
			[
				"data",
				"data_final"
			],
			[
				"analy",
				"analysis_text"
			],
			[
				"sur",
				"survey_data"
			],
			[
				"extr",
				"extract_labels"
			],
			[
				"ex",
				"expect_equal"
			],
			[
				"fi",
				"filtered_data"
			],
			[
				"extra",
				"extra_filter"
			],
			[
				"filte",
				"filter_selected"
			],
			[
				"filter_",
				"filter_selected"
			],
			[
				"filter",
				"filter_selected"
			],
			[
				"fil",
				"filenameID"
			],
			[
				"app",
				"app_sys"
			],
			[
				"fluid",
				"fluidRow"
			],
			[
				"ver",
				"verbatimTextOutput"
			],
			[
				"navba",
				"navbarPage"
			],
			[
				"dash",
				"dashboardPage"
			],
			[
				"bs4Das",
				"bs4DashFooter"
			],
			[
				"nav",
				"navbarMenu"
			],
			[
				"file",
				"filepath"
			],
			[
				"territo",
				"territory_id"
			],
			[
				"clas",
				"class"
			],
			[
				"occ",
				"occupations02"
			],
			[
				"if",
				"ifmain"
			],
			[
				"plot02",
				"plot02_summarized"
			],
			[
				"elem",
				"element_line"
			],
			[
				"edu",
				"education_loan"
			],
			[
				"responde",
				"response_id"
			],
			[
				"plot06",
				"plot06_sliced"
			],
			[
				"hig",
				"highest_degree"
			],
			[
				"hi",
				"highest_degree"
			],
			[
				"high",
				"highest_degree"
			],
			[
				"highe",
				"highest_degree"
			],
			[
				"plot",
				"plot06_sliced"
			],
			[
				"degere",
				"degree_location"
			],
			[
				"here",
				"highest_degree_location"
			],
			[
				"higeh",
				"highest_degree"
			],
			[
				"respo",
				"respondent_id"
			],
			[
				"resp",
				"respondent_id"
			],
			[
				"q5_12",
				"q5_12_8_text"
			],
			[
				"q5",
				"q5_12_8_text"
			],
			[
				"to_lode",
				"to_lodes_form"
			],
			[
				"SOUR",
				"SOURCE_n"
			],
			[
				"cairo",
				"cairo_pdf"
			],
			[
				"elemnet",
				"element_text"
			],
			[
				"ele",
				"element_blank"
			],
			[
				"summarize",
				"summarize"
			],
			[
				"numer",
				"number_of_cases"
			],
			[
				"create",
				"create_package"
			],
			[
				"instal",
				"install.packages"
			],
			[
				"analysi",
				"analysis01"
			],
			[
				"respon",
				"response_id"
			],
			[
				"anal",
				"analysis01"
			],
			[
				"cono",
				"conjoint01"
			],
			[
				"geom_t",
				"geom_treemap_text"
			],
			[
				"geom",
				"geom_treemap"
			],
			[
				"are",
				"area_of_study"
			],
			[
				"year",
				"years_lived_in_colombia"
			],
			[
				"scale",
				"scale_fill_brewer"
			],
			[
				"missing",
				"missing_countries"
			],
			[
				"fre",
				"frequency_of_visits"
			],
			[
				"scale_fill",
				"scale_fill_manual"
			],
			[
				"survey",
				"survey_data"
			],
			[
				"back",
				"background"
			],
			[
				"data-",
				"data-processed"
			],
			[
				"tid",
				"tidyverse"
			],
			[
				"temp",
				"tempo_politicos"
			],
			[
				"DS_",
				"DS_CARGO"
			],
			[
				"process",
				"processos_filtrados"
			],
			[
				"table06",
				"table06_final"
			],
			[
				"table",
				"table06_election"
			],
			[
				"DS",
				"DS_SIT_TOT_TURNO"
			],
			[
				"election",
				"election_year"
			],
			[
				"retun",
				"return_election"
			],
			[
				"inde",
				"indexes"
			],
			[
				"numero",
				"numero_unico_trib"
			],
			[
				"numero_",
				"numero_unico_trib"
			],
			[
				"label",
				"labelPosition"
			],
			[
				"co",
				"coord_flip"
			],
			[
				"processos",
				"processos_assuntos"
			],
			[
				"proce",
				"process_classes"
			],
			[
				"stat",
				"status_publiquese"
			],
			[
				"pro",
				"processos_filtrados"
			],
			[
				"proces",
				"processos_classes"
			],
			[
				"NA",
				"NA_real_"
			],
			[
				"group",
				"group_by"
			],
			[
				"cario",
				"cairo_pdf\t{grDevices}"
			],
			[
				"num",
				"numero_cnj"
			],
			[
				"enc",
				"encoded_data"
			],
			[
				"shapefi",
				"shapefiles_comarcas"
			],
			[
				"dir",
				"dir.create\t{base}"
			],
			[
				"shape",
				"shapefiles_comarcas"
			],
			[
				"amazon",
				"amazonia_legal"
			],
			[
				"install",
				"install.packages\t{utils}"
			],
			[
				"inst",
				"install.packages\t{utils}"
			]
		]
	},
	"buffers":
	[
		{
			"file": "dev/run_dev.R",
			"settings":
			{
				"buffer_size": 318,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					86,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAD4BAAAAAAAAPwEAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAD8BAAAAAAAATAIAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"cut",
					null,
					"AQAAAEABAAAAAAAAQAEAAAAAAAAMAQAACiAgICAgICAgc2hpbnk6OmZsdWlkUm93KAogICAgICAgICAgc2hpbnk6OmNvbHVtbigxMiwKICAgICAgICAgICAgc2hpbnk6OnNlbGVjdElucHV0KAogICAgICAgICAgICAgIGlucHV0SWQgPSBucygnc2VsZWN0X2FuYWx5c2lzJyksCiAgICAgICAgICAgICAgbGFiZWwgPSAnQ2hvb3NlIGEgY291bnRyeSAob3IgcmVnaW9uKSBmb3IgYW5hbHlzaXM6JywKICAgICAgICAgICAgICBjaG9pY2VzID0gY2hvaWNlcwogICAgICAgICAgICApCiAgICAgICAgICApCiAgICAgICAgKQ",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAgAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"right_delete",
					null,
					"AQAAAD4BAAAAAAAAPgEAAAAAAAACAAAACiw",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/01_wrangleData.R",
			"settings":
			{
				"buffer_size": 39270,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					113,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGclAAAAAAAAaCUAAAAAAAAAAAAAaCUAAAAAAABpJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnJQAAAAAAAGclAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"reindent",
					null,
					"AQAAAGglAAAAAAAAaiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoJQAAAAAAAGglAAAAAAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYlAAAAAAAAVyUAAAAAAAAAAAAAVyUAAAAAAABZJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWJQAAAAAAAFYlAAAAAAAA////////738"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAFclAAAAAAAAVyUAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZJQAAAAAAAFklAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "library*"
					},
					"CAAAAFclAAAAAAAAWCUAAAAAAAAAAAAAWCUAAAAAAABZJQAAAAAAAAAAAABZJQAAAAAAAFolAAAAAAAAAAAAAFolAAAAAAAAWyUAAAAAAAAAAAAAWyUAAAAAAABcJQAAAAAAAAAAAABcJQAAAAAAAF0lAAAAAAAAAAAAAF0lAAAAAAAAXiUAAAAAAAAAAAAAXiUAAAAAAABfJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXJQAAAAAAAFclAAAAAAAAAAAAAAAA8L8"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAF4lAAAAAAAAXiUAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfJQAAAAAAAF8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF4lAAAAAAAAYCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeJQAAAAAAAF4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "tidyverse"
					},
					"CQAAAF8lAAAAAAAAYCUAAAAAAAAAAAAAYCUAAAAAAABhJQAAAAAAAAAAAABhJQAAAAAAAGIlAAAAAAAAAAAAAGIlAAAAAAAAYyUAAAAAAAAAAAAAYyUAAAAAAABkJQAAAAAAAAAAAABkJQAAAAAAAGUlAAAAAAAAAAAAAGUlAAAAAAAAZiUAAAAAAAAAAAAAZiUAAAAAAABnJQAAAAAAAAAAAABnJQAAAAAAAGglAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfJQAAAAAAAF8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					4,
					"right_delete",
					null,
					"BAAAAH0lAAAAAAAAfSUAAAAAAAABAAAACn0lAAAAAAAAfSUAAAAAAAABAAAACn0lAAAAAAAAfSUAAAAAAAABAAAAIH0lAAAAAAAAfSUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAAYkA"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BQAAAJAlAAAAAAAAkSUAAAAAAAAAAAAAkSUAAAAAAACRJQAAAAAAAAQAAABxMTM2kSUAAAAAAACSJQAAAAAAAAAAAACSJQAAAAAAAJMlAAAAAAAAAAAAAJMlAAAAAAAAlCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "new_"
					},
					"BAAAAJAlAAAAAAAAkSUAAAAAAAAAAAAAkSUAAAAAAACSJQAAAAAAAAAAAACSJQAAAAAAAJMlAAAAAAAAAAAAAJMlAAAAAAAAlCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BQAAAL4lAAAAAAAAvyUAAAAAAAAAAAAAvyUAAAAAAAC/JQAAAAAAAAQAAABxMTM2vyUAAAAAAADAJQAAAAAAAAAAAADAJQAAAAAAAMElAAAAAAAAAAAAAMElAAAAAAAAwiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCJQAAAAAAAL4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"left_delete",
					null,
					"AQAAAJslAAAAAAAAmyUAAAAAAAA1AAAAZHBseXI6OmNhc2Vfd2hlbigKICAgICAgc3RyX2RldGVjdChjaXR5LCAnLionKSB+IFRSVUU",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbJQAAAAAAANAlAAAAAAAA////////738"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "case_wh"
					},
					"BwAAAJslAAAAAAAAnCUAAAAAAAAAAAAAnCUAAAAAAACdJQAAAAAAAAAAAACdJQAAAAAAAJ4lAAAAAAAAAAAAAJ4lAAAAAAAAnyUAAAAAAAAAAAAAnyUAAAAAAACgJQAAAAAAAAAAAACgJQAAAAAAAKElAAAAAAAAAAAAAKElAAAAAAAAoiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbJQAAAAAAAJslAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "ne"
					},
					"AgAAAKIlAAAAAAAAoyUAAAAAAAAAAAAAoyUAAAAAAACkJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiJQAAAAAAAKIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					2,
					"left_delete",
					null,
					"AgAAAKMlAAAAAAAAoyUAAAAAAAABAAAAZaIlAAAAAAAAoiUAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkJQAAAAAAAKQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "en"
					},
					"AgAAAKIlAAAAAAAAoyUAAAAAAAAAAAAAoyUAAAAAAACkJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiJQAAAAAAAKIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKQlAAAAAAAApiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkJQAAAAAAAKQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAKUlAAAAAAAApiUAAAAAAAAAAAAApiUAAAAAAACqJQAAAAAAAAAAAACqJQAAAAAAAKslAAAAAAAAAAAAAKslAAAAAAAAryUAAAAAAAAAAAAApiUAAAAAAACmJQAAAAAAAAQAAAAgICAgpyUAAAAAAACnJQAAAAAAAAQAAAAgICAgpyUAAAAAAACtJQAAAAAAAAAAAACmJQAAAAAAAKwlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKwlAAAAAAAAriUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsJQAAAAAAAKwlAAAAAAAA////////738"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAK4lAAAAAAAAryUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuJQAAAAAAAK4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAAK8lAAAAAAAAsCUAAAAAAAAAAAAAsCUAAAAAAAC4JQAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvJQAAAAAAAK8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAALklAAAAAAAAuiUAAAAAAAAAAAAAuiUAAAAAAADCJQAAAAAAAAAAAADCJQAAAAAAAMMlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5JQAAAAAAALklAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAAMMlAAAAAAAAxCUAAAAAAAAAAAAAxCUAAAAAAADMJQAAAAAAAAAAAADMJQAAAAAAAM0lAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDJQAAAAAAAMMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAAM0lAAAAAAAAziUAAAAAAAAAAAAAziUAAAAAAADWJQAAAAAAAAAAAADWJQAAAAAAANclAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNJQAAAAAAAM0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAANclAAAAAAAA2CUAAAAAAAAAAAAA2CUAAAAAAADgJQAAAAAAAAAAAADgJQAAAAAAAOElAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXJQAAAAAAANclAAAAAAAAAAAAAAAA8L8"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\n,"
					},
					"AwAAAOElAAAAAAAA4iUAAAAAAAAAAAAA4iUAAAAAAADqJQAAAAAAAAAAAADqJQAAAAAAAOslAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhJQAAAAAAAOElAAAAAAAAAAAAAAAA8L8"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "\n,,"
					},
					"BAAAAOslAAAAAAAA7CUAAAAAAAAAAAAA7CUAAAAAAAD0JQAAAAAAAAAAAAD0JQAAAAAAAPUlAAAAAAAAAAAAAPUlAAAAAAAA9iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrJQAAAAAAAOslAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAPUlAAAAAAAA9SUAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2JQAAAAAAAPYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAHolAAAAAAAAeyUAAAAAAAAAAAAAeyUAAAAAAAB8JQAAAAAAAAAAAAB8JQAAAAAAAH0lAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6JQAAAAAAAHolAAAAAAAAAAAAAAAA8L8"
				],
				[
					199,
					1,
					"reindent",
					null,
					"AQAAAHslAAAAAAAAfSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7JQAAAAAAAHslAAAAAAAAAAAAAAAAAAA"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "pull"
					},
					"BAAAAH0lAAAAAAAAfiUAAAAAAAAAAAAAfiUAAAAAAAB/JQAAAAAAAAAAAAB/JQAAAAAAAIAlAAAAAAAAAAAAAIAlAAAAAAAAgSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIElAAAAAAAAgyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBJQAAAAAAAIElAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BAAAAIIlAAAAAAAAgyUAAAAAAAAAAAAAgyUAAAAAAACEJQAAAAAAAAAAAACEJQAAAAAAAIUlAAAAAAAAAAAAAIUlAAAAAAAAhiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCJQAAAAAAAIIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAIclAAAAAAAAjCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHJQAAAAAAAIclAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIwlAAAAAAAAjSUAAAAAAAAAAAAAjSUAAAAAAACPJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMJQAAAAAAAIwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "unique"
					},
					"BgAAAI8lAAAAAAAAkCUAAAAAAAAAAAAAkCUAAAAAAACRJQAAAAAAAAAAAACRJQAAAAAAAJIlAAAAAAAAAAAAAJIlAAAAAAAAkyUAAAAAAAAAAAAAkyUAAAAAAACUJQAAAAAAAAAAAACUJQAAAAAAAJUlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPJQAAAAAAAI8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJUlAAAAAAAAlyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVJQAAAAAAAJUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAJclAAAAAAAAnCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXJQAAAAAAAJclAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "\nsr"
					},
					"BAAAAJwlAAAAAAAAnSUAAAAAAAAAAAAAnSUAAAAAAACfJQAAAAAAAAAAAACfJQAAAAAAAKAlAAAAAAAAAAAAAKAlAAAAAAAAoSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcJQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"left_delete",
					null,
					"AQAAAKAlAAAAAAAAoCUAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChJQAAAAAAAKElAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "ort"
					},
					"AwAAAKAlAAAAAAAAoSUAAAAAAAAAAAAAoSUAAAAAAACiJQAAAAAAAAAAAACiJQAAAAAAAKMlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgJQAAAAAAAKAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMlAAAAAAAApSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjJQAAAAAAAKMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKUlAAAAAAAApyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"right_delete",
					null,
					"AQAAAKUlAAAAAAAApSUAAAAAAAACAAAAKCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClJQAAAAAAAKclAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "\nlibrary*"
					},
					"CQAAAGklAAAAAAAAaiUAAAAAAAAAAAAAaiUAAAAAAABrJQAAAAAAAAAAAABrJQAAAAAAAGwlAAAAAAAAAAAAAGwlAAAAAAAAbSUAAAAAAAAAAAAAbSUAAAAAAABuJQAAAAAAAAAAAABuJQAAAAAAAG8lAAAAAAAAAAAAAG8lAAAAAAAAcCUAAAAAAAAAAAAAcCUAAAAAAABxJQAAAAAAAAAAAABxJQAAAAAAAHIlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpJQAAAAAAAGklAAAAAAAA////////738"
				],
				[
					225,
					1,
					"left_delete",
					null,
					"AQAAAHElAAAAAAAAcSUAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHElAAAAAAAAcyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxJQAAAAAAAHElAAAAAAAAAAAAAAAA8L8"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "magrittr"
					},
					"CAAAAHIlAAAAAAAAcyUAAAAAAAAAAAAAcyUAAAAAAAB0JQAAAAAAAAAAAAB0JQAAAAAAAHUlAAAAAAAAAAAAAHUlAAAAAAAAdiUAAAAAAAAAAAAAdiUAAAAAAAB3JQAAAAAAAAAAAAB3JQAAAAAAAHglAAAAAAAAAAAAAHglAAAAAAAAeSUAAAAAAAAAAAAAeSUAAAAAAAB6JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByJQAAAAAAAHIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": ".,"
					},
					"AgAAAJQlAAAAAAAAlSUAAAAAAAAAAAAAlSUAAAAAAACWJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYlAAAAAAAAlyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWJQAAAAAAAJYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					3,
					"left_delete",
					null,
					"AwAAAJYlAAAAAAAAliUAAAAAAAABAAAAIJUlAAAAAAAAlSUAAAAAAAABAAAALJQlAAAAAAAAlCUAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXJQAAAAAAAJclAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAK0lAAAAAAAArSUAAAAAAAABAAAAIJ0lAAAAAAAAnSUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJQlAAAAAAAAlSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUJQAAAAAAAJQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUlAAAAAAAAliUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVJQAAAAAAAJUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					273,
					1,
					"cut",
					null,
					"AQAAAHwlAAAAAAAAfCUAAAAAAAAMAAAAZmluYWxfY2l0aWVz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIJQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"paste",
					null,
					"AQAAAIglAAAAAAAAlCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIJQAAAAAAAIglAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"unindent",
					null,
					"AwAAAIElAAAAAAAAgSUAAAAAAAACAAAAICCeJQAAAAAAAJ4lAAAAAAAAAgAAACAgqyUAAAAAAACrJQAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDJQAAAAAAALclAAAAAAAA////////738"
				],
				[
					286,
					1,
					"cut",
					null,
					"AQAAAHwlAAAAAAAAfCUAAAAAAAAFAAAAICU+JQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "\n\n\n\n"
					},
					"BAAAAHwlAAAAAAAAfSUAAAAAAAAAAAAAfSUAAAAAAAB+JQAAAAAAAAAAAAB+JQAAAAAAAH8lAAAAAAAAAAAAAH8lAAAAAAAAgCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8JQAAAAAAAHwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "name -> "
					},
					"BQAAAH0lAAAAAAAAfiUAAAAAAAAAAAAAfiUAAAAAAAB/JQAAAAAAAAAAAAB/JQAAAAAAAIAlAAAAAAAAAAAAAIAlAAAAAAAAgSUAAAAAAAAAAAAAgSUAAAAAAACFJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAAAAA"
				],
				[
					290,
					4,
					"left_delete",
					null,
					"BAAAAIQlAAAAAAAAhCUAAAAAAAABAAAAIIMlAAAAAAAAgyUAAAAAAAABAAAAPoIlAAAAAAAAgiUAAAAAAAABAAAALYElAAAAAAAAgSUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFJQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " <- "
					},
					"AQAAAIElAAAAAAAAhSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBJQAAAAAAAIElAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAIUlAAAAAAAAhyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFJQAAAAAAAIUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": " A"
					},
					"AgAAAIYlAAAAAAAAhyUAAAAAAAAAAAAAhyUAAAAAAACIJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGJQAAAAAAAIYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					2,
					"left_delete",
					null,
					"AgAAAIclAAAAAAAAhyUAAAAAAAABAAAAQYYlAAAAAAAAhiUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIJQAAAAAAAIglAAAAAAAAAAAAAAAA8L8"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "Andre"
					},
					"BQAAAIYlAAAAAAAAhyUAAAAAAAAAAAAAhyUAAAAAAACIJQAAAAAAAAAAAACIJQAAAAAAAIklAAAAAAAAAAAAAIklAAAAAAAAiiUAAAAAAAAAAAAAiiUAAAAAAACLJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGJQAAAAAAAIYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": " Assumpcao"
					},
					"CgAAAIslAAAAAAAAjCUAAAAAAAAAAAAAjCUAAAAAAACNJQAAAAAAAAAAAACNJQAAAAAAAI4lAAAAAAAAAAAAAI4lAAAAAAAAjyUAAAAAAAAAAAAAjyUAAAAAAACQJQAAAAAAAAAAAACQJQAAAAAAAJElAAAAAAAAAAAAAJElAAAAAAAAkiUAAAAAAAAAAAAAkiUAAAAAAACTJQAAAAAAAAAAAACTJQAAAAAAAJQlAAAAAAAAAAAAAJQlAAAAAAAAlSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLJQAAAAAAAIslAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "\nresid"
					},
					"BgAAAJYlAAAAAAAAlyUAAAAAAAAAAAAAlyUAAAAAAACYJQAAAAAAAAAAAACYJQAAAAAAAJklAAAAAAAAAAAAAJklAAAAAAAAmiUAAAAAAAAAAAAAmiUAAAAAAACbJQAAAAAAAAAAAACbJQAAAAAAAJwlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWJQAAAAAAAJYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "ency <- "
					},
					"BQAAAJwlAAAAAAAAnSUAAAAAAAAAAAAAnSUAAAAAAACeJQAAAAAAAAAAAACeJQAAAAAAAJ8lAAAAAAAAAAAAAJ8lAAAAAAAAoCUAAAAAAAAAAAAAoCUAAAAAAACkJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcJQAAAAAAAJwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					300,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKQlAAAAAAAApiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkJQAAAAAAAKQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": " C"
					},
					"AgAAAKUlAAAAAAAApiUAAAAAAAAAAAAApiUAAAAAAACnJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					2,
					"left_delete",
					null,
					"AgAAAKYlAAAAAAAApiUAAAAAAAABAAAAQ6UlAAAAAAAApSUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnJQAAAAAAAKclAAAAAAAAAAAAAAAA8L8"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "Chapel"
					},
					"BgAAAKUlAAAAAAAApiUAAAAAAAAAAAAApiUAAAAAAACnJQAAAAAAAAAAAACnJQAAAAAAAKglAAAAAAAAAAAAAKglAAAAAAAAqSUAAAAAAAAAAAAAqSUAAAAAAACqJQAAAAAAAAAAAACqJQAAAAAAAKslAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClJQAAAAAAAKUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": " Hill"
					},
					"BQAAAKslAAAAAAAArCUAAAAAAAAAAAAArCUAAAAAAACtJQAAAAAAAAAAAACtJQAAAAAAAK4lAAAAAAAAAAAAAK4lAAAAAAAAryUAAAAAAAAAAAAAryUAAAAAAACwJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrJQAAAAAAAKslAAAAAAAAAAAAAAAA8L8"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALIlAAAAAAAAsyUAAAAAAAAAAAAAsyUAAAAAAAC0JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyJQAAAAAAALIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "paste0"
					},
					"BgAAALMlAAAAAAAAtCUAAAAAAAAAAAAAtCUAAAAAAAC1JQAAAAAAAAAAAAC1JQAAAAAAALYlAAAAAAAAAAAAALYlAAAAAAAAtyUAAAAAAAAAAAAAtyUAAAAAAAC4JQAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzJQAAAAAAALMlAAAAAAAAAAAAAAAAAAA"
				],
				[
					321,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALklAAAAAAAAuyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5JQAAAAAAALklAAAAAAAAAAAAAAAA8L8"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": "name,"
					},
					"BQAAALolAAAAAAAAuyUAAAAAAAAAAAAAuyUAAAAAAAC8JQAAAAAAAAAAAAC8JQAAAAAAAL0lAAAAAAAAAAAAAL0lAAAAAAAAviUAAAAAAAAAAAAAviUAAAAAAAC/JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6JQAAAAAAALolAAAAAAAAAAAAAAAA8L8"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8lAAAAAAAAwCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/JQAAAAAAAL8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					324,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMAlAAAAAAAAwiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAJQAAAAAAAMAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADDJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAA8L8"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "ives"
					},
					"BAAAAMMlAAAAAAAAxCUAAAAAAAAAAAAAxCUAAAAAAADFJQAAAAAAAAAAAADFJQAAAAAAAMYlAAAAAAAAAAAAAMYlAAAAAAAAxyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDJQAAAAAAAMMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					327,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAMclAAAAAAAAyCUAAAAAAAAAAAAAyCUAAAAAAADJJQAAAAAAAAAAAADJJQAAAAAAAMolAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHJQAAAAAAAMclAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMolAAAAAAAAyyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKJQAAAAAAAMolAAAAAAAAAAAAAAAA8L8"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMwlAAAAAAAAzSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMJQAAAAAAAMwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " resi"
					},
					"BQAAAM0lAAAAAAAAziUAAAAAAAAAAAAAziUAAAAAAADPJQAAAAAAAAAAAADPJQAAAAAAANAlAAAAAAAAAAAAANAlAAAAAAAA0SUAAAAAAAAAAAAA0SUAAAAAAADSJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNJQAAAAAAAM0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"insert_completion",
					{
						"completion": "residency",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "residency"
					},
					"AgAAAM4lAAAAAAAAziUAAAAAAAAEAAAAcmVzac4lAAAAAAAA1yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSJQAAAAAAANIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAANglAAAAAAAA2SUAAAAAAAAAAAAA2SUAAAAAAADaJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYJQAAAAAAANglAAAAAAAAAAAAAAAA8L8"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "name %>% "
					},
					"BQAAANolAAAAAAAA2yUAAAAAAAAAAAAA2yUAAAAAAADcJQAAAAAAAAAAAADcJQAAAAAAAN0lAAAAAAAAAAAAAN0lAAAAAAAA3iUAAAAAAAAAAAAA3iUAAAAAAADjJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaJQAAAAAAANolAAAAAAAAAAAAAAAA8L8"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOMlAAAAAAAA5CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjJQAAAAAAAOMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					375,
					1,
					"reindent",
					null,
					"AQAAAOQlAAAAAAAA5iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkJQAAAAAAAOQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "paste0"
					},
					"BgAAAOYlAAAAAAAA5yUAAAAAAAAAAAAA5yUAAAAAAADoJQAAAAAAAAAAAADoJQAAAAAAAOklAAAAAAAAAAAAAOklAAAAAAAA6iUAAAAAAAAAAAAA6iUAAAAAAADrJQAAAAAAAAAAAADrJQAAAAAAAOwlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmJQAAAAAAAOYlAAAAAAAAAAAAAAAAQkA"
				],
				[
					380,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOwlAAAAAAAA7iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsJQAAAAAAAOwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAO4lAAAAAAAA8yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuJQAAAAAAAO4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "\npaste0"
					},
					"CAAAAPMlAAAAAAAA9CUAAAAAAAAAAAAA9CUAAAAAAAD2JQAAAAAAAAAAAAD2JQAAAAAAAPclAAAAAAAAAAAAAPclAAAAAAAA+CUAAAAAAAAAAAAA+CUAAAAAAAD5JQAAAAAAAAAAAAD5JQAAAAAAAPolAAAAAAAAAAAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzJQAAAAAAAPMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					390,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPwlAAAAAAAA/iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8JQAAAAAAAPwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					391,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAP0lAAAAAAAA/yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9JQAAAAAAAP0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+JQAAAAAAAP4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					393,
					1,
					"left_delete",
					null,
					"AQAAAP4lAAAAAAAA/iUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/JQAAAAAAAP8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": " lives"
					},
					"BgAAAP4lAAAAAAAA/yUAAAAAAAAAAAAA/yUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAEmAAAAAAAAAAAAAAEmAAAAAAAAAiYAAAAAAAAAAAAAAiYAAAAAAAADJgAAAAAAAAAAAAADJgAAAAAAAAQmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+JQAAAAAAAP4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAAGJgAAAAAAAAcmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAAkmAAAAAAAADiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJJgAAAAAAAAkmAAAAAAAA////////738"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "\npaste-9"
					},
					"CQAAAA4mAAAAAAAADyYAAAAAAAAAAAAADyYAAAAAAAARJgAAAAAAAAAAAAARJgAAAAAAABImAAAAAAAAAAAAABImAAAAAAAAEyYAAAAAAAAAAAAAEyYAAAAAAAAUJgAAAAAAAAAAAAAUJgAAAAAAABUmAAAAAAAAAAAAABUmAAAAAAAAFiYAAAAAAAAAAAAAFiYAAAAAAAAXJgAAAAAAAAAAAAAXJgAAAAAAABgmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOJgAAAAAAAA4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					403,
					2,
					"left_delete",
					null,
					"AgAAABcmAAAAAAAAFyYAAAAAAAABAAAAORYmAAAAAAAAFiYAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYJgAAAAAAABgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAABYmAAAAAAAAFyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWJgAAAAAAABYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					405,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABcmAAAAAAAAGSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXJgAAAAAAABcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "resi"
					},
					"BAAAABgmAAAAAAAAGSYAAAAAAAAAAAAAGSYAAAAAAAAaJgAAAAAAAAAAAAAaJgAAAAAAABsmAAAAAAAAAAAAABsmAAAAAAAAHCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYJgAAAAAAABgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					407,
					1,
					"insert_completion",
					{
						"completion": "residency",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "residency"
					},
					"AgAAABgmAAAAAAAAGCYAAAAAAAAEAAAAcmVzaRgmAAAAAAAAISYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcJgAAAAAAABwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcmAAAAAAAACCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHJgAAAAAAAAcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					415,
					1,
					"trim_trailing_white_space",
					null,
					"AwAAAA4mAAAAAAAADiYAAAAAAAABAAAAIPIlAAAAAAAA8iUAAAAAAAABAAAAIOIlAAAAAAAA4iUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIJgAAAAAAAAgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					426,
					1,
					"right_delete",
					null,
					"AQAAAH0lAAAAAAAAfSUAAAAAAACkAAAAbmFtZSA8LSAnQW5kcmUgQXNzdW1wY2FvJwpyZXNpZGVuY3kgPC0gJ0NoYXBlbCBIaWxsJwoKcGFzdGUwKG5hbWUsICcgbGl2ZXMgaW4gJywgcmVzaWRlbmN5KQoKbmFtZSAlPiUKICBwYXN0ZTAoKSAlPiUKICBwYXN0ZTAoJyBsaXZlcyBpbiAnKSAlPiUKICBwYXN0ZTAocmVzaWRlbmN5KQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JQAAAAAAACEmAAAAAAAAAAAAAAAAAAA"
				],
				[
					449,
					1,
					"cut",
					null,
					"AQAAAIQlAAAAAAAAhCUAAAAAAAAMAAAAZmluYWxfY2l0aWVz",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					451,
					1,
					"paste",
					null,
					"AQAAAH4lAAAAAAAAiiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+JQAAAAAAAH4lAAAAAAAAAAAAAACARkA"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAIolAAAAAAAAjyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKJQAAAAAAAIolAAAAAAAAAAAAAAAA8L8"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI8lAAAAAAAAkCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPJQAAAAAAAI8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					455,
					1,
					"left_delete",
					null,
					"AQAAAJAlAAAAAAAAkCUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRJQAAAAAAAJElAAAAAAAAAAAAAAAAAAA"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAJAlAAAAAAAAkiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					458,
					2,
					"right_delete",
					null,
					"AgAAAJclAAAAAAAAlyUAAAAAAAABAAAALJclAAAAAAAAlyUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXJQAAAAAAAJclAAAAAAAAAAAAAAAA8L8"
				],
				[
					474,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAKElAAAAAAAAoyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChJQAAAAAAAKElAAAAAAAAAAAAAAAAAAA"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALAlAAAAAAAAsiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwJQAAAAAAALAlAAAAAAAAAAAAAAAAAAA"
				],
				[
					490,
					1,
					"left_delete",
					null,
					"AQAAAJAlAAAAAAAAkCUAAAAAAAAoAAAAICBwdWxsKGNpdHkpICU+JQogIHVuaXF1ZSgpICU+JQogIHNvcnQoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAALglAAAAAAAA////////738"
				],
				[
					491,
					1,
					"reindent",
					null,
					"AQAAAJAlAAAAAAAAkiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQJQAAAAAAAJAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					492,
					1,
					"insert",
					{
						"characters": "mutate"
					},
					"BgAAAJIlAAAAAAAAkyUAAAAAAAAAAAAAkyUAAAAAAACUJQAAAAAAAAAAAACUJQAAAAAAAJUlAAAAAAAAAAAAAJUlAAAAAAAAliUAAAAAAAAAAAAAliUAAAAAAACXJQAAAAAAAAAAAACXJQAAAAAAAJglAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSJQAAAAAAAJIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					493,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJglAAAAAAAAmiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYJQAAAAAAAJglAAAAAAAAAAAAAAAA8L8"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": "new_cit"
					},
					"BwAAAJklAAAAAAAAmiUAAAAAAAAAAAAAmiUAAAAAAACbJQAAAAAAAAAAAACbJQAAAAAAAJwlAAAAAAAAAAAAAJwlAAAAAAAAnSUAAAAAAAAAAAAAnSUAAAAAAACeJQAAAAAAAAAAAACeJQAAAAAAAJ8lAAAAAAAAAAAAAJ8lAAAAAAAAoCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAKAlAAAAAAAAoSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgJQAAAAAAAKAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKElAAAAAAAAoiUAAAAAAAAAAAAAoiUAAAAAAACjJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChJQAAAAAAAKElAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKMlAAAAAAAApCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjJQAAAAAAAKMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BAAAAKQlAAAAAAAApSUAAAAAAAAAAAAApSUAAAAAAACmJQAAAAAAAAAAAACmJQAAAAAAAKclAAAAAAAAAAAAAKclAAAAAAAAqCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkJQAAAAAAAKQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJklAAAAAAAAmiUAAAAAAAAAAAAAmiUAAAAAAACcJQAAAAAAAAAAAACaJQAAAAAAAJolAAAAAAAAAgAAACAgmiUAAAAAAACeJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZJQAAAAAAAJklAAAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAK0lAAAAAAAAriUAAAAAAAAAAAAAriUAAAAAAACyJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtJQAAAAAAAK0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"left_delete",
					null,
					"AQAAALAlAAAAAAAAsCUAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyJQAAAAAAALIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "case"
					},
					"BQAAAKklAAAAAAAAqiUAAAAAAAAAAAAAqiUAAAAAAACqJQAAAAAAAAQAAABjaXR5qiUAAAAAAACrJQAAAAAAAAAAAACrJQAAAAAAAKwlAAAAAAAAAAAAAKwlAAAAAAAArSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtJQAAAAAAAKklAAAAAAAAAAAAAAAA8L8"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "_when"
					},
					"BQAAAK0lAAAAAAAAriUAAAAAAAAAAAAAriUAAAAAAACvJQAAAAAAAAAAAACvJQAAAAAAALAlAAAAAAAAAAAAALAlAAAAAAAAsSUAAAAAAAAAAAAAsSUAAAAAAACyJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtJQAAAAAAAK0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					536,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALIlAAAAAAAAtCUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyJQAAAAAAALIlAAAAAAAAAAAAAAAA8L8"
				],
				[
					537,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAALMlAAAAAAAAtCUAAAAAAAAAAAAAtCUAAAAAAAC4JQAAAAAAAAAAAAC4JQAAAAAAALklAAAAAAAAAAAAALklAAAAAAAAvSUAAAAAAAAAAAAAtCUAAAAAAAC0JQAAAAAAAAQAAAAgICAgtSUAAAAAAAC1JQAAAAAAAAQAAAAgICAgtSUAAAAAAAC7JQAAAAAAAAAAAAC0JQAAAAAAALolAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzJQAAAAAAALMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					539,
					1,
					"left_delete",
					null,
					"AgAAAL8lAAAAAAAAvyUAAAAAAAACAAAAICC0JQAAAAAAALQlAAAAAAAABgAAACAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBJQAAAAAAAMElAAAAAAAAAAAAAAAAS0A"
				],
				[
					541,
					1,
					"reindent",
					null,
					"AQAAALQlAAAAAAAAuiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0JQAAAAAAALQlAAAAAAAAAAAAAAAAQkA"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAALolAAAAAAAAuyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6JQAAAAAAALolAAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					1,
					"insert",
					{
						"characters": "tring"
					},
					"BQAAALslAAAAAAAAvCUAAAAAAAAAAAAAvCUAAAAAAAC9JQAAAAAAAAAAAAC9JQAAAAAAAL4lAAAAAAAAAAAAAL4lAAAAAAAAvyUAAAAAAAAAAAAAvyUAAAAAAADAJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7JQAAAAAAALslAAAAAAAA////////738"
				],
				[
					556,
					5,
					"left_delete",
					null,
					"BQAAAL8lAAAAAAAAvyUAAAAAAAABAAAAZ74lAAAAAAAAviUAAAAAAAABAAAAbr0lAAAAAAAAvSUAAAAAAAABAAAAabwlAAAAAAAAvCUAAAAAAAABAAAAcrslAAAAAAAAuyUAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAJQAAAAAAAMAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "tr_detect"
					},
					"CQAAALslAAAAAAAAvCUAAAAAAAAAAAAAvCUAAAAAAAC9JQAAAAAAAAAAAAC9JQAAAAAAAL4lAAAAAAAAAAAAAL4lAAAAAAAAvyUAAAAAAAAAAAAAvyUAAAAAAADAJQAAAAAAAAAAAADAJQAAAAAAAMElAAAAAAAAAAAAAMElAAAAAAAAwiUAAAAAAAAAAAAAwiUAAAAAAADDJQAAAAAAAAAAAADDJQAAAAAAAMQlAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7JQAAAAAAALslAAAAAAAAAAAAAAAA8L8"
				],
				[
					558,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMQlAAAAAAAAxiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEJQAAAAAAAMQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BAAAAMUlAAAAAAAAxiUAAAAAAAAAAAAAxiUAAAAAAADHJQAAAAAAAAAAAADHJQAAAAAAAMglAAAAAAAAAAAAAMglAAAAAAAAySUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFJQAAAAAAAMUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					560,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMklAAAAAAAAyiUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJJQAAAAAAAMklAAAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMolAAAAAAAAyyUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKJQAAAAAAAMolAAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMslAAAAAAAAzSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLJQAAAAAAAMslAAAAAAAAAAAAAAAA8L8"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMwlAAAAAAAAzSUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMJQAAAAAAAMwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"left_delete",
					null,
					"AQAAAMwlAAAAAAAAzCUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNJQAAAAAAAM0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "WESTOMN"
					},
					"BwAAAMwlAAAAAAAAzSUAAAAAAAAAAAAAzSUAAAAAAADOJQAAAAAAAAAAAADOJQAAAAAAAM8lAAAAAAAAAAAAAM8lAAAAAAAA0CUAAAAAAAAAAAAA0CUAAAAAAADRJQAAAAAAAAAAAADRJQAAAAAAANIlAAAAAAAAAAAAANIlAAAAAAAA0yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMJQAAAAAAAMwlAAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					2,
					"left_delete",
					null,
					"AgAAANIlAAAAAAAA0iUAAAAAAAABAAAATtElAAAAAAAA0SUAAAAAAAABAAAATQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTJQAAAAAAANMlAAAAAAAAAAAAAAAA8L8"
				],
				[
					567,
					1,
					"insert",
					{
						"characters": "N"
					},
					"AQAAANElAAAAAAAA0iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRJQAAAAAAANElAAAAAAAAAAAAAAAA8L8"
				],
				[
					577,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQlAAAAAAAA1SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUJQAAAAAAANQlAAAAAAAAAAAAAAAA8L8"
				],
				[
					578,
					1,
					"insert",
					{
						"characters": "~"
					},
					"AQAAANUlAAAAAAAA1iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVJQAAAAAAANUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYlAAAAAAAA1yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWJQAAAAAAANYlAAAAAAAA////////738"
				],
				[
					583,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAANclAAAAAAAA2SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXJQAAAAAAANclAAAAAAAAAAAAAAAA8L8"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANglAAAAAAAA2SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYJQAAAAAAANglAAAAAAAAAAAAAAAA8L8"
				],
				[
					585,
					1,
					"left_delete",
					null,
					"AQAAANglAAAAAAAA2CUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZJQAAAAAAANklAAAAAAAAAAAAAAAA8L8"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": "WESTOO"
					},
					"BgAAANglAAAAAAAA2SUAAAAAAAAAAAAA2SUAAAAAAADaJQAAAAAAAAAAAADaJQAAAAAAANslAAAAAAAAAAAAANslAAAAAAAA3CUAAAAAAAAAAAAA3CUAAAAAAADdJQAAAAAAAAAAAADdJQAAAAAAAN4lAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYJQAAAAAAANglAAAAAAAAAAAAAAAA8L8"
				],
				[
					587,
					1,
					"left_delete",
					null,
					"AQAAAN0lAAAAAAAA3SUAAAAAAAABAAAATw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeJQAAAAAAAN4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "N"
					},
					"AQAAAN0lAAAAAAAA3iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdJQAAAAAAAN0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAN8lAAAAAAAA4CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfJQAAAAAAAN8lAAAAAAAA////////738"
				],
				[
					594,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOAlAAAAAAAA4SUAAAAAAAAAAAAA4SUAAAAAAADnJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgJQAAAAAAAOAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": "str_detc"
					},
					"CAAAAOclAAAAAAAA6CUAAAAAAAAAAAAA6CUAAAAAAADpJQAAAAAAAAAAAADpJQAAAAAAAOolAAAAAAAAAAAAAOolAAAAAAAA6yUAAAAAAAAAAAAA6yUAAAAAAADsJQAAAAAAAAAAAADsJQAAAAAAAO0lAAAAAAAAAAAAAO0lAAAAAAAA7iUAAAAAAAAAAAAA7iUAAAAAAADvJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnJQAAAAAAAOclAAAAAAAAAAAAAAAA8L8"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAO8lAAAAAAAA8CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvJQAAAAAAAO8lAAAAAAAAAAAAAAAA8L8"
				],
				[
					597,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPAlAAAAAAAA8iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwJQAAAAAAAPAlAAAAAAAAAAAAAAAA8L8"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BAAAAPElAAAAAAAA8iUAAAAAAAAAAAAA8iUAAAAAAADzJQAAAAAAAAAAAADzJQAAAAAAAPQlAAAAAAAAAAAAAPQlAAAAAAAA9SUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxJQAAAAAAAPElAAAAAAAAAAAAAAAA8L8"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAO4lAAAAAAAA7yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuJQAAAAAAAO4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					603,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAPYlAAAAAAAA9yUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2JQAAAAAAAPYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPclAAAAAAAA+CUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3JQAAAAAAAPclAAAAAAAAAAAAAAAA8L8"
				],
				[
					605,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPglAAAAAAAA+iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4JQAAAAAAAPglAAAAAAAAAAAAAAAA8L8"
				],
				[
					606,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPklAAAAAAAA+iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5JQAAAAAAAPklAAAAAAAAAAAAAAAA8L8"
				],
				[
					607,
					1,
					"left_delete",
					null,
					"AQAAAPklAAAAAAAA+SUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6JQAAAAAAAPolAAAAAAAAAAAAAAAA8L8"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "MIAMI|M"
					},
					"BwAAAPklAAAAAAAA+iUAAAAAAAAAAAAA+iUAAAAAAAD7JQAAAAAAAAAAAAD7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAD+JQAAAAAAAP8lAAAAAAAAAAAAAP8lAAAAAAAAACYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5JQAAAAAAAPklAAAAAAAAAAAAAAAA8L8"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "IAMI"
					},
					"BAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAJgAAAAAAAAAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					610,
					1,
					"insert",
					{
						"characters": " BEACH|"
					},
					"BwAAAAQmAAAAAAAABSYAAAAAAAAAAAAABSYAAAAAAAAGJgAAAAAAAAAAAAAGJgAAAAAAAAcmAAAAAAAAAAAAAAcmAAAAAAAACCYAAAAAAAAAAAAACCYAAAAAAAAJJgAAAAAAAAAAAAAJJgAAAAAAAAomAAAAAAAAAAAAAAomAAAAAAAACyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEJgAAAAAAAAQmAAAAAAAAAAAAAAAA8L8"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAAsmAAAAAAAADCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALJgAAAAAAAAsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					612,
					1,
					"left_delete",
					null,
					"AQAAAAsmAAAAAAAACyYAAAAAAAABAAAASQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "MIAMO"
					},
					"BQAAAAsmAAAAAAAADCYAAAAAAAAAAAAADCYAAAAAAAANJgAAAAAAAAAAAAANJgAAAAAAAA4mAAAAAAAAAAAAAA4mAAAAAAAADyYAAAAAAAAAAAAADyYAAAAAAAAQJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALJgAAAAAAAAsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					615,
					1,
					"insert",
					{
						"characters": " ~"
					},
					"AgAAABImAAAAAAAAEyYAAAAAAAAAAAAAEyYAAAAAAAAUJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASJgAAAAAAABImAAAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQmAAAAAAAAFSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUJgAAAAAAABQmAAAAAAAAAAAAAAAA8L8"
				],
				[
					617,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAABUmAAAAAAAAFyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVJgAAAAAAABUmAAAAAAAAAAAAAAAA8L8"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABYmAAAAAAAAFyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWJgAAAAAAABYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					619,
					1,
					"left_delete",
					null,
					"AQAAABYmAAAAAAAAFiYAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXJgAAAAAAABcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "MIAMI"
					},
					"BQAAABYmAAAAAAAAFyYAAAAAAAAAAAAAFyYAAAAAAAAYJgAAAAAAAAAAAAAYJgAAAAAAABkmAAAAAAAAAAAAABkmAAAAAAAAGiYAAAAAAAAAAAAAGiYAAAAAAAAbJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWJgAAAAAAABYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABwmAAAAAAAAHSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcJgAAAAAAABwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					637,
					1,
					"left_delete",
					null,
					"AQAAAP0lAAAAAAAA/SUAAAAAAAATAAAASXxNSUFNSSBCRUFDSHxNSUFNTw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9JQAAAAAAABAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					638,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAI4lAAAAAAAAjiUAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9JQAAAAAAAP0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": "\nstr"
					},
					"BQAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAAQJgAAAAAAAAAAAAAQJgAAAAAAABEmAAAAAAAAAAAAABEmAAAAAAAAEiYAAAAAAAAAAAAAEiYAAAAAAAATJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJJgAAAAAAAAkmAAAAAAAAAAAAAAAA8L8"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "_detect)"
					},
					"CAAAABMmAAAAAAAAFCYAAAAAAAAAAAAAFCYAAAAAAAAVJgAAAAAAAAAAAAAVJgAAAAAAABYmAAAAAAAAAAAAABYmAAAAAAAAFyYAAAAAAAAAAAAAFyYAAAAAAAAYJgAAAAAAAAAAAAAYJgAAAAAAABkmAAAAAAAAAAAAABkmAAAAAAAAGiYAAAAAAAAAAAAAGiYAAAAAAAAbJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATJgAAAAAAABMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					650,
					1,
					"left_delete",
					null,
					"AQAAABomAAAAAAAAGiYAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbJgAAAAAAABsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					651,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABomAAAAAAAAHCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaJgAAAAAAABomAAAAAAAAAAAAAAAA8L8"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": "city,"
					},
					"BQAAABsmAAAAAAAAHCYAAAAAAAAAAAAAHCYAAAAAAAAdJgAAAAAAAAAAAAAdJgAAAAAAAB4mAAAAAAAAAAAAAB4mAAAAAAAAHyYAAAAAAAAAAAAAHyYAAAAAAAAgJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbJgAAAAAAABsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					654,
					1,
					"left_delete",
					null,
					"AQAAAPUlAAAAAAAA9SUAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2JQAAAAAAAPYlAAAAAAAAAAAAAADAaEA"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPUlAAAAAAAA9iUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1JQAAAAAAAPUlAAAAAAAAAAAAAAAA8L8"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAmAAAAAAAAISYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgJgAAAAAAACAmAAAAAAAAAAAAAADAaEA"
				],
				[
					658,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACEmAAAAAAAAIyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhJgAAAAAAACEmAAAAAAAAAAAAAAAA8L8"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACImAAAAAAAAIyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiJgAAAAAAACImAAAAAAAAAAAAAAAA8L8"
				],
				[
					661,
					1,
					"insert",
					{
						"characters": " ~"
					},
					"AgAAACUmAAAAAAAAJiYAAAAAAAAAAAAAJiYAAAAAAAAnJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlJgAAAAAAACUmAAAAAAAAAAAAAAAA8L8"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcmAAAAAAAAKCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnJgAAAAAAACcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					663,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACgmAAAAAAAAKiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoJgAAAAAAACgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					664,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkmAAAAAAAAKiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApJgAAAAAAACkmAAAAAAAAAAAAAAAA8L8"
				],
				[
					665,
					1,
					"left_delete",
					null,
					"AQAAACkmAAAAAAAAKSYAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqJgAAAAAAAComAAAAAAAAAAAAAAAA8L8"
				],
				[
					666,
					1,
					"insert",
					{
						"characters": "NEW"
					},
					"AwAAACkmAAAAAAAAKiYAAAAAAAAAAAAAKiYAAAAAAAArJgAAAAAAAAAAAAArJgAAAAAAACwmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApJgAAAAAAACkmAAAAAAAAAAAAAAAA8L8"
				],
				[
					667,
					1,
					"insert",
					{
						"characters": " YORK"
					},
					"BQAAACwmAAAAAAAALSYAAAAAAAAAAAAALSYAAAAAAAAuJgAAAAAAAAAAAAAuJgAAAAAAAC8mAAAAAAAAAAAAAC8mAAAAAAAAMCYAAAAAAAAAAAAAMCYAAAAAAAAxJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsJgAAAAAAACwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					668,
					1,
					"insert",
					{
						"characters": " CITY"
					},
					"BQAAADEmAAAAAAAAMiYAAAAAAAAAAAAAMiYAAAAAAAAzJgAAAAAAAAAAAAAzJgAAAAAAADQmAAAAAAAAAAAAADQmAAAAAAAANSYAAAAAAAAAAAAANSYAAAAAAAA2JgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxJgAAAAAAADEmAAAAAAAAAAAAAAAA8L8"
				],
				[
					670,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADcmAAAAAAAAOCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3JgAAAAAAADcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					675,
					1,
					"insert",
					{
						"characters": "NYC|"
					},
					"BQAAACImAAAAAAAAIyYAAAAAAAAAAAAAIyYAAAAAAAAjJgAAAAAAAAEAAAAgIyYAAAAAAAAkJgAAAAAAAAAAAAAkJgAAAAAAACUmAAAAAAAAAAAAACUmAAAAAAAAJiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiJgAAAAAAACMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "NE"
					},
					"AgAAACYmAAAAAAAAJyYAAAAAAAAAAAAAJyYAAAAAAAAoJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmJgAAAAAAACYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					677,
					1,
					"left_delete",
					null,
					"AQAAACcmAAAAAAAAJyYAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoJgAAAAAAACgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": " YORK"
					},
					"BQAAACcmAAAAAAAAKCYAAAAAAAAAAAAAKCYAAAAAAAApJgAAAAAAAAAAAAApJgAAAAAAAComAAAAAAAAAAAAAComAAAAAAAAKyYAAAAAAAAAAAAAKyYAAAAAAAAsJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnJgAAAAAAACcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "|"
					},
					"AQAAACwmAAAAAAAALSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsJgAAAAAAACwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": "NUEVA"
					},
					"BQAAAC0mAAAAAAAALiYAAAAAAAAAAAAALiYAAAAAAAAvJgAAAAAAAAAAAAAvJgAAAAAAADAmAAAAAAAAAAAAADAmAAAAAAAAMSYAAAAAAAAAAAAAMSYAAAAAAAAyJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtJgAAAAAAAC0mAAAAAAAAAAAAAAAA8L8"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": " YORK|"
					},
					"BgAAADImAAAAAAAAMyYAAAAAAAAAAAAAMyYAAAAAAAA0JgAAAAAAAAAAAAA0JgAAAAAAADUmAAAAAAAAAAAAADUmAAAAAAAANiYAAAAAAAAAAAAANiYAAAAAAAA3JgAAAAAAAAAAAAA3JgAAAAAAADgmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyJgAAAAAAADImAAAAAAAAAAAAAAAA8L8"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": "NEE"
					},
					"AwAAADgmAAAAAAAAOSYAAAAAAAAAAAAAOSYAAAAAAAA6JgAAAAAAAAAAAAA6JgAAAAAAADsmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4JgAAAAAAADgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					691,
					1,
					"insert",
					{
						"characters": " YORK"
					},
					"BQAAADsmAAAAAAAAPCYAAAAAAAAAAAAAPCYAAAAAAAA9JgAAAAAAAAAAAAA9JgAAAAAAAD4mAAAAAAAAAAAAAD4mAAAAAAAAPyYAAAAAAAAAAAAAPyYAAAAAAABAJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7JgAAAAAAADsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					696,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFUmAAAAAAAAViYAAAAAAAAAAAAAViYAAAAAAABcJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVJgAAAAAAAFUmAAAAAAAA////////738"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "TRUE"
					},
					"BAAAAFwmAAAAAAAAXSYAAAAAAAAAAAAAXSYAAAAAAABeJgAAAAAAAAAAAABeJgAAAAAAAF8mAAAAAAAAAAAAAF8mAAAAAAAAYCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcJgAAAAAAAFwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": " ~"
					},
					"AgAAAGAmAAAAAAAAYSYAAAAAAAAAAAAAYSYAAAAAAABiJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgJgAAAAAAAGAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGImAAAAAAAAYyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiJgAAAAAAAGImAAAAAAAAAAAAAAAA8L8"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "city"
					},
					"BAAAAGMmAAAAAAAAZCYAAAAAAAAAAAAAZCYAAAAAAABlJgAAAAAAAAAAAABlJgAAAAAAAGYmAAAAAAAAAAAAAGYmAAAAAAAAZyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjJgAAAAAAAGMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					706,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAHEmAAAAAAAAdiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxJgAAAAAAAHEmAAAAAAAA////////738"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "\npull"
					},
					"BgAAAHYmAAAAAAAAdyYAAAAAAAAAAAAAdyYAAAAAAAB5JgAAAAAAAAAAAAB5JgAAAAAAAHomAAAAAAAAAAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB8JgAAAAAAAAAAAAB8JgAAAAAAAH0mAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2JgAAAAAAAHYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					708,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH0mAAAAAAAAfyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JgAAAAAAAH0mAAAAAAAAAAAAAAAA8L8"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "new"
					},
					"AwAAAH4mAAAAAAAAfyYAAAAAAAAAAAAAfyYAAAAAAACAJgAAAAAAAAAAAACAJgAAAAAAAIEmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+JgAAAAAAAH4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					712,
					1,
					"insert",
					{
						"characters": "_city"
					},
					"BQAAAIEmAAAAAAAAgiYAAAAAAAAAAAAAgiYAAAAAAACDJgAAAAAAAAAAAACDJgAAAAAAAIQmAAAAAAAAAAAAAIQmAAAAAAAAhSYAAAAAAAAAAAAAhSYAAAAAAACGJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBJgAAAAAAAIEmAAAAAAAAAAAAAAAA8L8"
				],
				[
					714,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAIcmAAAAAAAAjCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHJgAAAAAAAIcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					715,
					1,
					"insert",
					{
						"characters": "\nunique"
					},
					"CAAAAIwmAAAAAAAAjSYAAAAAAAAAAAAAjSYAAAAAAACPJgAAAAAAAAAAAACPJgAAAAAAAJAmAAAAAAAAAAAAAJAmAAAAAAAAkSYAAAAAAAAAAAAAkSYAAAAAAACSJgAAAAAAAAAAAACSJgAAAAAAAJMmAAAAAAAAAAAAAJMmAAAAAAAAlCYAAAAAAAAAAAAAlCYAAAAAAACVJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMJgAAAAAAAIwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					716,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJUmAAAAAAAAlyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVJgAAAAAAAJUmAAAAAAAAAAAAAAAA8L8"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAJcmAAAAAAAAnCYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXJgAAAAAAAJcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "\nsirt"
					},
					"BgAAAJwmAAAAAAAAnSYAAAAAAAAAAAAAnSYAAAAAAACfJgAAAAAAAAAAAACfJgAAAAAAAKAmAAAAAAAAAAAAAKAmAAAAAAAAoSYAAAAAAAAAAAAAoSYAAAAAAACiJgAAAAAAAAAAAACiJgAAAAAAAKMmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcJgAAAAAAAJwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					720,
					3,
					"left_delete",
					null,
					"AwAAAKImAAAAAAAAoiYAAAAAAAABAAAAdKEmAAAAAAAAoSYAAAAAAAABAAAAcqAmAAAAAAAAoCYAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjJgAAAAAAAKMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": "ort"
					},
					"AwAAAKAmAAAAAAAAoSYAAAAAAAAAAAAAoSYAAAAAAACiJgAAAAAAAAAAAACiJgAAAAAAAKMmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgJgAAAAAAAKAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					722,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKMmAAAAAAAApSYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjJgAAAAAAAKMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					740,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0mAAAAAAAAbiYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtJgAAAAAAAG0mAAAAAAAAAAAAAAAgY0A"
				],
				[
					741,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG4mAAAAAAAAbyYAAAAAAAAAAAAAbyYAAAAAAABzJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuJgAAAAAAAG4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAG4mAAAAAAAAbyYAAAAAAAAAAAAAbyYAAAAAAABzJgAAAAAAAAAAAAB0JgAAAAAAAHQmAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuJgAAAAAAAG4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					749,
					1,
					"paste",
					null,
					"AQAAAHMmAAAAAAAASCcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzJgAAAAAAAHMmAAAAAAAAAAAAAAAA8L8"
				],
				[
					752,
					2,
					"unindent",
					null,
					"AgAAAG8mAAAAAAAAbyYAAAAAAAACAAAAICBvJgAAAAAAAG8mAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwJgAAAAAAAHAmAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"trim_trailing_white_space",
					null,
					"AwAAAHMnAAAAAAAAcycAAAAAAAABAAAAIGMnAAAAAAAAYycAAAAAAAABAAAAIE0nAAAAAAAATScAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvJgAAAAAAAG8mAAAAAAAAAAAAAAAA8L8"
				],
				[
					757,
					4,
					"left_delete",
					null,
					"BAAAAHomAAAAAAAAeiYAAAAAAAABAAAAeXkmAAAAAAAAeSYAAAAAAAABAAAAdHgmAAAAAAAAeCYAAAAAAAABAAAAaXcmAAAAAAAAdyYAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7JgAAAAAAAHsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					758,
					1,
					"insert",
					{
						"characters": "state"
					},
					"BQAAAHcmAAAAAAAAeCYAAAAAAAAAAAAAeCYAAAAAAAB5JgAAAAAAAAAAAAB5JgAAAAAAAHomAAAAAAAAAAAAAHomAAAAAAAAeyYAAAAAAAAAAAAAeyYAAAAAAAB8JgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3JgAAAAAAAHcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					797,
					1,
					"right_delete",
					null,
					"AQAAAEQnAAAAAAAARCcAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEJwAAAAAAAEQnAAAAAAAAAAAAAAAA8L8"
				],
				[
					804,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG4mAAAAAAAAbyYAAAAAAAAAAAAAbyYAAAAAAABzJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuJgAAAAAAAG4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					806,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJ0lAAAAAAAAniUAAAAAAAAAAAAAniUAAAAAAACiJQAAAAAAAAAAAAB0JgAAAAAAAHQmAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdJQAAAAAAAJ0lAAAAAAAAAAAAAAAAQkA"
				],
				[
					817,
					1,
					"insert",
					{
						"characters": "FL"
					},
					"AwAAALQmAAAAAAAAtSYAAAAAAAAAAAAAtSYAAAAAAAC1JgAAAAAAAAYAAABXRVNUT061JgAAAAAAALYmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0JgAAAAAAALomAAAAAAAAAAAAAAAA8L8"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": "FL"
					},
					"AwAAANsmAAAAAAAA3CYAAAAAAAAAAAAA3CYAAAAAAADcJgAAAAAAAAUAAABNSUFNSdwmAAAAAAAA3SYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgJgAAAAAAANsmAAAAAAAAAAAAAAAA8L8"
				],
				[
					828,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AgAAABwnAAAAAAAAHScAAAAAAAAAAAAAHScAAAAAAAAdJwAAAAAAAA0AAABORVcgWU9SSyBDSVRZ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApJwAAAAAAABwnAAAAAAAAAAAAAAAA8L8"
				],
				[
					829,
					1,
					"left_delete",
					null,
					"AQAAABwnAAAAAAAAHCcAAAAAAAABAAAAWQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdJwAAAAAAAB0nAAAAAAAAAAAAAAAA8L8"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": "NY"
					},
					"AgAAABwnAAAAAAAAHScAAAAAAAAAAAAAHScAAAAAAAAeJwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcJwAAAAAAABwnAAAAAAAAAAAAAAAA8L8"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": "sta"
					},
					"BAAAAC4nAAAAAAAALycAAAAAAAAAAAAALycAAAAAAAAvJwAAAAAAAAQAAABjaXR5LycAAAAAAAAwJwAAAAAAAAAAAAAwJwAAAAAAADEnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyJwAAAAAAAC4nAAAAAAAAAAAAAAAA8L8"
				],
				[
					837,
					1,
					"left_delete",
					null,
					"AQAAADAnAAAAAAAAMCcAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxJwAAAAAAADEnAAAAAAAAAAAAAAAA8L8"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "ate"
					},
					"AwAAADAnAAAAAAAAMScAAAAAAAAAAAAAMScAAAAAAAAyJwAAAAAAAAAAAAAyJwAAAAAAADMnAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwJwAAAAAAADAnAAAAAAAAAAAAAAAA8L8"
				],
				[
					863,
					1,
					"left_delete",
					null,
					"AQAAAHAnAAAAAAAAcCcAAAAAAACOAAAACgogIGRwbHlyOjptdXRhdGUoCiAgICBuZXdfY2l0eSA9IGNhc2Vfd2hlbigKICAgICAgICAsCiAgICAgICAgLAogICAgICAgICwKICAgICAgICAsCiAgICAgICAgLAogICAgICAgICwKICAgICAgICAsCiAgICAgICAgLAogICAgICApCiAgICApCiAgKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwJwAAAAAAAP4nAAAAAAAAAAAAAAAA8L8"
				],
				[
					864,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAJklAAAAAAAAmSUAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwJwAAAAAAAHAnAAAAAAAAAAAAAAAA8L8"
				],
				[
					875,
					1,
					"left_delete",
					null,
					"AQAAADUnAAAAAAAANScAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2JwAAAAAAADYnAAAAAAAAAAAAAAAAAAA"
				],
				[
					902,
					1,
					"right_delete",
					null,
					"AQAAAH0lAAAAAAAAfSUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9JQAAAAAAAH0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					908,
					2,
					"left_delete",
					null,
					"AgAAADYoAAAAAAAANigAAAAAAAABAAAAIDUoAAAAAAAANSgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3KAAAAAAAADcoAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "dev/01_start.R",
			"settings":
			{
				"buffer_size": 1723,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# Building a Prod-Ready, Robust Shiny Application.\n# \n# README: each step of the dev files is optional, and you don't have to \n# fill every dev scripts before getting started. \n# 01_start.R should be filled at start. \n# 02_dev.R should be used to keep track of your development during the project.\n# 03_deploy.R should be used once you need to deploy your app.\n# \n# \n###################################\n#### CURRENT FILE: DEV SCRIPT #####\n###################################\n\n# Engineering\n\n## Dependencies ----\n## Add one line by package you want to add as dependency\nusethis::use_package('bs4Dash')\nusethis::use_package('bslib')\nusethis::use_package('dplyr')\nusethis::use_package('ggalluvial')\nusethis::use_package('ggplot2')\nusethis::use_package('ggrepel')\nusethis::use_package('janitor')\nusethis::use_package('lmtest')\nusethis::use_package('magrittr')\nusethis::use_package('maps')\nusethis::use_package('readr')\nusethis::use_package('readxl')\nusethis::use_package('sandwich')\nusethis::use_package('shinipsum')\nusethis::use_package('stringr')\nusethis::use_package('tidyr')\nusethis::use_package('tibble')\nusethis::use_package('treemapify')\nusethis::use_pipe()\n\n## Add modules ----\nmodules <- c(\n  '01_welcome',\n  '02_selection',\n  '03_demographics',\n  '04_experience',\n  '05_attachment',\n  '06_return',\n  '07_senseofus',\n  '08_compare',\n  '09_acknowledgement'\n)\n\n## Create a module infrastructure in R/\nlapply(modules, golem::add_module)\n\n## Add helper functions ----\n## Creates ftc_* and utils_*\nlapply(modules,function(x){golem::add_fct('helpers', module = x, open = FALSE)})\ngolem::add_utils('helpers')\n\n## External resources\n## Creates .js and .css files at inst/app/www\ngolem::add_js_file('script')\ngolem::add_js_handler('handlers')\ngolem::add_css_file('custom')\n\n## Add internal datasets ----\n## If you have data in your package\nusethis::use_data_raw(name = 'survey_data', open = FALSE)\n\n## Tests ----\n## Add one line by test you want to create\nusethis::use_test('app')\nusethis::use_coverage()\n\n# Documentation\n\n## Vignette ----\nusethis::use_vignette('DiasporaSurveyResults')\ndevtools::build_vignettes()\n\n## Code coverage ----\n## (You'll need GitHub there)\nusethis::use_github()\nusethis::use_travis()\nusethis::use_appveyor()\n\n# You're now set! ----\n# go to dev/03_deploy.R\nrstudioapi::navigateToFile('dev/03_deploy.R')\n\n",
			"file": "dev/02_dev.R",
			"file_size": 2296,
			"file_write_time": 132612458257216689,
			"settings":
			{
				"buffer_size": 2327,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADIEAAAAAAAAMwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAADMEAAAAAAAAUQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzBAAAAAAAADMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					3,
					"left_delete",
					null,
					"AwAAAE0EAAAAAAAATQQAAAAAAAABAAAAckwEAAAAAAAATAQAAAAAAAABAAAAeUsEAAAAAAAASwQAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBAAAAAAAAE4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "bble"
					},
					"BAAAAEsEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABNBAAAAAAAAAAAAABNBAAAAAAAAE4EAAAAAAAAAAAAAE4EAAAAAAAATwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBAAAAAAAAEsEAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"right_delete",
					null,
					"AQAAAFEEAAAAAAAAUQQAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRBAAAAAAAAFEEAAAAAAAA////////738"
				]
			]
		},
		{
			"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/03_demographics.R",
			"settings":
			{
				"buffer_size": 12173,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "R/mod_03_demographics_fct_helpers.R",
			"settings":
			{
				"buffer_size": 16749,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3742,
					1,
					"insert",
					{
						"characters": "$n"
					},
					"AgAAAHcoAAAAAAAAeCgAAAAAAAAAAAAAeCgAAAAAAAB5KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3KAAAAAAAAHcoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3747,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAHkoAAAAAAAAfigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5KAAAAAAAAHkoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3749,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAH4oAAAAAAAAfygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+KAAAAAAAAH4oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3751,
					1,
					"insert",
					{
						"characters": "orte"
					},
					"BAAAAH8oAAAAAAAAgCgAAAAAAAAAAAAAgCgAAAAAAACBKAAAAAAAAAAAAACBKAAAAAAAAIIoAAAAAAAAAAAAAIIoAAAAAAAAgygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/KAAAAAAAAH8oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3752,
					1,
					"left_delete",
					null,
					"AQAAAIIoAAAAAAAAgigAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDKAAAAAAAAIMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3753,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIIoAAAAAAAAhCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCKAAAAAAAAIIoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3762,
					1,
					"left_delete",
					null,
					"AQAAAIEpAAAAAAAAgSkAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCKQAAAAAAAIIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3763,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIEpAAAAAAAAgikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBKQAAAAAAAIEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3783,
					1,
					"insert",
					{
						"characters": "0.1"
					},
					"BAAAAIEpAAAAAAAAgikAAAAAAAAAAAAAgikAAAAAAACCKQAAAAAAAAIAAAAyMIIpAAAAAAAAgykAAAAAAAAAAAAAgykAAAAAAACEKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDKQAAAAAAAIEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3784,
					1,
					"left_delete",
					null,
					"AQAAAIMpAAAAAAAAgykAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEKQAAAAAAAIQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3785,
					1,
					"insert",
					{
						"characters": "01"
					},
					"AgAAAIMpAAAAAAAAhCkAAAAAAAAAAAAAhCkAAAAAAACFKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDKQAAAAAAAIMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3787,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAIUpAAAAAAAAhikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFKQAAAAAAAIUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3789,
					1,
					"insert",
					{
						"characters": "max(n)"
					},
					"BgAAAIYpAAAAAAAAhykAAAAAAAAAAAAAhykAAAAAAACIKQAAAAAAAAAAAACIKQAAAAAAAIkpAAAAAAAAAAAAAIkpAAAAAAAAiikAAAAAAAAAAAAAiikAAAAAAACLKQAAAAAAAAAAAACLKQAAAAAAAIwpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGKQAAAAAAAIYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3807,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAIUpAAAAAAAAhikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFKQAAAAAAAIUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3835,
					2,
					"left_delete",
					null,
					"AgAAAIUpAAAAAAAAhSkAAAAAAAABAAAANYQpAAAAAAAAhCkAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGKQAAAAAAAIYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3836,
					1,
					"insert",
					{
						"characters": "08"
					},
					"AgAAAIQpAAAAAAAAhSkAAAAAAAAAAAAAhSkAAAAAAACGKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEKQAAAAAAAIQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3858,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIApAAAAAAAAgSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAKQAAAAAAAIApAAAAAAAAAAAAAAAA8L8"
				],
				[
					3860,
					1,
					"left_delete",
					null,
					"AQAAAIApAAAAAAAAgCkAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBKQAAAAAAAIEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3863,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAH0pAAAAAAAAfikAAAAAAAAAAAAAfikAAAAAAAB/KQAAAAAAAAAAAAB/KQAAAAAAAIApAAAAAAAAAAAAAIApAAAAAAAAgSkAAAAAAAAAAAAAgSkAAAAAAACCKQAAAAAAAAAAAACCKQAAAAAAAIMpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9KQAAAAAAAH0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					3866,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAJEpAAAAAAAAkikAAAAAAAAAAAAAkikAAAAAAACTKQAAAAAAAAAAAACTKQAAAAAAAJQpAAAAAAAAAAAAAJQpAAAAAAAAlSkAAAAAAAAAAAAAlSkAAAAAAACWKQAAAAAAAAAAAACWKQAAAAAAAJcpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRKQAAAAAAAJEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3870,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAJspAAAAAAAAnCkAAAAAAAAAAAAAnCkAAAAAAACdKQAAAAAAAAAAAACdKQAAAAAAAJ4pAAAAAAAAAAAAAJ4pAAAAAAAAnykAAAAAAAAAAAAAnykAAAAAAACgKQAAAAAAAAAAAACgKQAAAAAAAKEpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbKQAAAAAAAJspAAAAAAAAAAAAAAAA8L8"
				],
				[
					3884,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"EwAAAOMoAAAAAAAA5CgAAAAAAAAAAAAA2CgAAAAAAADZKAAAAAAAAAAAAADZKAAAAAAAANkoAAAAAAAAAQAAACDFKAAAAAAAAMYoAAAAAAAAAAAAAOUoAAAAAAAA5igAAAAAAAAAAAAA2igAAAAAAADbKAAAAAAAAAAAAADGKAAAAAAAAMcoAAAAAAAAAAAAAOgoAAAAAAAA6SgAAAAAAAAAAAAA3CgAAAAAAADdKAAAAAAAAAAAAADHKAAAAAAAAMgoAAAAAAAAAAAAAOsoAAAAAAAA7CgAAAAAAAAAAAAA3igAAAAAAADfKAAAAAAAAAAAAADIKAAAAAAAAMkoAAAAAAAAAAAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA4CgAAAAAAADhKAAAAAAAAAAAAADJKAAAAAAAAMooAAAAAAAAAAAAAPEoAAAAAAAA8igAAAAAAAAAAAAA4igAAAAAAADjKAAAAAAAAAAAAADKKAAAAAAAAMsoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAMAAADFKAAAAAAAAMUoAAAAAAAAAAAAAAAA8L/YKAAAAAAAANkoAAAAAAAAAAAAAAAA8L/jKAAAAAAAAOMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3891,
					1,
					"right_delete",
					null,
					"AgAAAOYoAAAAAAAA5igAAAAAAAABAAAAINooAAAAAAAA2igAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAADaKAAAAAAAANooAAAAAAAAAAAAAAAA8L/mKAAAAAAAAOYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3893,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BgAAAOUoAAAAAAAA5igAAAAAAAAAAAAA5igAAAAAAADqKAAAAAAAAAAAAADaKAAAAAAAANsoAAAAAAAAAAAAANsoAAAAAAAA3ygAAAAAAAAAAAAA2ygAAAAAAADbKAAAAAAAAAQAAAAgICAg2ygAAAAAAADhKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAADaKAAAAAAAANooAAAAAAAAAAAAAAAA8L/lKAAAAAAAAOUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3898,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAMEoAAAAAAAAwigAAAAAAAAAAAAAwigAAAAAAADGKAAAAAAAAAAAAADCKAAAAAAAAMIoAAAAAAAABAAAACAgICDCKAAAAAAAAMgoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBKAAAAAAAAMEoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3903,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAPgoAAAAAAAA+igAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4KAAAAAAAAPgoAAAAAAAAAAAAAAAAQkA"
				],
				[
					3908,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB4pAAAAAAAAHykAAAAAAAAAAAAAHykAAAAAAAAlKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeKQAAAAAAAB4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					3910,
					1,
					"left_delete",
					null,
					"AQAAACMpAAAAAAAAIykAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlKQAAAAAAACUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3920,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsoAAAAAAAA7CgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrKAAAAAAAAOsoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3929,
					1,
					"left_delete",
					null,
					"AQAAALUpAAAAAAAAtSkAAAAAAAABAAAAOA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2KQAAAAAAALYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3931,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAALUpAAAAAAAAtikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1KQAAAAAAALUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					3939,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAIQoAAAAAAAAiSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEKAAAAAAAAIQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3941,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAIkoAAAAAAAAiigAAAAAAAAAAAAAiigAAAAAAACLKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJKAAAAAAAAIkoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3942,
					2,
					"left_delete",
					null,
					"AgAAAIooAAAAAAAAiigAAAAAAAABAAAAYYkoAAAAAAAAiSgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLKAAAAAAAAIsoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3943,
					1,
					"insert",
					{
						"characters": "max"
					},
					"AwAAAIkoAAAAAAAAiigAAAAAAAAAAAAAiigAAAAAAACLKAAAAAAAAAAAAACLKAAAAAAAAIwoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJKAAAAAAAAIkoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3944,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIwoAAAAAAAAjigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMKAAAAAAAAIwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3950,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI4oAAAAAAAAjygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOKAAAAAAAAI4oAAAAAAAA////////738"
				],
				[
					3952,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAI8oAAAAAAAAkCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPKAAAAAAAAI8oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3953,
					1,
					"insert",
					{
						"characters": " /"
					},
					"AgAAAJAoAAAAAAAAkSgAAAAAAAAAAAAAkSgAAAAAAACSKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQKAAAAAAAAJAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3954,
					1,
					"left_delete",
					null,
					"AQAAAJEoAAAAAAAAkSgAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSKAAAAAAAAJIoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3955,
					1,
					"insert",
					{
						"characters": ".007"
					},
					"BAAAAJEoAAAAAAAAkigAAAAAAAAAAAAAkigAAAAAAACTKAAAAAAAAAAAAACTKAAAAAAAAJQoAAAAAAAAAAAAAJQoAAAAAAAAlSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRKAAAAAAAAJEoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3960,
					1,
					"left_delete",
					null,
					"AQAAAJQoAAAAAAAAlCgAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVKAAAAAAAAJUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3961,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJQoAAAAAAAAlSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUKAAAAAAAAJQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3962,
					2,
					"left_delete",
					null,
					"AgAAAJQoAAAAAAAAlCgAAAAAAAABAAAAMZMoAAAAAAAAkygAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVKAAAAAAAAJUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3963,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJMoAAAAAAAAlCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTKAAAAAAAAJMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3967,
					1,
					"insert",
					{
						"characters": "facot"
					},
					"BgAAAGsoAAAAAAAAbCgAAAAAAAAAAAAAbCgAAAAAAABsKAAAAAAAACkAAABwbG90MDZfZmluYWwkbiAlPiUgc29ydCgpICU+JSBtYXgoKSAqIC4wMWwoAAAAAAAAbSgAAAAAAAAAAAAAbSgAAAAAAABuKAAAAAAAAAAAAABuKAAAAAAAAG8oAAAAAAAAAAAAAG8oAAAAAAAAcCgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUKAAAAAAAAGsoAAAAAAAAAAAAAAAAMkA"
				],
				[
					3968,
					2,
					"left_delete",
					null,
					"AgAAAG8oAAAAAAAAbygAAAAAAAABAAAAdG4oAAAAAAAAbigAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwKAAAAAAAAHAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3969,
					1,
					"insert",
					{
						"characters": "ot <- "
					},
					"AwAAAG4oAAAAAAAAbygAAAAAAAAAAAAAbygAAAAAAABwKAAAAAAAAAAAAABwKAAAAAAAAHQoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuKAAAAAAAAG4oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3970,
					6,
					"left_delete",
					null,
					"BgAAAHMoAAAAAAAAcygAAAAAAAABAAAAIHIoAAAAAAAAcigAAAAAAAABAAAALXEoAAAAAAAAcSgAAAAAAAABAAAAPHAoAAAAAAAAcCgAAAAAAAABAAAAIG8oAAAAAAAAbygAAAAAAAABAAAAdG4oAAAAAAAAbigAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0KAAAAAAAAHQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3971,
					1,
					"insert",
					{
						"characters": "tor <- "
					},
					"BAAAAG4oAAAAAAAAbygAAAAAAAAAAAAAbygAAAAAAABwKAAAAAAAAAAAAABwKAAAAAAAAHEoAAAAAAAAAAAAAHEoAAAAAAAAdSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuKAAAAAAAAG4oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3972,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAHQoAAAAAAAAdCgAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1KAAAAAAAAHUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3975,
					1,
					"insert",
					{
						"characters": " ifelse"
					},
					"BwAAAHQoAAAAAAAAdSgAAAAAAAAAAAAAdSgAAAAAAAB2KAAAAAAAAAAAAAB2KAAAAAAAAHcoAAAAAAAAAAAAAHcoAAAAAAAAeCgAAAAAAAAAAAAAeCgAAAAAAAB5KAAAAAAAAAAAAAB5KAAAAAAAAHooAAAAAAAAAAAAAHooAAAAAAAAeygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0KAAAAAAAAHQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3976,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHsoAAAAAAAAfSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7KAAAAAAAAHsoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3977,
					1,
					"insert",
					{
						"characters": "max"
					},
					"AwAAAHwoAAAAAAAAfSgAAAAAAAAAAAAAfSgAAAAAAAB+KAAAAAAAAAAAAAB+KAAAAAAAAH8oAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8KAAAAAAAAHwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3978,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8oAAAAAAAAgSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/KAAAAAAAAH8oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3983,
					1,
					"insert",
					{
						"characters": "plot06_f"
					},
					"CAAAAIAoAAAAAAAAgSgAAAAAAAAAAAAAgSgAAAAAAACCKAAAAAAAAAAAAACCKAAAAAAAAIMoAAAAAAAAAAAAAIMoAAAAAAAAhCgAAAAAAAAAAAAAhCgAAAAAAACFKAAAAAAAAAAAAACFKAAAAAAAAIYoAAAAAAAAAAAAAIYoAAAAAAAAhygAAAAAAAAAAAAAhygAAAAAAACIKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAKAAAAAAAAIAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3984,
					1,
					"insert",
					{
						"characters": "inal$"
					},
					"BQAAAIgoAAAAAAAAiSgAAAAAAAAAAAAAiSgAAAAAAACKKAAAAAAAAAAAAACKKAAAAAAAAIsoAAAAAAAAAAAAAIsoAAAAAAAAjCgAAAAAAAAAAAAAjCgAAAAAAACNKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIKAAAAAAAAIgoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3986,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAI0oAAAAAAAAjigAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNKAAAAAAAAI0oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3989,
					1,
					"insert",
					{
						"characters": " ."
					},
					"AgAAAI8oAAAAAAAAkCgAAAAAAAAAAAAAkCgAAAAAAACRKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPKAAAAAAAAI8oAAAAAAAAAAAAAAAA8L8"
				],
				[
					3990,
					1,
					"left_delete",
					null,
					"AQAAAJAoAAAAAAAAkCgAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRKAAAAAAAAJEoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3991,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAJAoAAAAAAAAkSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQKAAAAAAAAJAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3992,
					1,
					"insert",
					{
						"characters": " 100"
					},
					"BAAAAJEoAAAAAAAAkigAAAAAAAAAAAAAkigAAAAAAACTKAAAAAAAAAAAAACTKAAAAAAAAJQoAAAAAAAAAAAAAJQoAAAAAAAAlSgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRKAAAAAAAAJEoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3997,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUoAAAAAAAAligAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVKAAAAAAAAJUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					3998,
					1,
					"insert",
					{
						"characters": " .0"
					},
					"AwAAAJYoAAAAAAAAlygAAAAAAAAAAAAAlygAAAAAAACYKAAAAAAAAAAAAACYKAAAAAAAAJkoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWKAAAAAAAAJYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4012,
					1,
					"right_delete",
					null,
					"AQAAAGsoAAAAAAAAaygAAAAAAAAvAAAAZmFjdG9yIDwtIGlmZWxzZShtYXgocGxvdDA2X2ZpbmFsJG4pID4gMTAwLCAuMCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaKAAAAAAAAGsoAAAAAAAAAAAAAAAAMkA"
				],
				[
					4017,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAJ4pAAAAAAAAnykAAAAAAAAAAAAAnykAAAAAAACfKQAAAAAAAAMAAABtYXg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChKQAAAAAAAJ4pAAAAAAAAAAAAAAAA8L8"
				],
				[
					4019,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAJ8pAAAAAAAAoCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfKQAAAAAAAJ8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					4021,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAKApAAAAAAAAoSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgKQAAAAAAAKApAAAAAAAAAAAAAAAA8L8"
				],
				[
					4022,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAGkoAAAAAAAAaSgAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChKQAAAAAAAKEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					4030,
					2,
					"right_delete",
					null,
					"AgAAAGgoAAAAAAAAaCgAAAAAAAABAAAACmgoAAAAAAAAaCgAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoKAAAAAAAAGgoAAAAAAAAAAAAAADAeEA"
				],
				[
					4051,
					1,
					"left_delete",
					null,
					"AQAAAJgpAAAAAAAAmCkAAAAAAAABAAAANw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZKQAAAAAAAJkpAAAAAAAAAAAAAAAA8L8"
				],
				[
					4053,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAJgpAAAAAAAAmSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYKQAAAAAAAJgpAAAAAAAAAAAAAAAA8L8"
				],
				[
					4078,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAGgYAAAAAAAAahgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6GAAAAAAAAHoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4082,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAGgYAAAAAAAAaBgAAAAAAAACAAAAIyA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8GAAAAAAAAHwYAAAAAAAAAAAAAADAaEA"
				],
				[
					4104,
					1,
					"insert",
					{
						"characters": "B"
					},
					"AgAAAHQYAAAAAAAAdRgAAAAAAAAAAAAAdRgAAAAAAAB1GAAAAAAAAAUAAABTcGFpbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0GAAAAAAAAHkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4106,
					1,
					"insert",
					{
						"characters": "eligum"
					},
					"BgAAAHUYAAAAAAAAdhgAAAAAAAAAAAAAdhgAAAAAAAB3GAAAAAAAAAAAAAB3GAAAAAAAAHgYAAAAAAAAAAAAAHgYAAAAAAAAeRgAAAAAAAAAAAAAeRgAAAAAAAB6GAAAAAAAAAAAAAB6GAAAAAAAAHsYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1GAAAAAAAAHUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4108,
					4,
					"left_delete",
					null,
					"BAAAAHoYAAAAAAAAehgAAAAAAAABAAAAbXkYAAAAAAAAeRgAAAAAAAABAAAAdXgYAAAAAAAAeBgAAAAAAAABAAAAZ3cYAAAAAAAAdxgAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7GAAAAAAAAHsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4109,
					1,
					"insert",
					{
						"characters": "gium"
					},
					"BAAAAHcYAAAAAAAAeBgAAAAAAAAAAAAAeBgAAAAAAAB5GAAAAAAAAAAAAAB5GAAAAAAAAHoYAAAAAAAAAAAAAHoYAAAAAAAAexgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3GAAAAAAAAHcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4186,
					1,
					"right_delete",
					null,
					"AQAAAL0PAAAAAAAAvQ8AAAAAAABIAAAAICBybShsaXN0PWxzKCkpCiAgbGlicmFyeShtYWdyaXR0cikKICBsaWJyYXJ5KHJsYW5nKQogIGxpYnJhcnkoZ2dwbG90MikK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8JwAAAAAAAHwnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4190,
					1,
					"right_delete",
					null,
					"AQAAANYXAAAAAAAA1hcAAAAAAABeAAAAICBybShsaXN0PWxzKCkpCiAgbGlicmFyeShtYWdyaXR0cikKICBsaWJyYXJ5KHJsYW5nKQogIGxpYnJhcnkoZ2dwbG90MikKICBjb3VudHJ5IDwtICdCZWxnaXVtJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0JwAAAAAAADQnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4219,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"EgAAAM8RAAAAAAAA0BEAAAAAAAAAAAAAnxEAAAAAAACgEQAAAAAAAAAAAACTEQAAAAAAAJQRAAAAAAAAAAAAANIRAAAAAAAA0xEAAAAAAAAAAAAAoREAAAAAAACiEQAAAAAAAAAAAACUEQAAAAAAAJURAAAAAAAAAAAAANURAAAAAAAA1hEAAAAAAAAAAAAAoxEAAAAAAACkEQAAAAAAAAAAAACVEQAAAAAAAJYRAAAAAAAAAAAAANgRAAAAAAAA2REAAAAAAAAAAAAApREAAAAAAACmEQAAAAAAAAAAAACWEQAAAAAAAJcRAAAAAAAAAAAAANsRAAAAAAAA3BEAAAAAAAAAAAAApxEAAAAAAACoEQAAAAAAAAAAAACXEQAAAAAAAJgRAAAAAAAAAAAAAN4RAAAAAAAA3xEAAAAAAAAAAAAAqREAAAAAAACqEQAAAAAAAAAAAACYEQAAAAAAAJkRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWJgAAAAAAANYmAAAAAAAAAAAAAAAA8L8"
				],
				[
					4225,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAACcSAAAAAAAAKBIAAAAAAAAAAAAAKBIAAAAAAAApEgAAAAAAAAAAAAApEgAAAAAAACoSAAAAAAAAAAAAACoSAAAAAAAAKxIAAAAAAAAAAAAAKxIAAAAAAAAsEgAAAAAAAAAAAAAsEgAAAAAAAC0SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoJgAAAAAAAOgmAAAAAAAAAAAAAAAA8L8"
				],
				[
					4238,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"EgAAABkaAAAAAAAAGhoAAAAAAAAAAAAA1RkAAAAAAADWGQAAAAAAAAAAAADOGQAAAAAAAM8ZAAAAAAAAAAAAABwaAAAAAAAAHRoAAAAAAAAAAAAA1xkAAAAAAADYGQAAAAAAAAAAAADPGQAAAAAAANAZAAAAAAAAAAAAAB8aAAAAAAAAIBoAAAAAAAAAAAAA2RkAAAAAAADaGQAAAAAAAAAAAADQGQAAAAAAANEZAAAAAAAAAAAAACIaAAAAAAAAIxoAAAAAAAAAAAAA2xkAAAAAAADcGQAAAAAAAAAAAADRGQAAAAAAANIZAAAAAAAAAAAAACUaAAAAAAAAJhoAAAAAAAAAAAAA3RkAAAAAAADeGQAAAAAAAAAAAADSGQAAAAAAANMZAAAAAAAAAAAAACgaAAAAAAAAKRoAAAAAAAAAAAAA3xkAAAAAAADgGQAAAAAAAAAAAADTGQAAAAAAANQZAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuJgAAAAAAAO4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					4257,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"EgAAAMgaAAAAAAAAyRoAAAAAAAAAAAAAiRoAAAAAAACKGgAAAAAAAAAAAACAGgAAAAAAAIEaAAAAAAAAAAAAAMsaAAAAAAAAzBoAAAAAAAAAAAAAixoAAAAAAACMGgAAAAAAAAAAAACBGgAAAAAAAIIaAAAAAAAAAAAAAM4aAAAAAAAAzxoAAAAAAAAAAAAAjRoAAAAAAACOGgAAAAAAAAAAAACCGgAAAAAAAIMaAAAAAAAAAAAAANEaAAAAAAAA0hoAAAAAAAAAAAAAjxoAAAAAAACQGgAAAAAAAAAAAACDGgAAAAAAAIQaAAAAAAAAAAAAANQaAAAAAAAA1RoAAAAAAAAAAAAAkRoAAAAAAACSGgAAAAAAAAAAAACEGgAAAAAAAIUaAAAAAAAAAAAAANcaAAAAAAAA2BoAAAAAAAAAAAAAkxoAAAAAAACUGgAAAAAAAAAAAACFGgAAAAAAAIYaAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4274,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"DAAAALYaAAAAAAAAtxoAAAAAAAAAAAAABxoAAAAAAAAIGgAAAAAAAAAAAAC4GgAAAAAAALkaAAAAAAAAAAAAAAgaAAAAAAAACRoAAAAAAAAAAAAAuhoAAAAAAAC7GgAAAAAAAAAAAAAJGgAAAAAAAAoaAAAAAAAAAAAAALwaAAAAAAAAvRoAAAAAAAAAAAAAChoAAAAAAAALGgAAAAAAAAAAAAC+GgAAAAAAAL8aAAAAAAAAAAAAAAsaAAAAAAAADBoAAAAAAAAAAAAAwBoAAAAAAADBGgAAAAAAAAAAAAAMGgAAAAAAAA0aAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASJwAAAAAAABInAAAAAAAAAAAAAAAA8L8"
				],
				[
					4282,
					1,
					"right_delete",
					null,
					"AQAAAPAZAAAAAAAA8BkAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeJwAAAAAAAB4nAAAAAAAAAAAAAAAA8L8"
				],
				[
					4284,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPAZAAAAAAAA8RkAAAAAAAAAAAAA8RkAAAAAAAD3GQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdJwAAAAAAAB0nAAAAAAAAAAAAAAAA8L8"
				],
				[
					4290,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKsaAAAAAAAArBoAAAAAAAAAAAAArBoAAAAAAACyGgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkJwAAAAAAACQnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4292,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAKoaAAAAAAAAqhoAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArJwAAAAAAACsnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4311,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"JAAAAD8dAAAAAAAAQB0AAAAAAAAAAAAAGx0AAAAAAAAcHQAAAAAAAAAAAACKHAAAAAAAAIscAAAAAAAAAAAAAGocAAAAAAAAaxwAAAAAAAAAAAAAPhwAAAAAAAA/HAAAAAAAAAAAAAARHAAAAAAAABIcAAAAAAAAAAAAAEUdAAAAAAAARh0AAAAAAAAAAAAAIB0AAAAAAAAhHQAAAAAAAAAAAACOHAAAAAAAAI8cAAAAAAAAAAAAAG0cAAAAAAAAbhwAAAAAAAAAAAAAQBwAAAAAAABBHAAAAAAAAAAAAAASHAAAAAAAABMcAAAAAAAAAAAAAEsdAAAAAAAATB0AAAAAAAAAAAAAJR0AAAAAAAAmHQAAAAAAAAAAAACSHAAAAAAAAJMcAAAAAAAAAAAAAHAcAAAAAAAAcRwAAAAAAAAAAAAAQhwAAAAAAABDHAAAAAAAAAAAAAATHAAAAAAAABQcAAAAAAAAAAAAAFEdAAAAAAAAUh0AAAAAAAAAAAAAKh0AAAAAAAArHQAAAAAAAAAAAACWHAAAAAAAAJccAAAAAAAAAAAAAHMcAAAAAAAAdBwAAAAAAAAAAAAARBwAAAAAAABFHAAAAAAAAAAAAAAUHAAAAAAAABUcAAAAAAAAAAAAAFcdAAAAAAAAWB0AAAAAAAAAAAAALx0AAAAAAAAwHQAAAAAAAAAAAACaHAAAAAAAAJscAAAAAAAAAAAAAHYcAAAAAAAAdxwAAAAAAAAAAAAARhwAAAAAAABHHAAAAAAAAAAAAAAVHAAAAAAAABYcAAAAAAAAAAAAAF0dAAAAAAAAXh0AAAAAAAAAAAAANB0AAAAAAAA1HQAAAAAAAAAAAACeHAAAAAAAAJ8cAAAAAAAAAAAAAHkcAAAAAAAAehwAAAAAAAAAAAAASBwAAAAAAABJHAAAAAAAAAAAAAAWHAAAAAAAABccAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqJwAAAAAAAConAAAAAAAAAAAAAAAA8L8"
				],
				[
					4322,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"PAAAAPIeAAAAAAAA8x4AAAAAAAAAAAAAzx4AAAAAAADQHgAAAAAAAAAAAACsHgAAAAAAAK0eAAAAAAAAAAAAAIkeAAAAAAAAih4AAAAAAAAAAAAAZh4AAAAAAABnHgAAAAAAAAAAAABDHgAAAAAAAEQeAAAAAAAAAAAAACAeAAAAAAAAIR4AAAAAAAAAAAAA/R0AAAAAAAD+HQAAAAAAAAAAAADaHQAAAAAAANsdAAAAAAAAAAAAALcdAAAAAAAAuB0AAAAAAAAAAAAA/B4AAAAAAAD9HgAAAAAAAAAAAADYHgAAAAAAANkeAAAAAAAAAAAAALQeAAAAAAAAtR4AAAAAAAAAAAAAkB4AAAAAAACRHgAAAAAAAAAAAABsHgAAAAAAAG0eAAAAAAAAAAAAAEgeAAAAAAAASR4AAAAAAAAAAAAAJB4AAAAAAAAlHgAAAAAAAAAAAAAAHgAAAAAAAAEeAAAAAAAAAAAAANwdAAAAAAAA3R0AAAAAAAAAAAAAuB0AAAAAAAC5HQAAAAAAAAAAAAAGHwAAAAAAAAcfAAAAAAAAAAAAAOEeAAAAAAAA4h4AAAAAAAAAAAAAvB4AAAAAAAC9HgAAAAAAAAAAAACXHgAAAAAAAJgeAAAAAAAAAAAAAHIeAAAAAAAAcx4AAAAAAAAAAAAATR4AAAAAAABOHgAAAAAAAAAAAAAoHgAAAAAAACkeAAAAAAAAAAAAAAMeAAAAAAAABB4AAAAAAAAAAAAA3h0AAAAAAADfHQAAAAAAAAAAAAC5HQAAAAAAALodAAAAAAAAAAAAABAfAAAAAAAAER8AAAAAAAAAAAAA6h4AAAAAAADrHgAAAAAAAAAAAADEHgAAAAAAAMUeAAAAAAAAAAAAAJ4eAAAAAAAAnx4AAAAAAAAAAAAAeB4AAAAAAAB5HgAAAAAAAAAAAABSHgAAAAAAAFMeAAAAAAAAAAAAACweAAAAAAAALR4AAAAAAAAAAAAABh4AAAAAAAAHHgAAAAAAAAAAAADgHQAAAAAAAOEdAAAAAAAAAAAAALodAAAAAAAAux0AAAAAAAAAAAAAGh8AAAAAAAAbHwAAAAAAAAAAAADzHgAAAAAAAPQeAAAAAAAAAAAAAMweAAAAAAAAzR4AAAAAAAAAAAAApR4AAAAAAACmHgAAAAAAAAAAAAB+HgAAAAAAAH8eAAAAAAAAAAAAAFceAAAAAAAAWB4AAAAAAAAAAAAAMB4AAAAAAAAxHgAAAAAAAAAAAAAJHgAAAAAAAAoeAAAAAAAAAAAAAOIdAAAAAAAA4x0AAAAAAAAAAAAAux0AAAAAAAC8HQAAAAAAAAAAAAAkHwAAAAAAACUfAAAAAAAAAAAAAPweAAAAAAAA/R4AAAAAAAAAAAAA1B4AAAAAAADVHgAAAAAAAAAAAACsHgAAAAAAAK0eAAAAAAAAAAAAAIQeAAAAAAAAhR4AAAAAAAAAAAAAXB4AAAAAAABdHgAAAAAAAAAAAAA0HgAAAAAAADUeAAAAAAAAAAAAAAweAAAAAAAADR4AAAAAAAAAAAAA5B0AAAAAAADlHQAAAAAAAAAAAAC8HQAAAAAAAL0dAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOJwAAAAAAAE4nAAAAAAAAAAAAAAAA8L8"
				],
				[
					4331,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"DAAAAJMfAAAAAAAAlB8AAAAAAAAAAAAAbh8AAAAAAABvHwAAAAAAAAAAAACVHwAAAAAAAJYfAAAAAAAAAAAAAG8fAAAAAAAAcB8AAAAAAAAAAAAAlx8AAAAAAACYHwAAAAAAAAAAAABwHwAAAAAAAHEfAAAAAAAAAAAAAJkfAAAAAAAAmh8AAAAAAAAAAAAAcR8AAAAAAAByHwAAAAAAAAAAAACbHwAAAAAAAJwfAAAAAAAAAAAAAHIfAAAAAAAAcx8AAAAAAAAAAAAAnR8AAAAAAACeHwAAAAAAAAAAAABzHwAAAAAAAHQfAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKJwAAAAAAAIonAAAAAAAAAAAAAAAA8L8"
				],
				[
					4349,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"HgAAAIUgAAAAAAAAhiAAAAAAAAAAAAAAeSAAAAAAAAB6IAAAAAAAAAAAAABaIAAAAAAAAFsgAAAAAAAAAAAAACQgAAAAAAAAJSAAAAAAAAAAAAAA+R8AAAAAAAD6HwAAAAAAAAAAAACKIAAAAAAAAIsgAAAAAAAAAAAAAH0gAAAAAAAAfiAAAAAAAAAAAAAAXSAAAAAAAABeIAAAAAAAAAAAAAAmIAAAAAAAACcgAAAAAAAAAAAAAPofAAAAAAAA+x8AAAAAAAAAAAAAjyAAAAAAAACQIAAAAAAAAAAAAACBIAAAAAAAAIIgAAAAAAAAAAAAAGAgAAAAAAAAYSAAAAAAAAAAAAAAKCAAAAAAAAApIAAAAAAAAAAAAAD7HwAAAAAAAPwfAAAAAAAAAAAAAJQgAAAAAAAAlSAAAAAAAAAAAAAAhSAAAAAAAACGIAAAAAAAAAAAAABjIAAAAAAAAGQgAAAAAAAAAAAAACogAAAAAAAAKyAAAAAAAAAAAAAA/B8AAAAAAAD9HwAAAAAAAAAAAACZIAAAAAAAAJogAAAAAAAAAAAAAIkgAAAAAAAAiiAAAAAAAAAAAAAAZiAAAAAAAABnIAAAAAAAAAAAAAAsIAAAAAAAAC0gAAAAAAAAAAAAAP0fAAAAAAAA/h8AAAAAAAAAAAAAniAAAAAAAACfIAAAAAAAAAAAAACNIAAAAAAAAI4gAAAAAAAAAAAAAGkgAAAAAAAAaiAAAAAAAAAAAAAALiAAAAAAAAAvIAAAAAAAAAAAAAD+HwAAAAAAAP8fAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWJwAAAAAAAJYnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4354,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAPkfAAAAAAAA+h8AAAAAAAAAAAAA+h8AAAAAAAD+HwAAAAAAAAAAAAD6HwAAAAAAAPofAAAAAAAABAAAACAgICD6HwAAAAAAAAAgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0JwAAAAAAALQnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4359,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEQgAAAAAAAARSAAAAAAAAAAAAAARSAAAAAAAABLIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7JwAAAAAAALsnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4361,
					1,
					"left_delete",
					null,
					"AQAAAEkgAAAAAAAASSAAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCJwAAAAAAAMInAAAAAAAAAAAAAAAA8L8"
				],
				[
					4373,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAEciAAAAAAAASCIAAAAAAAAAAAAASCIAAAAAAABJIgAAAAAAAAAAAABJIgAAAAAAAEoiAAAAAAAAAAAAAEoiAAAAAAAASyIAAAAAAAAAAAAASyIAAAAAAABMIgAAAAAAAAAAAABMIgAAAAAAAE0iAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAJwAAAAAAAMAnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4377,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC0iAAAAAAAALiIAAAAAAAAAAAAALiIAAAAAAAAwIgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGJwAAAAAAAMYnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4379,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADAiAAAAAAAAMiIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJJwAAAAAAAMknAAAAAAAAAAAAAAAA8L8"
				],
				[
					4382,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAACwiAAAAAAAALCIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLJwAAAAAAAMsnAAAAAAAAAAAAAAAA8L8"
				],
				[
					4422,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"WgAAAMcmAAAAAAAAyCYAAAAAAAAAAAAAcSYAAAAAAAByJgAAAAAAAAAAAABHJgAAAAAAAEgmAAAAAAAAAAAAADYmAAAAAAAANyYAAAAAAAAAAAAAESYAAAAAAAASJgAAAAAAAAAAAAC8JQAAAAAAAL0lAAAAAAAAAAAAAJIlAAAAAAAAkyUAAAAAAAAAAAAAgSUAAAAAAACCJQAAAAAAAAAAAABcJQAAAAAAAF0lAAAAAAAAAAAAANckAAAAAAAA2CQAAAAAAAAAAAAAlCQAAAAAAACVJAAAAAAAAAAAAAA7JAAAAAAAADwkAAAAAAAAAAAAADAkAAAAAAAAMSQAAAAAAAAAAAAAHiQAAAAAAAAfJAAAAAAAAAAAAADIIwAAAAAAAMkjAAAAAAAAAAAAANYmAAAAAAAA1yYAAAAAAAAAAAAAfyYAAAAAAACAJgAAAAAAAAAAAABUJgAAAAAAAFUmAAAAAAAAAAAAAEImAAAAAAAAQyYAAAAAAAAAAAAAHCYAAAAAAAAdJgAAAAAAAAAAAADGJQAAAAAAAMclAAAAAAAAAAAAAJslAAAAAAAAnCUAAAAAAAAAAAAAiSUAAAAAAACKJQAAAAAAAAAAAABjJQAAAAAAAGQlAAAAAAAAAAAAAN0kAAAAAAAA3iQAAAAAAAAAAAAAmSQAAAAAAACaJAAAAAAAAAAAAAA/JAAAAAAAAEAkAAAAAAAAAAAAADMkAAAAAAAANCQAAAAAAAAAAAAAICQAAAAAAAAhJAAAAAAAAAAAAADJIwAAAAAAAMojAAAAAAAAAAAAAOUmAAAAAAAA5iYAAAAAAAAAAAAAjSYAAAAAAACOJgAAAAAAAAAAAABhJgAAAAAAAGImAAAAAAAAAAAAAE4mAAAAAAAATyYAAAAAAAAAAAAAJyYAAAAAAAAoJgAAAAAAAAAAAADQJQAAAAAAANElAAAAAAAAAAAAAKQlAAAAAAAApSUAAAAAAAAAAAAAkSUAAAAAAACSJQAAAAAAAAAAAABqJQAAAAAAAGslAAAAAAAAAAAAAOMkAAAAAAAA5CQAAAAAAAAAAAAAniQAAAAAAACfJAAAAAAAAAAAAABDJAAAAAAAAEQkAAAAAAAAAAAAADYkAAAAAAAANyQAAAAAAAAAAAAAIiQAAAAAAAAjJAAAAAAAAAAAAADKIwAAAAAAAMsjAAAAAAAAAAAAAPQmAAAAAAAA9SYAAAAAAAAAAAAAmyYAAAAAAACcJgAAAAAAAAAAAABuJgAAAAAAAG8mAAAAAAAAAAAAAFomAAAAAAAAWyYAAAAAAAAAAAAAMiYAAAAAAAAzJgAAAAAAAAAAAADaJQAAAAAAANslAAAAAAAAAAAAAK0lAAAAAAAAriUAAAAAAAAAAAAAmSUAAAAAAACaJQAAAAAAAAAAAABxJQAAAAAAAHIlAAAAAAAAAAAAAOkkAAAAAAAA6iQAAAAAAAAAAAAAoyQAAAAAAACkJAAAAAAAAAAAAABHJAAAAAAAAEgkAAAAAAAAAAAAADkkAAAAAAAAOiQAAAAAAAAAAAAAJCQAAAAAAAAlJAAAAAAAAAAAAADLIwAAAAAAAMwjAAAAAAAAAAAAAAMnAAAAAAAABCcAAAAAAAAAAAAAqSYAAAAAAACqJgAAAAAAAAAAAAB7JgAAAAAAAHwmAAAAAAAAAAAAAGYmAAAAAAAAZyYAAAAAAAAAAAAAPSYAAAAAAAA+JgAAAAAAAAAAAADkJQAAAAAAAOUlAAAAAAAAAAAAALYlAAAAAAAAtyUAAAAAAAAAAAAAoSUAAAAAAACiJQAAAAAAAAAAAAB4JQAAAAAAAHklAAAAAAAAAAAAAO8kAAAAAAAA8CQAAAAAAAAAAAAAqCQAAAAAAACpJAAAAAAAAAAAAABLJAAAAAAAAEwkAAAAAAAAAAAAADwkAAAAAAAAPSQAAAAAAAAAAAAAJiQAAAAAAAAnJAAAAAAAAAAAAADMIwAAAAAAAM0jAAAAAAAAAAAAABInAAAAAAAAEycAAAAAAAAAAAAAtyYAAAAAAAC4JgAAAAAAAAAAAACIJgAAAAAAAIkmAAAAAAAAAAAAAHImAAAAAAAAcyYAAAAAAAAAAAAASCYAAAAAAABJJgAAAAAAAAAAAADuJQAAAAAAAO8lAAAAAAAAAAAAAL8lAAAAAAAAwCUAAAAAAAAAAAAAqSUAAAAAAACqJQAAAAAAAAAAAAB/JQAAAAAAAIAlAAAAAAAAAAAAAPUkAAAAAAAA9iQAAAAAAAAAAAAArSQAAAAAAACuJAAAAAAAAAAAAABPJAAAAAAAAFAkAAAAAAAAAAAAAD8kAAAAAAAAQCQAAAAAAAAAAAAAKCQAAAAAAAApJAAAAAAAAAAAAADNIwAAAAAAAM4jAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKJwAAAAAAAMonAAAAAAAAAAAAAAAA8L8"
				],
				[
					4442,
					1,
					"insert",
					{
						"characters": ",data$"
					},
					"JAAAAPkoAAAAAAAA+igAAAAAAAAAAAAA6SgAAAAAAADqKAAAAAAAAAAAAAC7KAAAAAAAALwoAAAAAAAAAAAAAKsoAAAAAAAArCgAAAAAAAAAAAAAhCgAAAAAAACFKAAAAAAAAAAAAABiKAAAAAAAAGMoAAAAAAAAAAAAAP8oAAAAAAAAACkAAAAAAAAAAAAA7igAAAAAAADvKAAAAAAAAAAAAAC/KAAAAAAAAMAoAAAAAAAAAAAAAK4oAAAAAAAArygAAAAAAAAAAAAAhigAAAAAAACHKAAAAAAAAAAAAABjKAAAAAAAAGQoAAAAAAAAAAAAAAUpAAAAAAAABikAAAAAAAAAAAAA8ygAAAAAAAD0KAAAAAAAAAAAAADDKAAAAAAAAMQoAAAAAAAAAAAAALEoAAAAAAAAsigAAAAAAAAAAAAAiCgAAAAAAACJKAAAAAAAAAAAAABkKAAAAAAAAGUoAAAAAAAAAAAAAAspAAAAAAAADCkAAAAAAAAAAAAA+CgAAAAAAAD5KAAAAAAAAAAAAADHKAAAAAAAAMgoAAAAAAAAAAAAALQoAAAAAAAAtSgAAAAAAAAAAAAAiigAAAAAAACLKAAAAAAAAAAAAABlKAAAAAAAAGYoAAAAAAAAAAAAABEpAAAAAAAAEikAAAAAAAAAAAAA/SgAAAAAAAD+KAAAAAAAAAAAAADLKAAAAAAAAMwoAAAAAAAAAAAAALcoAAAAAAAAuCgAAAAAAAAAAAAAjCgAAAAAAACNKAAAAAAAAAAAAABmKAAAAAAAAGcoAAAAAAAAAAAAABcpAAAAAAAAGCkAAAAAAAAAAAAAAikAAAAAAAADKQAAAAAAAAAAAADPKAAAAAAAANAoAAAAAAAAAAAAALooAAAAAAAAuygAAAAAAAAAAAAAjigAAAAAAACPKAAAAAAAAAAAAABnKAAAAAAAAGgoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4444,
					1,
					"left_delete",
					null,
					"BgAAABcpAAAAAAAAFykAAAAAAAABAAAALAEpAAAAAAAAASkAAAAAAAABAAAALM0oAAAAAAAAzSgAAAAAAAABAAAALLcoAAAAAAAAtygAAAAAAAABAAAALIooAAAAAAAAiigAAAAAAAABAAAALGIoAAAAAAAAYigAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4445,
					1,
					"insert",
					{
						"characters": "."
					},
					"BgAAABIpAAAAAAAAEykAAAAAAAAAAAAA/SgAAAAAAAD+KAAAAAAAAAAAAADKKAAAAAAAAMsoAAAAAAAAAAAAALUoAAAAAAAAtigAAAAAAAAAAAAAiSgAAAAAAACKKAAAAAAAAAAAAABiKAAAAAAAAGMoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4452,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAFsoAAAAAAAAXCgAAAAAAAAAAAAAXCgAAAAAAABgKAAAAAAAAAAAAABcKAAAAAAAAFwoAAAAAAAABAAAACAgICBcKAAAAAAAAGIoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4457,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKYoAAAAAAAApygAAAAAAAAAAAAApygAAAAAAACtKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4459,
					1,
					"left_delete",
					null,
					"AQAAAKsoAAAAAAAAqygAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4484,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"DAAAAGcYAAAAAAAAaBgAAAAAAAAAAAAAYRgAAAAAAABiGAAAAAAAAAAAAABpGAAAAAAAAGoYAAAAAAAAAAAAAGIYAAAAAAAAYxgAAAAAAAAAAAAAaxgAAAAAAABsGAAAAAAAAAAAAABjGAAAAAAAAGQYAAAAAAAAAAAAAG0YAAAAAAAAbhgAAAAAAAAAAAAAZBgAAAAAAABlGAAAAAAAAAAAAABvGAAAAAAAAHAYAAAAAAAAAAAAAGUYAAAAAAAAZhgAAAAAAAAAAAAAcRgAAAAAAAByGAAAAAAAAAAAAABmGAAAAAAAAGcYAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkKAAAAAAAACQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4541,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAKsbAAAAAAAArBsAAAAAAAAAAAAArBsAAAAAAACtGwAAAAAAAAAAAACtGwAAAAAAAK4bAAAAAAAAAAAAAK4bAAAAAAAArxsAAAAAAAAAAAAArxsAAAAAAACwGwAAAAAAAAAAAACwGwAAAAAAALEbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwKAAAAAAAADAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4567,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAHEiAAAAAAAAciIAAAAAAAAAAAAAciIAAAAAAABzIgAAAAAAAAAAAABzIgAAAAAAAHQiAAAAAAAAAAAAAHQiAAAAAAAAdSIAAAAAAAAAAAAAdSIAAAAAAAB2IgAAAAAAAAAAAAB2IgAAAAAAAHciAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2KAAAAAAAADYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4590,
					2,
					"left_delete",
					null,
					"AgAAAKYRAAAAAAAAphEAAAAAAAAFAAAAZGF0YSSlEQAAAAAAAKURAAAAAAAAAQAAAC4",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8KAAAAAAAADwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4617,
					1,
					"left_delete",
					null,
					"AQAAAGsiAAAAAAAAayIAAAAAAAAGAAAALmRhdGEk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2KAAAAAAAADYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4629,
					6,
					"left_delete",
					null,
					"BgAAAFwiAAAAAAAAXCIAAAAAAAABAAAAJFsiAAAAAAAAWyIAAAAAAAABAAAAYVoiAAAAAAAAWiIAAAAAAAABAAAAdFkiAAAAAAAAWSIAAAAAAAABAAAAYVgiAAAAAAAAWCIAAAAAAAABAAAAZFciAAAAAAAAVyIAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwKAAAAAAAADAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					4638,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAGUiAAAAAAAAZiIAAAAAAAAAAAAAZiIAAAAAAABnIgAAAAAAAAAAAABnIgAAAAAAAGgiAAAAAAAAAAAAAGgiAAAAAAAAaSIAAAAAAAAAAAAAaSIAAAAAAABqIgAAAAAAAAAAAABqIgAAAAAAAGsiAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqKAAAAAAAACooAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACMuAAAAAAAAJC4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIy4AAAAAAAAjLgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"paste",
					null,
					"AQAAACQuAAAAAAAALi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJC4AAAAAAAAkLgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC4vAAAAAAAALy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALi8AAAAAAAAuLwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"paste",
					null,
					"AQAAAC8vAAAAAAAAhjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALy8AAAAAAAAvLwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\n\n}"
					},
					"AwAAAIYwAAAAAAAAhzAAAAAAAAAAAAAAhzAAAAAAAACIMAAAAAAAAAAAAACIMAAAAAAAAIkwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhjAAAAAAAACGMAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIYwAAAAAAAAhzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhjAAAAAAAACGMAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"paste",
					null,
					"AQAAAIcwAAAAAAAAVzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhzAAAAAAAACHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"indent",
					null,
					"HAAAAIcwAAAAAAAAiTAAAAAAAAAAAAAAmTAAAAAAAACbMAAAAAAAAAAAAAC8MAAAAAAAAL4wAAAAAAAAAAAAAAoxAAAAAAAADDEAAAAAAAAAAAAAJDEAAAAAAAAmMQAAAAAAAAAAAAA/MQAAAAAAAEExAAAAAAAAAAAAAF0xAAAAAAAAXzEAAAAAAAAAAAAAhTEAAAAAAACHMQAAAAAAAAAAAAC2MQAAAAAAALgxAAAAAAAAAAAAAN8xAAAAAAAA4TEAAAAAAAAAAAAA/TEAAAAAAAD/MQAAAAAAAAAAAAAxMgAAAAAAADMyAAAAAAAAAAAAAF4yAAAAAAAAYDIAAAAAAAAAAAAAdDIAAAAAAAB2MgAAAAAAAAAAAAB8MgAAAAAAAH4yAAAAAAAAAAAAAIYyAAAAAAAAiDIAAAAAAAAAAAAAozIAAAAAAAClMgAAAAAAAAAAAACvMgAAAAAAALEyAAAAAAAAAAAAANYyAAAAAAAA2DIAAAAAAAAAAAAA9zIAAAAAAAD5MgAAAAAAAAAAAAAsMwAAAAAAAC4zAAAAAAAAAAAAAEkzAAAAAAAASzMAAAAAAAAAAAAAUDMAAAAAAABSMwAAAAAAAAAAAACfMwAAAAAAAKEzAAAAAAAAAAAAAKozAAAAAAAArDMAAAAAAAAAAAAA3DMAAAAAAADeMwAAAAAAAAAAAAAwNAAAAAAAADI0AAAAAAAAAAAAAGw0AAAAAAAAbjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVzQAAAAAAACHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAJI0AAAAAAAAkzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgTAAAAAAAACBMAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"paste",
					null,
					"AgAAAIkwAAAAAAAAujAAAAAAAAAAAAAAujAAAAAAAAC6MAAAAAAAAA8AAABzdXJ2ZXlfZGF0YSAlPiU",
					"AQAAAAAAAAABAAAAmDAAAAAAAACJMAAAAAAAAAAAAAAAADJA"
				],
				[
					67,
					1,
					"right_delete",
					null,
					"AQAAAIcwAAAAAAAAhzAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhzAAAAAAAACHMAAAAAAAAAAAAAAAAAAA"
				],
				[
					69,
					1,
					"right_delete",
					null,
					"AQAAAIcwAAAAAAAAhzAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhzAAAAAAAACHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAALcwAAAAAAAAtzAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAuDAAAAAAAAC4MAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"reindent",
					null,
					"AQAAAC4vAAAAAAAAMC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALi8AAAAAAAAuLwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CQAAADAvAAAAAAAAMS8AAAAAAAAAAAAAMS8AAAAAAAAzLwAAAAAAAAAAAAAuLwAAAAAAAC4vAAAAAAAAAgAAACAgMS8AAAAAAAAyLwAAAAAAAAAAAAAyLwAAAAAAADQvAAAAAAAAAAAAAC8vAAAAAAAALy8AAAAAAAACAAAAICAyLwAAAAAAADMvAAAAAAAAAAAAADMvAAAAAAAANS8AAAAAAAAAAAAAMC8AAAAAAAAwLwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAAMC8AAAAAAAAwLwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"reindent",
					null,
					"AQAAAC8vAAAAAAAAMS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALy8AAAAAAAAvLwAAAAAAAAAAAAAAADJA"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "rem"
					},
					"BAAAADEvAAAAAAAAMi8AAAAAAAAAAAAANC8AAAAAAAA0LwAAAAAAAAIAAAAgIDIvAAAAAAAAMy8AAAAAAAAAAAAAMy8AAAAAAAA0LwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMS8AAAAAAAAxLwAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADQvAAAAAAAANi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANC8AAAAAAAA0LwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "list=ls"
					},
					"BwAAADUvAAAAAAAANi8AAAAAAAAAAAAANi8AAAAAAAA3LwAAAAAAAAAAAAA3LwAAAAAAADgvAAAAAAAAAAAAADgvAAAAAAAAOS8AAAAAAAAAAAAAOS8AAAAAAAA6LwAAAAAAAAAAAAA6LwAAAAAAADsvAAAAAAAAAAAAADsvAAAAAAAAPC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANS8AAAAAAAA1LwAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADwvAAAAAAAAPi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPC8AAAAAAAA8LwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\nlibrary"
					},
					"CQAAAD8vAAAAAAAAQC8AAAAAAAAAAAAAQC8AAAAAAABCLwAAAAAAAAAAAABCLwAAAAAAAEMvAAAAAAAAAAAAAEMvAAAAAAAARC8AAAAAAAAAAAAARC8AAAAAAABFLwAAAAAAAAAAAABFLwAAAAAAAEYvAAAAAAAAAAAAAEYvAAAAAAAARy8AAAAAAAAAAAAARy8AAAAAAABILwAAAAAAAAAAAABILwAAAAAAAEkvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPy8AAAAAAAA/LwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEkvAAAAAAAASy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASS8AAAAAAABJLwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "magrittr"
					},
					"CAAAAEovAAAAAAAASy8AAAAAAAAAAAAASy8AAAAAAABMLwAAAAAAAAAAAABMLwAAAAAAAE0vAAAAAAAAAAAAAE0vAAAAAAAATi8AAAAAAAAAAAAATi8AAAAAAABPLwAAAAAAAAAAAABPLwAAAAAAAFAvAAAAAAAAAAAAAFAvAAAAAAAAUS8AAAAAAAAAAAAAUS8AAAAAAABSLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASi8AAAAAAABKLwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\nlibrar"
					},
					"CAAAAFMvAAAAAAAAVC8AAAAAAAAAAAAAVC8AAAAAAABWLwAAAAAAAAAAAABWLwAAAAAAAFcvAAAAAAAAAAAAAFcvAAAAAAAAWC8AAAAAAAAAAAAAWC8AAAAAAABZLwAAAAAAAAAAAABZLwAAAAAAAFovAAAAAAAAAAAAAFovAAAAAAAAWy8AAAAAAAAAAAAAWy8AAAAAAABcLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUy8AAAAAAABTLwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAFwvAAAAAAAAXS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXC8AAAAAAABcLwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF0vAAAAAAAAXy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXS8AAAAAAABdLwAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "tidyverse"
					},
					"CQAAAF4vAAAAAAAAXy8AAAAAAAAAAAAAXy8AAAAAAABgLwAAAAAAAAAAAABgLwAAAAAAAGEvAAAAAAAAAAAAAGEvAAAAAAAAYi8AAAAAAAAAAAAAYi8AAAAAAABjLwAAAAAAAAAAAABjLwAAAAAAAGQvAAAAAAAAAAAAAGQvAAAAAAAAZS8AAAAAAAAAAAAAZS8AAAAAAABmLwAAAAAAAAAAAABmLwAAAAAAAGcvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXi8AAAAAAABeLwAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"right_delete",
					null,
					"AQAAAGkvAAAAAAAAaS8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAaS8AAAAAAABpLwAAAAAAAAAAAAAAgGZA"
				],
				[
					119,
					1,
					"right_delete",
					null,
					"AQAAAGkvAAAAAAAAaS8AAAAAAADGAAAACiAgIyBsb2FkIGRhdGEKICBkYXRhIDwtIERpYXNwb3JhU3VydmV5UmVzdWx0czo6c3VydmV5X2RhdGEgJT4lCiAgICBkcGx5cjo6c2VsZWN0KGRwbHlyOjptYXRjaGVzKCdxM183X1sxLTldezF9JyksIC5kYXRhJHExMjgsIC5kYXRhJHEzXzIpICU+JQogICAgZHBseXI6Om11dGF0ZShyZXNwb25kZW50X2lkID0gZHBseXI6OnJvd19udW1iZXIoKSkK",
					"AQAAAAAAAAABAAAAaS8AAAAAAAAvMAAAAAAAAAAAAAAAAAAA"
				],
				[
					131,
					1,
					"left_delete",
					null,
					"AQAAADIvAAAAAAAAMi8AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAMy8AAAAAAAAzLwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "data"
					},
					"CgAAAOUwAAAAAAAA5jAAAAAAAAAAAAAA5jAAAAAAAADmMAAAAAAAAAYAAABwbG90MTXJMAAAAAAAAMowAAAAAAAAAAAAAMowAAAAAAAAyjAAAAAAAAAGAAAAcGxvdDE14TAAAAAAAADiMAAAAAAAAAAAAADKMAAAAAAAAMswAAAAAAAAAAAAAOMwAAAAAAAA5DAAAAAAAAAAAAAAyzAAAAAAAADMMAAAAAAAAAAAAADlMAAAAAAAAOYwAAAAAAAAAAAAAMwwAAAAAAAAzTAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAzzAAAAAAAADJMAAAAAAAAAAAAAAAAPC/5TAAAAAAAADrMAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AgAAAM0wAAAAAAAAzjAAAAAAAAAAAAAAATAAAAAAAAACMAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAPC/zTAAAAAAAADNMAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "prepated"
					},
					"EAAAAM8wAAAAAAAA0DAAAAAAAAAAAAAAAjAAAAAAAAADMAAAAAAAAAAAAADRMAAAAAAAANIwAAAAAAAAAAAAAAMwAAAAAAAABDAAAAAAAAAAAAAA0zAAAAAAAADUMAAAAAAAAAAAAAAEMAAAAAAAAAUwAAAAAAAAAAAAANUwAAAAAAAA1jAAAAAAAAAAAAAABTAAAAAAAAAGMAAAAAAAAAAAAADXMAAAAAAAANgwAAAAAAAAAAAAAAYwAAAAAAAABzAAAAAAAAAAAAAA2TAAAAAAAADaMAAAAAAAAAAAAAAHMAAAAAAAAAgwAAAAAAAAAAAAANswAAAAAAAA3DAAAAAAAAAAAAAACDAAAAAAAAAJMAAAAAAAAAAAAADdMAAAAAAAAN4wAAAAAAAAAAAAAAkwAAAAAAAACjAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAPC/zzAAAAAAAADPMAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAAAcwAAAAAAAABzAAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAAcwAAAAAAAACDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABzAAAAAAAAAHMAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AgAAANwwAAAAAAAA3TAAAAAAAAAAAAAA3TAAAAAAAADdMAAAAAAAAAEAAAB0",
					"AQAAAAAAAAABAAAA3DAAAAAAAADdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAPkwAAAAAAAA+jAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+TAAAAAAAAD5MAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": "prepared"
					},
					"CAAAAPowAAAAAAAA+zAAAAAAAAAAAAAA+zAAAAAAAAD8MAAAAAAAAAAAAAD8MAAAAAAAAP0wAAAAAAAAAAAAAP0wAAAAAAAA/jAAAAAAAAAAAAAA/jAAAAAAAAD/MAAAAAAAAAAAAAD/MAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAATEAAAAAAAAAAAAAATEAAAAAAAACMQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+jAAAAAAAAD6MAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "data_final"
					},
					"FgAAAAgzAAAAAAAACTMAAAAAAAAAAAAACTMAAAAAAAAJMwAAAAAAAA0AAABwbG90MTVfc2xpY2Vk5DAAAAAAAADlMAAAAAAAAAAAAADlMAAAAAAAAOUwAAAAAAAADQAAAHBsb3QxNV9zbGljZWT9MgAAAAAAAP4yAAAAAAAAAAAAAOUwAAAAAAAA5jAAAAAAAAAAAAAA/zIAAAAAAAAAMwAAAAAAAAAAAADmMAAAAAAAAOcwAAAAAAAAAAAAAAEzAAAAAAAAAjMAAAAAAAAAAAAA5zAAAAAAAADoMAAAAAAAAAAAAAADMwAAAAAAAAQzAAAAAAAAAAAAAOgwAAAAAAAA6TAAAAAAAAAAAAAABTMAAAAAAAAGMwAAAAAAAAAAAADpMAAAAAAAAOowAAAAAAAAAAAAAAczAAAAAAAACDMAAAAAAAAAAAAA6jAAAAAAAADrMAAAAAAAAAAAAAAJMwAAAAAAAAozAAAAAAAAAAAAAOswAAAAAAAA7DAAAAAAAAAAAAAACzMAAAAAAAAMMwAAAAAAAAAAAADsMAAAAAAAAO0wAAAAAAAAAAAAAA0zAAAAAAAADjMAAAAAAAAAAAAA7TAAAAAAAADuMAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA5DAAAAAAAADxMAAAAAAAAAAAAAAAAPC/CDMAAAAAAAAVMwAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADQ0AAAAAAAANTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANDQAAAAAAAA0NAAAAAAAAAAAAAAAADtA"
				],
				[
					219,
					1,
					"reindent",
					null,
					"AQAAADU0AAAAAAAAOTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANTQAAAAAAAA1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"left_delete",
					null,
					"AQAAADc0AAAAAAAANzQAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAOTQAAAAAAAA5NAAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAADc0AAAAAAAAODQAAAAAAAAAAAAAODQAAAAAAAA5NAAAAAAAAAAAAAA5NAAAAAAAADo0AAAAAAAAAAAAADo0AAAAAAAAOzQAAAAAAAAAAAAAOzQAAAAAAAA8NAAAAAAAAAAAAAA8NAAAAAAAAD00AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANzQAAAAAAAA3NAAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD00AAAAAAAAPzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPTQAAAAAAAA9NAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "pr"
					},
					"AgAAAD40AAAAAAAAPzQAAAAAAAAAAAAAPzQAAAAAAABANAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjQAAAAAAAA+NAAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"left_delete",
					null,
					"AQAAAD80AAAAAAAAPzQAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAQDQAAAAAAABANAAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADQ0AAAAAAAANTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANDQAAAAAAAA0NAAAAAAAAAAAAAAAwFhA"
				],
				[
					242,
					1,
					"paste",
					null,
					"AQAAADU0AAAAAAAARzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANTQAAAAAAAA1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"left_delete",
					null,
					"AQAAAEY0AAAAAAAARjQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAARzQAAAAAAABHNAAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"left_delete",
					null,
					"AQAAAA8vAAAAAAAADy8AAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAADy8AAAAAAAAQLwAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAA8vAAAAAAAAEC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADy8AAAAAAAAPLwAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"left_delete",
					null,
					"AQAAAEguAAAAAAAASC4AAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAASS4AAAAAAABJLgAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAEguAAAAAAAASS4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASC4AAAAAAABILgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "are"
					},
					"BAAAAJouAAAAAAAAmy4AAAAAAAAAAAAAmy4AAAAAAACbLgAAAAAAAC4AAAB3aGVyZSBoYXZlIHJlc3BvbmRlbnRzIGFjcXVpcmVkIHRoZWlyIGRlZ3JlZXM/my4AAAAAAACcLgAAAAAAAAAAAACcLgAAAAAAAJ0uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmi4AAAAAAADILgAAAAAAAP///////+9/"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAJ0uAAAAAAAAni4AAAAAAAAAAAAAni4AAAAAAACfLgAAAAAAAAAAAACfLgAAAAAAAKAuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnS4AAAAAAACdLgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": " study"
					},
					"BgAAAKAuAAAAAAAAoS4AAAAAAAAAAAAAoS4AAAAAAACiLgAAAAAAAAAAAACiLgAAAAAAAKMuAAAAAAAAAAAAAKMuAAAAAAAApC4AAAAAAAAAAAAApC4AAAAAAAClLgAAAAAAAAAAAAClLgAAAAAAAKYuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoC4AAAAAAACgLgAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIAzAAAAAAAAgTMAAAAAAAAAAAAAgTMAAAAAAACFMwAAAAAAAAAAAACBMwAAAAAAAIEzAAAAAAAABAAAACAgICCBMwAAAAAAAIczAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgDMAAAAAAACAMwAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALUzAAAAAAAAtjMAAAAAAAAAAAAAtjMAAAAAAAC8MwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtTMAAAAAAAC1MwAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"left_delete",
					null,
					"AQAAALozAAAAAAAAujMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAvDMAAAAAAAC8MwAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFozAAAAAAAAWzMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWjMAAAAAAABaMwAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert",
					{
						"characters": " alpha"
					},
					"BgAAAFszAAAAAAAAXDMAAAAAAAAAAAAAXDMAAAAAAABdMwAAAAAAAAAAAABdMwAAAAAAAF4zAAAAAAAAAAAAAF4zAAAAAAAAXzMAAAAAAAAAAAAAXzMAAAAAAABgMwAAAAAAAAAAAABgMwAAAAAAAGEzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzMAAAAAAABbMwAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGEzAAAAAAAAYjMAAAAAAAAAAAAAYjMAAAAAAABjMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTMAAAAAAABhMwAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " .8"
					},
					"AwAAAGMzAAAAAAAAZDMAAAAAAAAAAAAAZDMAAAAAAABlMwAAAAAAAAAAAABlMwAAAAAAAGYzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYzMAAAAAAABjMwAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"left_delete",
					null,
					"AQAAAEYxAAAAAAAARjEAAAAAAAAdAAAAIyBhZGRlZCByZWNlbnRseSBhcyBhIHJlcXVlc3Q",
					"AQAAAAAAAAABAAAAYzEAAAAAAABGMQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "dplyr:"
					},
					"EgAAAIgwAAAAAAAAiTAAAAAAAAAAAAAAOjAAAAAAAAA7MAAAAAAAAAAAAAAXMAAAAAAAABgwAAAAAAAAAAAAAIswAAAAAAAAjDAAAAAAAAAAAAAAPDAAAAAAAAA9MAAAAAAAAAAAAAAYMAAAAAAAABkwAAAAAAAAAAAAAI4wAAAAAAAAjzAAAAAAAAAAAAAAPjAAAAAAAAA/MAAAAAAAAAAAAAAZMAAAAAAAABowAAAAAAAAAAAAAJEwAAAAAAAAkjAAAAAAAAAAAAAAQDAAAAAAAABBMAAAAAAAAAAAAAAaMAAAAAAAABswAAAAAAAAAAAAAJQwAAAAAAAAlTAAAAAAAAAAAAAAQjAAAAAAAABDMAAAAAAAAAAAAAAbMAAAAAAAABwwAAAAAAAAAAAAAJcwAAAAAAAAmDAAAAAAAAAAAAAARDAAAAAAAABFMAAAAAAAAAAAAAAcMAAAAAAAAB0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAFzAAAAAAAAAXMAAAAAAAAAAAAAAAAPC/OjAAAAAAAAA6MAAAAAAAAAAAAAAAAPC/iDAAAAAAAACIMAAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AwAAAB0wAAAAAAAAHjAAAAAAAAAAAAAARzAAAAAAAABIMAAAAAAAAAAAAACcMAAAAAAAAJ0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAHTAAAAAAAAAdMAAAAAAAAAAAAAAAAPC/RjAAAAAAAABGMAAAAAAAAAAAAAAAAPC/mjAAAAAAAACaMAAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAF0wAAAAAAAAXjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTAAAAAAAABdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "tringr:"
					},
					"BwAAAF4wAAAAAAAAXzAAAAAAAAAAAAAAXzAAAAAAAABgMAAAAAAAAAAAAABgMAAAAAAAAGEwAAAAAAAAAAAAAGEwAAAAAAAAYjAAAAAAAAAAAAAAYjAAAAAAAABjMAAAAAAAAAAAAABjMAAAAAAAAGQwAAAAAAAAAAAAAGQwAAAAAAAAZTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXjAAAAAAAABeMAAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAGUwAAAAAAAAZjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZTAAAAAAAABlMAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAE8wAAAAAAAAUDAAAAAAAAAAAAAAUDAAAAAAAABUMAAAAAAAAAAAAABQMAAAAAAAAFAwAAAAAAAABAAAACAgICBQMAAAAAAAAFYwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATzAAAAAAAABPMAAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJwwAAAAAAAAnTAAAAAAAAAAAAAAnTAAAAAAAACjMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnDAAAAAAAACcMAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"left_delete",
					null,
					"AQAAAKEwAAAAAAAAoTAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAozAAAAAAAACjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"JAAAAMAwAAAAAAAAwTAAAAAAAAAAAAAAlzAAAAAAAACYMAAAAAAAAAAAAACJMAAAAAAAAIowAAAAAAAAAAAAAHgwAAAAAAAAeTAAAAAAAAAAAAAAKzAAAAAAAAAsMAAAAAAAAAAAAAAlMAAAAAAAACYwAAAAAAAAAAAAAMYwAAAAAAAAxzAAAAAAAAAAAAAAnDAAAAAAAACdMAAAAAAAAAAAAACNMAAAAAAAAI4wAAAAAAAAAAAAAHswAAAAAAAAfDAAAAAAAAAAAAAALTAAAAAAAAAuMAAAAAAAAAAAAAAmMAAAAAAAACcwAAAAAAAAAAAAAMwwAAAAAAAAzTAAAAAAAAAAAAAAoTAAAAAAAACiMAAAAAAAAAAAAACRMAAAAAAAAJIwAAAAAAAAAAAAAH4wAAAAAAAAfzAAAAAAAAAAAAAALzAAAAAAAAAwMAAAAAAAAAAAAAAnMAAAAAAAACgwAAAAAAAAAAAAANIwAAAAAAAA0zAAAAAAAAAAAAAApjAAAAAAAACnMAAAAAAAAAAAAACVMAAAAAAAAJYwAAAAAAAAAAAAAIEwAAAAAAAAgjAAAAAAAAAAAAAAMTAAAAAAAAAyMAAAAAAAAAAAAAAoMAAAAAAAACkwAAAAAAAAAAAAANgwAAAAAAAA2TAAAAAAAAAAAAAAqzAAAAAAAACsMAAAAAAAAAAAAACZMAAAAAAAAJowAAAAAAAAAAAAAIQwAAAAAAAAhTAAAAAAAAAAAAAAMzAAAAAAAAA0MAAAAAAAAAAAAAApMAAAAAAAACowAAAAAAAAAAAAAN4wAAAAAAAA3zAAAAAAAAAAAAAAsDAAAAAAAACxMAAAAAAAAAAAAACdMAAAAAAAAJ4wAAAAAAAAAAAAAIcwAAAAAAAAiDAAAAAAAAAAAAAANTAAAAAAAAA2MAAAAAAAAAAAAAAqMAAAAAAAACswAAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAAJTAAAAAAAAAlMAAAAAAAAAAAAAAAAPC/KzAAAAAAAAArMAAAAAAAAAAAAAAAAPC/eDAAAAAAAAB4MAAAAAAAAAAAAAAAAPC/iTAAAAAAAACJMAAAAAAAAAAAAAAAAPC/lzAAAAAAAACXMAAAAAAAAAAAAAAAAPC/wDAAAAAAAADAMAAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHAwAAAAAAAAcTAAAAAAAAAAAAAAcTAAAAAAAAB3MAAAAAAAAAAAAABxMAAAAAAAAHEwAAAAAAAABgAAACAgICAgIHEwAAAAAAAAeTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcDAAAAAAAABwMAAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"right_delete",
					null,
					"AgAAALcwAAAAAAAAtzAAAAAAAAABAAAAIKMwAAAAAAAAozAAAAAAAAABAAAAIA",
					"AQAAAAAAAAACAAAAozAAAAAAAACjMAAAAAAAAAAAAAAAAPC/tzAAAAAAAAC3MAAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALYwAAAAAAAAtzAAAAAAAAAAAAAAtzAAAAAAAAC/MAAAAAAAAAAAAACjMAAAAAAAAKQwAAAAAAAAAAAAAKQwAAAAAAAArDAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAozAAAAAAAACjMAAAAAAAAAAAAAAAAPC/tjAAAAAAAAC2MAAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANIwAAAAAAAA0zAAAAAAAAAAAAAA0zAAAAAAAADbMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0jAAAAAAAADSMAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"left_delete",
					null,
					"AQAAANkwAAAAAAAA2TAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA2zAAAAAAAADbMAAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"GAAAADwyAAAAAAAAPTIAAAAAAAAAAAAA5jEAAAAAAADnMQAAAAAAAAAAAACPMQAAAAAAAJAxAAAAAAAAAAAAAG4xAAAAAAAAbzEAAAAAAAAAAAAAQDIAAAAAAABBMgAAAAAAAAAAAADpMQAAAAAAAOoxAAAAAAAAAAAAAJExAAAAAAAAkjEAAAAAAAAAAAAAbzEAAAAAAABwMQAAAAAAAAAAAABEMgAAAAAAAEUyAAAAAAAAAAAAAOwxAAAAAAAA7TEAAAAAAAAAAAAAkzEAAAAAAACUMQAAAAAAAAAAAABwMQAAAAAAAHExAAAAAAAAAAAAAEgyAAAAAAAASTIAAAAAAAAAAAAA7zEAAAAAAADwMQAAAAAAAAAAAACVMQAAAAAAAJYxAAAAAAAAAAAAAHExAAAAAAAAcjEAAAAAAAAAAAAATDIAAAAAAABNMgAAAAAAAAAAAADyMQAAAAAAAPMxAAAAAAAAAAAAAJcxAAAAAAAAmDEAAAAAAAAAAAAAcjEAAAAAAABzMQAAAAAAAAAAAABQMgAAAAAAAFEyAAAAAAAAAAAAAPUxAAAAAAAA9jEAAAAAAAAAAAAAmTEAAAAAAACaMQAAAAAAAAAAAABzMQAAAAAAAHQxAAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAbjEAAAAAAABuMQAAAAAAAAAAAAAAAPC/jzEAAAAAAACPMQAAAAAAAAAAAAAAAPC/5jEAAAAAAADmMQAAAAAAAAAAAAAAAPC/PDIAAAAAAAA8MgAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEYvAAAAAAAARy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARi8AAAAAAABGLwAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"reindent",
					null,
					"AQAAAEYvAAAAAAAASC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARi8AAAAAAABGLwAAAAAAAAAAAAAAAAAA"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "\ncountry"
					},
					"CgAAAEgvAAAAAAAASS8AAAAAAAAAAAAASS8AAAAAAABLLwAAAAAAAAAAAABGLwAAAAAAAEYvAAAAAAAAAgAAACAgSS8AAAAAAABKLwAAAAAAAAAAAABKLwAAAAAAAEsvAAAAAAAAAAAAAEsvAAAAAAAATC8AAAAAAAAAAAAATC8AAAAAAABNLwAAAAAAAAAAAABNLwAAAAAAAE4vAAAAAAAAAAAAAE4vAAAAAAAATy8AAAAAAAAAAAAATy8AAAAAAABQLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASC8AAAAAAABILwAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"cut",
					null,
					"AQAAAOQvAAAAAAAA5C8AAAAAAAAxAQAAICBkYXRhX3ByZXBhcmVkIDwtIERpYXNwb3JhU3VydmV5UmVzdWx0czo6c3VydmV5X2RhdGEgJT4lCiAgICBkcGx5cjo6c2VsZWN0KC5kYXRhJHEzXzgsIC5kYXRhJHEzXzhfNDNfdGV4dCkgJT4lCiAgICBkcGx5cjo6bXV0YXRlKAogICAgICBxM184ID0gaWZlbHNlKAogICAgICAgIHN0cmluZ3I6OnN0cl9kZXRlY3QoLmRhdGEkcTNfOCwgJ15PdGhlcicpLAogICAgICAgIC5kYXRhJHEzXzhfNDNfdGV4dCwKICAgICAgICAuZGF0YSRxM184CiAgICAgICkKICAgICkgJT4lCiAgICBkcGx5cjo6ZmlsdGVyKCFpcy5uYSguZGF0YSRxM184KSk",
					"AQAAAAAAAAABAAAAFTEAAAAAAADkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"right_delete",
					null,
					"AQAAAOQvAAAAAAAA5C8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5C8AAAAAAADkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"left_delete",
					null,
					"AQAAAOMvAAAAAAAA4y8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA5C8AAAAAAADkLwAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"paste",
					null,
					"AQAAAFEvAAAAAAAAgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUS8AAAAAAABRLwAAAAAAAAAAAAAAAAAA"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIIwAAAAAAAAgzAAAAAAAAAAAAAAgzAAAAAAAACHMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgjAAAAAAAACCMAAAAAAAAP///////+9/"
				],
				[
					522,
					1,
					"insert",
					{
						"characters": " <- "
					},
					"AgAAAFAvAAAAAAAAVC8AAAAAAAAAAAAAhzAAAAAAAACHMAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAUC8AAAAAAABQLwAAAAAAAP///////+9/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAFQvAAAAAAAAVS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVC8AAAAAAABULwAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"left_delete",
					null,
					"AQAAAFQvAAAAAAAAVC8AAAAAAAABAAAAUw",
					"AQAAAAAAAAABAAAAVS8AAAAAAABVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"",
					null,
					"AQAAAFQvAAAAAAAAVS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVC8AAAAAAABULwAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"",
					null,
					"AQAAAFQvAAAAAAAAVC8AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAVS8AAAAAAABVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFQvAAAAAAAAVi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVC8AAAAAAABULwAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "Spain"
					},
					"BQAAAFUvAAAAAAAAVi8AAAAAAAAAAAAAVi8AAAAAAABXLwAAAAAAAAAAAABXLwAAAAAAAFgvAAAAAAAAAAAAAFgvAAAAAAAAWS8AAAAAAAAAAAAAWS8AAAAAAABaLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVS8AAAAAAABVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"left_delete",
					null,
					"AQAAAGIvAAAAAAAAYi8AAAAAAAAJAAAAX3ByZXBhcmVk",
					"AQAAAAAAAAABAAAAay8AAAAAAABiLwAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"left_delete",
					null,
					"AQAAAC4xAAAAAAAALjEAAAAAAAAJAAAAX3ByZXBhcmVk",
					"AQAAAAAAAAABAAAANzEAAAAAAAAuMQAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"right_delete",
					null,
					"AQAAAEUxAAAAAAAARTEAAAAAAAAJAAAAX3ByZXBhcmVk",
					"AQAAAAAAAAABAAAARTEAAAAAAABOMQAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADAvAAAAAAAAMS8AAAAAAAAAAAAAMS8AAAAAAAAzLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMC8AAAAAAAAwLwAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": ".data$q3_"
					},
					"CgAAAK4vAAAAAAAAry8AAAAAAAAAAAAAMS8AAAAAAAAxLwAAAAAAAAIAAAAgIK0vAAAAAAAAri8AAAAAAAAAAAAAri8AAAAAAACvLwAAAAAAAAAAAACvLwAAAAAAALAvAAAAAAAAAAAAALAvAAAAAAAAsS8AAAAAAAAAAAAAsS8AAAAAAACyLwAAAAAAAAAAAACyLwAAAAAAALMvAAAAAAAAAAAAALMvAAAAAAAAtC8AAAAAAAAAAAAAtC8AAAAAAAC1LwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAri8AAAAAAACuLwAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "2,"
					},
					"AgAAALUvAAAAAAAAti8AAAAAAAAAAAAAti8AAAAAAAC3LwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtS8AAAAAAAC1LwAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcvAAAAAAAAuC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAty8AAAAAAAC3LwAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"right_delete",
					null,
					"AQAAADEvAAAAAAAAMS8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAMS8AAAAAAAAxLwAAAAAAAAAAAAAAoHdA"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": "B"
					},
					"AgAAAFUvAAAAAAAAVi8AAAAAAAAAAAAAVi8AAAAAAABWLwAAAAAAAAUAAABTcGFpbg",
					"AQAAAAAAAAABAAAAVS8AAAAAAABaLwAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFYvAAAAAAAAVy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVi8AAAAAAABWLwAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAFcvAAAAAAAAWC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVy8AAAAAAABXLwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert",
					{
						"characters": "igum"
					},
					"BAAAAFgvAAAAAAAAWS8AAAAAAAAAAAAAWS8AAAAAAABaLwAAAAAAAAAAAABaLwAAAAAAAFsvAAAAAAAAAAAAAFsvAAAAAAAAXC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWC8AAAAAAABYLwAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"left_delete",
					null,
					"AQAAAFgvAAAAAAAAWC8AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAWS8AAAAAAABZLwAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAFkvAAAAAAAAWi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWS8AAAAAAABZLwAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADo0AAAAAAAAOzQAAAAAAAAAAAAAOzQAAAAAAAA/NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjQAAAAAAAA6NAAAAAAAAAAAAAAAAPC/"
				],
				[
					685,
					1,
					"paste",
					null,
					"AQAAADs0AAAAAAAAiDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzQAAAAAAAA/NAAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					3,
					"left_delete",
					null,
					"AwAAAIo0AAAAAAAAijQAAAAAAAACAAAAICCINAAAAAAAAIg0AAAAAAAAAgAAACAghzQAAAAAAACHNAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAjDQAAAAAAACMNAAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AgAAAFk0AAAAAAAAWjQAAAAAAAAAAAAAWjQAAAAAAABaNAAAAAAAAAEAAAB5",
					"AQAAAAAAAAABAAAAWjQAAAAAAABZNAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"left_delete",
					null,
					"AQAAAEQ0AAAAAAAARDQAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAARTQAAAAAAABFNAAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAEQ0AAAAAAAARTQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDQAAAAAAABENAAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"paste",
					null,
					"AQAAAOg0AAAAAAAADTUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6DQAAAAAAADoNAAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"cut",
					null,
					"AQAAAO40AAAAAAAA7jQAAAAAAAAeAAAAdGV4dCA9IGVsZW1lbnRfdGV4dChzaXplID0gMTgp",
					"AQAAAAAAAAABAAAADDUAAAAAAADuNAAAAAAAAAAAAAAAAEtA"
				],
				[
					733,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOY0AAAAAAAA5zQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5jQAAAAAAADmNAAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOc0AAAAAAAA6DQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5zQAAAAAAADnNAAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"paste",
					null,
					"AQAAAOg0AAAAAAAABjUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6DQAAAAAAADoNAAAAAAAAAAAAAAAAPC/"
				],
				[
					736,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAAg1AAAAAAAACDUAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAABjUAAAAAAAAGNQAAAAAAAAAAAAAAAPC/"
				],
				[
					740,
					1,
					"right_delete",
					null,
					"AQAAAAg1AAAAAAAACDUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAACDUAAAAAAAAINQAAAAAAAAAAAAAAkIJA"
				],
				[
					750,
					1,
					"left_delete",
					null,
					"AQAAADE0AAAAAAAAMTQAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAMjQAAAAAAAAyNAAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAADE0AAAAAAAAMjQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMTQAAAAAAAAxNAAAAAAAAAAAAAAAAPC/"
				],
				[
					761,
					1,
					"left_delete",
					null,
					"AQAAAOg0AAAAAAAA6DQAAAAAAAAeAAAAdGV4dCA9IGVsZW1lbnRfdGV4dChzaXplID0gMTgp",
					"AQAAAAAAAAABAAAA6DQAAAAAAAAGNQAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					2,
					"left_delete",
					null,
					"AgAAAOc0AAAAAAAA5zQAAAAAAAABAAAAIOY0AAAAAAAA5jQAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA6DQAAAAAAADoNAAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAM40AAAAAAAAzzQAAAAAAAAAAAAAzzQAAAAAAADTNAAAAAAAAAAAAADPNAAAAAAAAM80AAAAAAAABAAAACAgICDPNAAAAAAAANU0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzjQAAAAAAADONAAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO00AAAAAAAA7jQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7TQAAAAAAADtNAAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO40AAAAAAAA7zQAAAAAAAAAAAAA7zQAAAAAAAD1NAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7jQAAAAAAADuNAAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					1,
					"paste",
					null,
					"AQAAAPU0AAAAAAAANjUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9TQAAAAAAAD1NAAAAAAAAAAAAAAAAPC/"
				],
				[
					793,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADY1AAAAAAAANzUAAAAAAAAAAAAANzUAAAAAAAA9NQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjUAAAAAAAA2NQAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"left_delete",
					null,
					"AQAAADs1AAAAAAAAOzUAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAPTUAAAAAAAA9NQAAAAAAAAAAAAAAAPC/"
				],
				[
					803,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEUzAAAAAAAARjMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTMAAAAAAABFMwAAAAAAAAAAAAAAAPC/"
				],
				[
					804,
					1,
					"reindent",
					null,
					"AQAAAEYzAAAAAAAASjMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjMAAAAAAABGMwAAAAAAAAAAAAAAAPC/"
				],
				[
					806,
					1,
					"left_delete",
					null,
					"AQAAAEgzAAAAAAAASDMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAASjMAAAAAAABKMwAAAAAAAAAAAAAAAPC/"
				],
				[
					807,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAEgzAAAAAAAASTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDMAAAAAAABIMwAAAAAAAAAAAAAAAPC/"
				],
				[
					808,
					1,
					"insert",
					{
						"characters": " ore"
					},
					"BAAAAEkzAAAAAAAASjMAAAAAAAAAAAAASjMAAAAAAABLMwAAAAAAAAAAAABLMwAAAAAAAEwzAAAAAAAAAAAAAEwzAAAAAAAATTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASTMAAAAAAABJMwAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					3,
					"left_delete",
					null,
					"AwAAAEwzAAAAAAAATDMAAAAAAAABAAAAZUszAAAAAAAASzMAAAAAAAABAAAAckozAAAAAAAASjMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAATTMAAAAAAABNMwAAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"insert",
					{
						"characters": "prepr"
					},
					"BQAAAEozAAAAAAAASzMAAAAAAAAAAAAASzMAAAAAAABMMwAAAAAAAAAAAABMMwAAAAAAAE0zAAAAAAAAAAAAAE0zAAAAAAAATjMAAAAAAAAAAAAATjMAAAAAAABPMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjMAAAAAAABKMwAAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"left_delete",
					null,
					"AQAAAE4zAAAAAAAATjMAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAATzMAAAAAAABPMwAAAAAAAAAAAAAAAPC/"
				],
				[
					812,
					1,
					"insert",
					{
						"characters": "are"
					},
					"AwAAAE4zAAAAAAAATzMAAAAAAAAAAAAATzMAAAAAAABQMwAAAAAAAAAAAABQMwAAAAAAAFEzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATjMAAAAAAABOMwAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAFEzAAAAAAAAUjMAAAAAAAAAAAAAUjMAAAAAAABTMwAAAAAAAAAAAABTMwAAAAAAAFQzAAAAAAAAAAAAAFQzAAAAAAAAVTMAAAAAAAAAAAAAVTMAAAAAAABWMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUTMAAAAAAABRMwAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKUzAAAAAAAApjMAAAAAAAAAAAAApjMAAAAAAACoMwAAAAAAAAAAAACoMwAAAAAAAKkzAAAAAAAAAAAAAKkzAAAAAAAAqzMAAAAAAAAAAAAApjMAAAAAAACmMwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAApTMAAAAAAAClMwAAAAAAAAAAAAAAADJA"
				],
				[
					820,
					1,
					"reindent",
					null,
					"AQAAAKYzAAAAAAAAqDMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjMAAAAAAACmMwAAAAAAAAAAAAAAADJA"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAKgzAAAAAAAAqTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqDMAAAAAAACoMwAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"left_delete",
					null,
					"AQAAAKgzAAAAAAAAqDMAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAqTMAAAAAAACpMwAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKgzAAAAAAAAqTMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqDMAAAAAAACoMwAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"insert",
					{
						"characters": " create"
					},
					"BwAAAKkzAAAAAAAAqjMAAAAAAAAAAAAAqjMAAAAAAACrMwAAAAAAAAAAAACrMwAAAAAAAKwzAAAAAAAAAAAAAKwzAAAAAAAArTMAAAAAAAAAAAAArTMAAAAAAACuMwAAAAAAAAAAAACuMwAAAAAAAK8zAAAAAAAAAAAAAK8zAAAAAAAAsDMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqTMAAAAAAACpMwAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"insert",
					{
						"characters": " plot"
					},
					"BQAAALAzAAAAAAAAsTMAAAAAAAAAAAAAsTMAAAAAAACyMwAAAAAAAAAAAACyMwAAAAAAALMzAAAAAAAAAAAAALMzAAAAAAAAtDMAAAAAAAAAAAAAtDMAAAAAAAC1MwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDMAAAAAAACwMwAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAKMzAAAAAAAAozMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAtTMAAAAAAAC1MwAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"HgAAAAgzAAAAAAAACTMAAAAAAAAAAAAA2zIAAAAAAADcMgAAAAAAAAAAAADBMgAAAAAAAMIyAAAAAAAAAAAAALkyAAAAAAAAujIAAAAAAAAAAAAAhjIAAAAAAACHMgAAAAAAAAAAAAANMwAAAAAAAA4zAAAAAAAAAAAAAN8yAAAAAAAA4DIAAAAAAAAAAAAAxDIAAAAAAADFMgAAAAAAAAAAAAC7MgAAAAAAALwyAAAAAAAAAAAAAIcyAAAAAAAAiDIAAAAAAAAAAAAAEjMAAAAAAAATMwAAAAAAAAAAAADjMgAAAAAAAOQyAAAAAAAAAAAAAMcyAAAAAAAAyDIAAAAAAAAAAAAAvTIAAAAAAAC+MgAAAAAAAAAAAACIMgAAAAAAAIkyAAAAAAAAAAAAABczAAAAAAAAGDMAAAAAAAAAAAAA5zIAAAAAAADoMgAAAAAAAAAAAADKMgAAAAAAAMsyAAAAAAAAAAAAAL8yAAAAAAAAwDIAAAAAAAAAAAAAiTIAAAAAAACKMgAAAAAAAAAAAAAcMwAAAAAAAB0zAAAAAAAAAAAAAOsyAAAAAAAA7DIAAAAAAAAAAAAAzTIAAAAAAADOMgAAAAAAAAAAAADBMgAAAAAAAMIyAAAAAAAAAAAAAIoyAAAAAAAAizIAAAAAAAAAAAAAITMAAAAAAAAiMwAAAAAAAAAAAADvMgAAAAAAAPAyAAAAAAAAAAAAANAyAAAAAAAA0TIAAAAAAAAAAAAAwzIAAAAAAADEMgAAAAAAAAAAAACLMgAAAAAAAIwyAAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAhjIAAAAAAACGMgAAAAAAAAAAAAAAAPC/uTIAAAAAAAC5MgAAAAAAAAAAAAAAAPC/wTIAAAAAAADBMgAAAAAAAAAAAAAAAPC/2zIAAAAAAADbMgAAAAAAAAAAAAAAAPC/CDMAAAAAAAAIMwAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAIMzAAAAAAAAhDMAAAAAAAAAAAAAhDMAAAAAAACGMwAAAAAAAAAAAACEMwAAAAAAAIQzAAAAAAAAAgAAACAghDMAAAAAAACIMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgzMAAAAAAACDMwAAAAAAAAAAAAAAAPC/"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJQzAAAAAAAAlTMAAAAAAAAAAAAAlTMAAAAAAACZMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlDMAAAAAAACUMwAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AwAAAMIzAAAAAAAAwzMAAAAAAAAAAAAArjMAAAAAAACvMwAAAAAAAAAAAACkMwAAAAAAAKUzAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAApDMAAAAAAACkMwAAAAAAAAAAAAAAAPC/rjMAAAAAAACuMwAAAAAAAAAAAAAAAPC/wjMAAAAAAADCMwAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"left_delete",
					null,
					"AwAAAMQzAAAAAAAAxDMAAAAAAAABAAAAL68zAAAAAAAArzMAAAAAAAABAAAAL6QzAAAAAAAApDMAAAAAAAABAAAALw",
					"AQAAAAAAAAADAAAApTMAAAAAAAClMwAAAAAAAAAAAAAAAPC/sDMAAAAAAACwMwAAAAAAAAAAAAAAAPC/xTMAAAAAAADFMwAAAAAAAAAAAAAAAPC/"
				],
				[
					889,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"EgAAAMIzAAAAAAAAwzMAAAAAAAAAAAAArjMAAAAAAACvMwAAAAAAAAAAAACkMwAAAAAAAKUzAAAAAAAAAAAAAMUzAAAAAAAAxjMAAAAAAAAAAAAAsDMAAAAAAACxMwAAAAAAAAAAAAClMwAAAAAAAKYzAAAAAAAAAAAAAMgzAAAAAAAAyTMAAAAAAAAAAAAAsjMAAAAAAACzMwAAAAAAAAAAAACmMwAAAAAAAKczAAAAAAAAAAAAAMszAAAAAAAAzDMAAAAAAAAAAAAAtDMAAAAAAAC1MwAAAAAAAAAAAACnMwAAAAAAAKgzAAAAAAAAAAAAAM4zAAAAAAAAzzMAAAAAAAAAAAAAtjMAAAAAAAC3MwAAAAAAAAAAAACoMwAAAAAAAKkzAAAAAAAAAAAAANEzAAAAAAAA0jMAAAAAAAAAAAAAuDMAAAAAAAC5MwAAAAAAAAAAAACpMwAAAAAAAKozAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAApDMAAAAAAACkMwAAAAAAAAAAAAAAAPC/rjMAAAAAAACuMwAAAAAAAAAAAAAAAPC/wjMAAAAAAADCMwAAAAAAAAAAAAAAAPC/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANszAAAAAAAA3DMAAAAAAAAAAAAA3DMAAAAAAADgMwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2zMAAAAAAADbMwAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"left_delete",
					null,
					"AQAAAN4zAAAAAAAA3jMAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA4DMAAAAAAADgMwAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAJMzAAAAAAAAkzMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA3jMAAAAAAADeMwAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					1,
					"cut",
					null,
					"AQAAAEcvAAAAAAAARy8AAAAAAAAXAAAAICBjb3VudHJ5IDwtICdCZWxnaXVtJwo",
					"AQAAAAAAAAABAAAAXS8AAAAAAABdLwAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"right_delete",
					null,
					"AQAAAAwvAAAAAAAADC8AAAAAAAA6AAAACiAgcm0obGlzdD1scygpKQogIGxpYnJhcnkobWFncml0dHIpCiAgbGlicmFyeSh0aWR5dmVyc2UpCg",
					"AQAAAAAAAAABAAAARi8AAAAAAAAMLwAAAAAAAAAAAAAAAPC/"
				],
				[
					925,
					1,
					"right_delete",
					null,
					"AQAAAAwvAAAAAAAADC8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAADC8AAAAAAAAMLwAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAwvAAAAAAAADS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADC8AAAAAAAAMLwAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAwvAAAAAAAADS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADC8AAAAAAAAMLwAAAAAAAAAAAAAAAAAA"
				],
				[
					938,
					1,
					"reindent",
					null,
					"AQAAAA0vAAAAAAAADy8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADS8AAAAAAAANLwAAAAAAAAAAAAAAAPC/"
				],
				[
					940,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAA8vAAAAAAAAEC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADy8AAAAAAAAPLwAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAvAAAAAAAAES8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEC8AAAAAAAAQLwAAAAAAAAAAAAAAAPC/"
				],
				[
					944,
					1,
					"insert",
					{
						"characters": "load"
					},
					"BAAAABEvAAAAAAAAEi8AAAAAAAAAAAAAEi8AAAAAAAATLwAAAAAAAAAAAAATLwAAAAAAABQvAAAAAAAAAAAAABQvAAAAAAAAFS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAES8AAAAAAAARLwAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAABUvAAAAAAAAFi8AAAAAAAAAAAAAFi8AAAAAAAAXLwAAAAAAAAAAAAAXLwAAAAAAABgvAAAAAAAAAAAAABgvAAAAAAAAGS8AAAAAAAAAAAAAGS8AAAAAAAAaLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFS8AAAAAAAAVLwAAAAAAAAAAAAAAAPC/"
				],
				[
					951,
					1,
					"",
					null,
					"AQAAAOIwAAAAAAAA4zAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4jAAAAAAAADiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					952,
					1,
					"",
					null,
					"AQAAAOIwAAAAAAAA4jAAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA4zAAAAAAAADjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAOIwAAAAAAAA5DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4jAAAAAAAADiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					956,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOIwAAAAAAAA4jAAAAAAAAABAAAAJ+IwAAAAAAAA4jAAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA4zAAAAAAAADjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					957,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOIwAAAAAAAA4zAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4jAAAAAAAADiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					958,
					1,
					"reindent",
					null,
					"AQAAAOMwAAAAAAAA5TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4zAAAAAAAADjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAOUwAAAAAAAA5jAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5TAAAAAAAADlMAAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": " save"
					},
					"BQAAAOYwAAAAAAAA5zAAAAAAAAAAAAAA5zAAAAAAAADoMAAAAAAAAAAAAADoMAAAAAAAAOkwAAAAAAAAAAAAAOkwAAAAAAAA6jAAAAAAAAAAAAAA6jAAAAAAAADrMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5jAAAAAAAADmMAAAAAAAAAAAAAAAAPC/"
				],
				[
					962,
					1,
					"insert",
					{
						"characters": " number"
					},
					"BwAAAOswAAAAAAAA7DAAAAAAAAAAAAAA7DAAAAAAAADtMAAAAAAAAAAAAADtMAAAAAAAAO4wAAAAAAAAAAAAAO4wAAAAAAAA7zAAAAAAAAAAAAAA7zAAAAAAAADwMAAAAAAAAAAAAADwMAAAAAAAAPEwAAAAAAAAAAAAAPEwAAAAAAAA8jAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6zAAAAAAAADrMAAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAPIwAAAAAAAA8zAAAAAAAAAAAAAA8zAAAAAAAAD0MAAAAAAAAAAAAAD0MAAAAAAAAPUwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8jAAAAAAAADyMAAAAAAAAAAAAAAAAPC/"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": " respondents"
					},
					"DAAAAPUwAAAAAAAA9jAAAAAAAAAAAAAA9jAAAAAAAAD3MAAAAAAAAAAAAAD3MAAAAAAAAPgwAAAAAAAAAAAAAPgwAAAAAAAA+TAAAAAAAAAAAAAA+TAAAAAAAAD6MAAAAAAAAAAAAAD6MAAAAAAAAPswAAAAAAAAAAAAAPswAAAAAAAA/DAAAAAAAAAAAAAA/DAAAAAAAAD9MAAAAAAAAAAAAAD9MAAAAAAAAP4wAAAAAAAAAAAAAP4wAAAAAAAA/zAAAAAAAAAAAAAA/zAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAExAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9TAAAAAAAAD1MAAAAAAAAAAAAAAAAPC/"
				],
				[
					994,
					1,
					"insert",
					{
						"characters": "dplyr:"
					},
					"HgAAAH8yAAAAAAAAgDIAAAAAAAAAAAAAXDIAAAAAAABdMgAAAAAAAAAAAACdMQAAAAAAAJ4xAAAAAAAAAAAAAGYxAAAAAAAAZzEAAAAAAAAAAAAAODEAAAAAAAA5MQAAAAAAAAAAAACEMgAAAAAAAIUyAAAAAAAAAAAAAGAyAAAAAAAAYTIAAAAAAAAAAAAAoDEAAAAAAAChMQAAAAAAAAAAAABoMQAAAAAAAGkxAAAAAAAAAAAAADkxAAAAAAAAOjEAAAAAAAAAAAAAiTIAAAAAAACKMgAAAAAAAAAAAABkMgAAAAAAAGUyAAAAAAAAAAAAAKMxAAAAAAAApDEAAAAAAAAAAAAAajEAAAAAAABrMQAAAAAAAAAAAAA6MQAAAAAAADsxAAAAAAAAAAAAAI4yAAAAAAAAjzIAAAAAAAAAAAAAaDIAAAAAAABpMgAAAAAAAAAAAACmMQAAAAAAAKcxAAAAAAAAAAAAAGwxAAAAAAAAbTEAAAAAAAAAAAAAOzEAAAAAAAA8MQAAAAAAAAAAAACTMgAAAAAAAJQyAAAAAAAAAAAAAGwyAAAAAAAAbTIAAAAAAAAAAAAAqTEAAAAAAACqMQAAAAAAAAAAAABuMQAAAAAAAG8xAAAAAAAAAAAAADwxAAAAAAAAPTEAAAAAAAAAAAAAmDIAAAAAAACZMgAAAAAAAAAAAABwMgAAAAAAAHEyAAAAAAAAAAAAAKwxAAAAAAAArTEAAAAAAAAAAAAAcDEAAAAAAABxMQAAAAAAAAAAAAA9MQAAAAAAAD4xAAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAODEAAAAAAAA4MQAAAAAAAAAAAAAAAPC/ZjEAAAAAAABmMQAAAAAAAAAAAAAAAPC/nTEAAAAAAACdMQAAAAAAAAAAAAAAAPC/XDIAAAAAAABcMgAAAAAAAAAAAAAAAPC/fzIAAAAAAAB/MgAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"BQAAAD4xAAAAAAAAPzEAAAAAAAAAAAAAczEAAAAAAAB0MQAAAAAAAAAAAACxMQAAAAAAALIxAAAAAAAAAAAAAHcyAAAAAAAAeDIAAAAAAAAAAAAAoTIAAAAAAACiMgAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAPjEAAAAAAAA+MQAAAAAAAAAAAAAAAPC/cjEAAAAAAAByMQAAAAAAAAAAAAAAAPC/rzEAAAAAAACvMQAAAAAAAAAAAAAAAPC/dDIAAAAAAAB0MgAAAAAAAAAAAAAAAPC/nTIAAAAAAACdMgAAAAAAAAAAAAAAAPC/"
				],
				[
					1003,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AgAAAEczAAAAAAAASDMAAAAAAAAAAAAAfDEAAAAAAAB9MQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAfDEAAAAAAAB8MQAAAAAAAAAAAAAAAPC/RzMAAAAAAABHMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1005,
					1,
					"insert",
					{
						"characters": "tringr:"
					},
					"DgAAAEkzAAAAAAAASjMAAAAAAAAAAAAAfTEAAAAAAAB+MQAAAAAAAAAAAABLMwAAAAAAAEwzAAAAAAAAAAAAAH4xAAAAAAAAfzEAAAAAAAAAAAAATTMAAAAAAABOMwAAAAAAAAAAAAB/MQAAAAAAAIAxAAAAAAAAAAAAAE8zAAAAAAAAUDMAAAAAAAAAAAAAgDEAAAAAAACBMQAAAAAAAAAAAABRMwAAAAAAAFIzAAAAAAAAAAAAAIExAAAAAAAAgjEAAAAAAAAAAAAAUzMAAAAAAABUMwAAAAAAAAAAAACCMQAAAAAAAIMxAAAAAAAAAAAAAFUzAAAAAAAAVjMAAAAAAAAAAAAAgzEAAAAAAACEMQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAfTEAAAAAAAB9MQAAAAAAAAAAAAAAAPC/STMAAAAAAABJMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AgAAAIQxAAAAAAAAhTEAAAAAAAAAAAAAWDMAAAAAAABZMwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAhDEAAAAAAACEMQAAAAAAAAAAAAAAAPC/VzMAAAAAAABXMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1019,
					1,
					"paste",
					null,
					"AQAAAOkxAAAAAAAA8jEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6TEAAAAAAADpMQAAAAAAAAAAAAAAAPC/"
				],
				[
					1045,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAJ0uAAAAAAAAni4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnS4AAAAAAACdLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1060,
					1,
					"left_delete",
					null,
					"AQAAAKo0AAAAAAAAqjQAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAqzQAAAAAAACrNAAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAKo0AAAAAAAAqzQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjQAAAAAAACqNAAAAAAAAAAAAAAAAPC/"
				],
				[
					1074,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANc1AAAAAAAA2DUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1zUAAAAAAADXNQAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"paste",
					null,
					"AQAAANg1AAAAAAAAwDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2DUAAAAAAADYNQAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"left_delete",
					null,
					"AgAAAKI2AAAAAAAAojYAAAAAAAABAAAAOPw1AAAAAAAA/DUAAAAAAAABAAAAOA",
					"AQAAAAAAAAACAAAA/TUAAAAAAAD9NQAAAAAAAAAAAAAAAPC/ozYAAAAAAACjNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AgAAAKE2AAAAAAAAojYAAAAAAAAAAAAA/DUAAAAAAAD9NQAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA/DUAAAAAAAD8NQAAAAAAAAAAAAAAAPC/oTYAAAAAAAChNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1096,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAMA2AAAAAAAAwTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/TUAAAAAAAD9NQAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAME2AAAAAAAAwjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTYAAAAAAADBNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAMI2AAAAAAAAwzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjYAAAAAAADCNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1107,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAME2AAAAAAAAwjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTYAAAAAAADBNgAAAAAAAAAAAAAAACJA"
				],
				[
					1110,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAMQ2AAAAAAAAxTYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjYAAAAAAADCNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					1,
					"paste",
					null,
					"AQAAAMI2AAAAAAAAgD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjYAAAAAAADCNgAAAAAAAAAAAAAAAAAA"
				],
				[
					1132,
					3,
					"left_delete",
					null,
					"AwAAAOM2AAAAAAAA4zYAAAAAAAABAAAAM+I2AAAAAAAA4jYAAAAAAAABAAAAX+E2AAAAAAAA4TYAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA5DYAAAAAAADkNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1133,
					1,
					"insert",
					{
						"characters": "3-"
					},
					"AgAAAOE2AAAAAAAA4jYAAAAAAAAAAAAA4jYAAAAAAADjNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4TYAAAAAAADhNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"left_delete",
					null,
					"AQAAAOI2AAAAAAAA4jYAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA4zYAAAAAAADjNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"insert",
					{
						"characters": "_4"
					},
					"AgAAAOI2AAAAAAAA4zYAAAAAAAAAAAAA4zYAAAAAAADkNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4jYAAAAAAADiNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1136,
					1,
					"left_delete",
					null,
					"AQAAAOM2AAAAAAAA4zYAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAA5DYAAAAAAADkNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1137,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAOM2AAAAAAAA5DYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4zYAAAAAAADjNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1142,
					1,
					"reindent",
					null,
					"AQAAAMI2AAAAAAAAxDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjYAAAAAAADCNgAAAAAAAAAAAAAAkHJA"
				],
				[
					1144,
					1,
					"insert",
					{
						"characters": "rm*lis"
					},
					"BgAAAMQ2AAAAAAAAxTYAAAAAAAAAAAAAxTYAAAAAAADGNgAAAAAAAAAAAADGNgAAAAAAAMc2AAAAAAAAAAAAAMc2AAAAAAAAyDYAAAAAAAAAAAAAyDYAAAAAAADJNgAAAAAAAAAAAADJNgAAAAAAAMo2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxDYAAAAAAADENgAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					4,
					"left_delete",
					null,
					"BAAAAMk2AAAAAAAAyTYAAAAAAAABAAAAc8g2AAAAAAAAyDYAAAAAAAABAAAAacc2AAAAAAAAxzYAAAAAAAABAAAAbMY2AAAAAAAAxjYAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAyjYAAAAAAADKNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1146,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMY2AAAAAAAAyDYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxjYAAAAAAADGNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "lis="
					},
					"BAAAAMc2AAAAAAAAyDYAAAAAAAAAAAAAyDYAAAAAAADJNgAAAAAAAAAAAADJNgAAAAAAAMo2AAAAAAAAAAAAAMo2AAAAAAAAyzYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxzYAAAAAAADHNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1148,
					1,
					"left_delete",
					null,
					"AQAAAMo2AAAAAAAAyjYAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAyzYAAAAAAADLNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"insert",
					{
						"characters": "t=ls"
					},
					"BAAAAMo2AAAAAAAAyzYAAAAAAAAAAAAAyzYAAAAAAADMNgAAAAAAAAAAAADMNgAAAAAAAM02AAAAAAAAAAAAAM02AAAAAAAAzjYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyjYAAAAAAADKNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1150,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM42AAAAAAAA0DYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzjYAAAAAAADONgAAAAAAAAAAAAAAAPC/"
				],
				[
					1152,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANE2AAAAAAAA0jYAAAAAAAAAAAAA0jYAAAAAAADUNgAAAAAAAAAAAADUNgAAAAAAANU2AAAAAAAAAAAAANU2AAAAAAAA1zYAAAAAAAAAAAAA0jYAAAAAAADSNgAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAA0TYAAAAAAADRNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"reindent",
					null,
					"AQAAANI2AAAAAAAA1DYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0jYAAAAAAADSNgAAAAAAAAAAAAAAADJA"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": "linrary*"
					},
					"CQAAANQ2AAAAAAAA1TYAAAAAAAAAAAAA1jYAAAAAAADWNgAAAAAAAAIAAAAgINU2AAAAAAAA1jYAAAAAAAAAAAAA1jYAAAAAAADXNgAAAAAAAAAAAADXNgAAAAAAANg2AAAAAAAAAAAAANg2AAAAAAAA2TYAAAAAAAAAAAAA2TYAAAAAAADaNgAAAAAAAAAAAADaNgAAAAAAANs2AAAAAAAAAAAAANs2AAAAAAAA3DYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1DYAAAAAAADUNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					6,
					"left_delete",
					null,
					"BgAAANs2AAAAAAAA2zYAAAAAAAABAAAAKto2AAAAAAAA2jYAAAAAAAABAAAAedk2AAAAAAAA2TYAAAAAAAABAAAActg2AAAAAAAA2DYAAAAAAAABAAAAYdc2AAAAAAAA1zYAAAAAAAABAAAActY2AAAAAAAA1jYAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA3DYAAAAAAADcNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					1,
					"insert",
					{
						"characters": "brary"
					},
					"BQAAANY2AAAAAAAA1zYAAAAAAAAAAAAA1zYAAAAAAADYNgAAAAAAAAAAAADYNgAAAAAAANk2AAAAAAAAAAAAANk2AAAAAAAA2jYAAAAAAAAAAAAA2jYAAAAAAADbNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1jYAAAAAAADWNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANs2AAAAAAAA3TYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2zYAAAAAAADbNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1160,
					1,
					"insert",
					{
						"characters": "ma"
					},
					"AgAAANw2AAAAAAAA3TYAAAAAAAAAAAAA3TYAAAAAAADeNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3DYAAAAAAADcNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1161,
					1,
					"insert_completion",
					{
						"completion": "magrittr",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "magrittr"
					},
					"AgAAANw2AAAAAAAA3DYAAAAAAAACAAAAbWHcNgAAAAAAAOQ2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3jYAAAAAAADeNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOU2AAAAAAAA5jYAAAAAAAAAAAAA5jYAAAAAAADoNgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5TYAAAAAAADlNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": "library"
					},
					"BwAAAOg2AAAAAAAA6TYAAAAAAAAAAAAA6TYAAAAAAADqNgAAAAAAAAAAAADqNgAAAAAAAOs2AAAAAAAAAAAAAOs2AAAAAAAA7DYAAAAAAAAAAAAA7DYAAAAAAADtNgAAAAAAAAAAAADtNgAAAAAAAO42AAAAAAAAAAAAAO42AAAAAAAA7zYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6DYAAAAAAADoNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO82AAAAAAAA8TYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7zYAAAAAAADvNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": "tidyverse"
					},
					"CQAAAPA2AAAAAAAA8TYAAAAAAAAAAAAA8TYAAAAAAADyNgAAAAAAAAAAAADyNgAAAAAAAPM2AAAAAAAAAAAAAPM2AAAAAAAA9DYAAAAAAAAAAAAA9DYAAAAAAAD1NgAAAAAAAAAAAAD1NgAAAAAAAPY2AAAAAAAAAAAAAPY2AAAAAAAA9zYAAAAAAAAAAAAA9zYAAAAAAAD4NgAAAAAAAAAAAAD4NgAAAAAAAPk2AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8DYAAAAAAADwNgAAAAAAAAAAAAAAAPC/"
				],
				[
					1183,
					1,
					"left_delete",
					null,
					"AgAAAII4AAAAAAAAgjgAAAAAAAABAAAANFA3AAAAAAAAUDcAAAAAAAABAAAANA",
					"AQAAAAAAAAACAAAAUTcAAAAAAABRNwAAAAAAAAAAAAAAAPC/gzgAAAAAAACDOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1185,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AgAAAIE4AAAAAAAAgjgAAAAAAAAAAAAAUDcAAAAAAABRNwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAUDcAAAAAAABQNwAAAAAAAAAAAAAAAPC/gTgAAAAAAACBOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1204,
					1,
					"insert",
					{
						"characters": "match"
					},
					"BQAAAEw3AAAAAAAATTcAAAAAAAAAAAAATTcAAAAAAABONwAAAAAAAAAAAABONwAAAAAAAE83AAAAAAAAAAAAAE83AAAAAAAAUDcAAAAAAAAAAAAAUDcAAAAAAABRNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATDcAAAAAAABMNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1205,
					5,
					"left_delete",
					null,
					"BQAAAFA3AAAAAAAAUDcAAAAAAAABAAAAaE83AAAAAAAATzcAAAAAAAABAAAAY043AAAAAAAATjcAAAAAAAABAAAAdE03AAAAAAAATTcAAAAAAAABAAAAYUw3AAAAAAAATDcAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAUTcAAAAAAABRNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					1,
					"insert",
					{
						"characters": "dpl"
					},
					"AwAAAEw3AAAAAAAATTcAAAAAAAAAAAAATTcAAAAAAABONwAAAAAAAAAAAABONwAAAAAAAE83AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATDcAAAAAAABMNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					3,
					"left_delete",
					null,
					"AwAAAE43AAAAAAAATjcAAAAAAAABAAAAbE03AAAAAAAATTcAAAAAAAABAAAAcEw3AAAAAAAATDcAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAATzcAAAAAAABPNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1215,
					1,
					"paste",
					null,
					"AgAAACg3AAAAAAAAPzcAAAAAAAAAAAAAPzcAAAAAAAA/NwAAAAAAACwAAABEaWFzcG9yYVN1cnZleVJlc3VsdHM6OnByZXBhcmVfZGF0YSgncTNfOScpCg",
					"AQAAAAAAAAABAAAAVDcAAAAAAAAoNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1220,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACg3AAAAAAAAKTcAAAAAAAAAAAAAKTcAAAAAAAArNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKDcAAAAAAAAoNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1225,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AgAAADI3AAAAAAAAMzcAAAAAAAAAAAAAKzcAAAAAAAAsNwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAKzcAAAAAAAArNwAAAAAAAAAAAAAAAPC/MjcAAAAAAAAyNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1227,
					1,
					"insert",
					{
						"characters": "plyr:"
					},
					"CgAAADQ3AAAAAAAANTcAAAAAAAAAAAAALDcAAAAAAAAtNwAAAAAAAAAAAAA2NwAAAAAAADc3AAAAAAAAAAAAAC03AAAAAAAALjcAAAAAAAAAAAAAODcAAAAAAAA5NwAAAAAAAAAAAAAuNwAAAAAAAC83AAAAAAAAAAAAADo3AAAAAAAAOzcAAAAAAAAAAAAALzcAAAAAAAAwNwAAAAAAAAAAAAA8NwAAAAAAAD03AAAAAAAAAAAAADA3AAAAAAAAMTcAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAALDcAAAAAAAAsNwAAAAAAAAAAAAAAAPC/NDcAAAAAAAA0NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AgAAADE3AAAAAAAAMjcAAAAAAAAAAAAAPzcAAAAAAABANwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAMTcAAAAAAAAxNwAAAAAAAAAAAAAAAPC/PjcAAAAAAAA+NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1232,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACs3AAAAAAAALTcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKzcAAAAAAAArNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1237,
					1,
					"insert",
					{
						"characters": "Dias"
					},
					"BAAAACg3AAAAAAAAKTcAAAAAAAAAAAAAKTcAAAAAAAAqNwAAAAAAAAAAAAAqNwAAAAAAACs3AAAAAAAAAAAAACs3AAAAAAAALDcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKDcAAAAAAAAoNwAAAAAAAP///////+9/"
				],
				[
					1238,
					1,
					"insert_completion",
					{
						"completion": "DiasporaSurveyResults",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "DiasporaSurveyResults"
					},
					"AgAAACg3AAAAAAAAKDcAAAAAAAAEAAAARGlhcyg3AAAAAAAAPTcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALDcAAAAAAAAsNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1239,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAD03AAAAAAAAPjcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPTcAAAAAAAA9NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1241,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAD43AAAAAAAAPzcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjcAAAAAAAA+NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1242,
					1,
					"insert",
					{
						"characters": "survey"
					},
					"BgAAAD83AAAAAAAAQDcAAAAAAAAAAAAAQDcAAAAAAABBNwAAAAAAAAAAAABBNwAAAAAAAEI3AAAAAAAAAAAAAEI3AAAAAAAAQzcAAAAAAAAAAAAAQzcAAAAAAABENwAAAAAAAAAAAABENwAAAAAAAEU3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzcAAAAAAAA/NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1243,
					1,
					"insert",
					{
						"characters": "_data %>% "
					},
					"BgAAAEU3AAAAAAAARjcAAAAAAAAAAAAARjcAAAAAAABHNwAAAAAAAAAAAABHNwAAAAAAAEg3AAAAAAAAAAAAAEg3AAAAAAAASTcAAAAAAAAAAAAASTcAAAAAAABKNwAAAAAAAAAAAABKNwAAAAAAAE83AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTcAAAAAAABFNwAAAAAAAAAAAAAAAPC/"
				],
				[
					1245,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHk3AAAAAAAAejcAAAAAAAAAAAAAejcAAAAAAAB+NwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeTcAAAAAAAB5NwAAAAAAAAAAAAAAkHtA"
				],
				[
					1246,
					1,
					"trim_trailing_white_space",
					null,
					"AgAAAHo3AAAAAAAAejcAAAAAAAAEAAAAICAgIE43AAAAAAAATjcAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAfjcAAAAAAAB+NwAAAAAAAAAAAAAAAPC/"
				],
				[
					1265,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEg4AAAAAAAASTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDgAAAAAAABIOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1267,
					1,
					"paste",
					null,
					"AQAAAEk4AAAAAAAAzjoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASTgAAAAAAABJOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1273,
					1,
					"indent",
					null,
					"FQAAAEk4AAAAAAAASzgAAAAAAAAAAAAAVjgAAAAAAABYOAAAAAAAAAAAAAClOAAAAAAAAKc4AAAAAAAAAAAAANM4AAAAAAAA1TgAAAAAAAAAAAAA6TgAAAAAAADrOAAAAAAAAAAAAAD1OAAAAAAAAPc4AAAAAAAAAAAAAAg5AAAAAAAACjkAAAAAAAAAAAAAWDkAAAAAAABaOQAAAAAAAAAAAABiOQAAAAAAAGQ5AAAAAAAAAAAAAIM5AAAAAAAAhTkAAAAAAAAAAAAAozkAAAAAAAClOQAAAAAAAAAAAADDOQAAAAAAAMU5AAAAAAAAAAAAAOI5AAAAAAAA5DkAAAAAAAAAAAAA7TkAAAAAAADvOQAAAAAAAAAAAAALOgAAAAAAAA06AAAAAAAAAAAAACo6AAAAAAAALDoAAAAAAAAAAAAARToAAAAAAABHOgAAAAAAAAAAAABROgAAAAAAAFM6AAAAAAAAAAAAAII6AAAAAAAAhDoAAAAAAAAAAAAAxjoAAAAAAADIOgAAAAAAAAAAAADzOgAAAAAAAPU6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzjoAAAAAAABJOAAAAAAAAAAAAAAAAAAA"
				],
				[
					1276,
					1,
					"insert",
					{
						"characters": "dat"
					},
					"AwAAAEs4AAAAAAAATDgAAAAAAAAAAAAATDgAAAAAAABNOAAAAAAAAAAAAABNOAAAAAAAAE44AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzgAAAAAAABLOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1278,
					1,
					"insert",
					{
						"characters": "a_prepared"
					},
					"CgAAAE44AAAAAAAATzgAAAAAAAAAAAAATzgAAAAAAABQOAAAAAAAAAAAAABQOAAAAAAAAFE4AAAAAAAAAAAAAFE4AAAAAAAAUjgAAAAAAAAAAAAAUjgAAAAAAABTOAAAAAAAAAAAAABTOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAVTgAAAAAAAAAAAAAVTgAAAAAAABWOAAAAAAAAAAAAABWOAAAAAAAAFc4AAAAAAAAAAAAAFc4AAAAAAAAWDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATjgAAAAAAABOOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1279,
					1,
					"insert",
					{
						"characters": " <- "
					},
					"AQAAAFg4AAAAAAAAXDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWDgAAAAAAABYOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1283,
					1,
					"cut",
					null,
					"AQAAAAo7AAAAAAAACjsAAAAAAAAaAAAAICAjIHByZXBhcmUgZGF0YSBmb3IgcGxvdAo",
					"AQAAAAAAAAABAAAAHTsAAAAAAAAdOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1288,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEg4AAAAAAAASTgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDgAAAAAAABIOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1290,
					1,
					"paste",
					null,
					"AQAAAEk4AAAAAAAAYzgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASTgAAAAAAABJOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1292,
					1,
					"left_delete",
					null,
					"AQAAAGI4AAAAAAAAYjgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYzgAAAAAAABjOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"left_delete",
					null,
					"AQAAACQ7AAAAAAAAJDsAAAAAAAATAQAAICBkYXRhX3ByZXBhcmVkIDwtIGRhdGEgJT4lCiAgICBkcGx5cjo6bXV0YXRlKGRvYiA9IGlmZWxzZSguZGF0YSRxM185ID09ICdCZWZvcmUgMTk0MCcsIDE5MzksIC5kYXRhJHEzXzQpKSAlPiUKICAgIGRwbHlyOjptdXRhdGUoYWdlID0gMjAyMCAtIGFzLm51bWVyaWMoLmRhdGEkZG9iKSkgJT4lCiAgICBkcGx5cjo6bXV0YXRlKGFnZSA9IGN1dCguZGF0YSRhZ2UsIHNlcSgwLDkwLDEwKSwgaW5jbHVkZS5sb3dlc3Q9VFJVRSkpICU+JQogICAgZHBseXI6OmNvdW50KC5kYXRhJGFnZSk",
					"AQAAAAAAAAABAAAANzwAAAAAAAAkOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1312,
					1,
					"insert",
					{
						"characters": "d"
					},
					"BAAAABg5AAAAAAAAGTkAAAAAAAAAAAAAAjkAAAAAAAADOQAAAAAAAAAAAADUOAAAAAAAANU4AAAAAAAAAAAAAIU4AAAAAAAAhjgAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAhTgAAAAAAACFOAAAAAAAAAAAAAAAAEJA1DgAAAAAAADUOAAAAAAAAAAAAAAAAEJAAjkAAAAAAAACOQAAAAAAAAAAAAAAAEJAGDkAAAAAAAAYOQAAAAAAAAAAAAAAAEJA"
				],
				[
					1314,
					1,
					"insert",
					{
						"characters": "plr"
					},
					"DAAAABw5AAAAAAAAHTkAAAAAAAAAAAAABTkAAAAAAAAGOQAAAAAAAAAAAADWOAAAAAAAANc4AAAAAAAAAAAAAIY4AAAAAAAAhzgAAAAAAAAAAAAAIDkAAAAAAAAhOQAAAAAAAAAAAAAIOQAAAAAAAAk5AAAAAAAAAAAAANg4AAAAAAAA2TgAAAAAAAAAAAAAhzgAAAAAAACIOAAAAAAAAAAAAAAkOQAAAAAAACU5AAAAAAAAAAAAAAs5AAAAAAAADDkAAAAAAAAAAAAA2jgAAAAAAADbOAAAAAAAAAAAAACIOAAAAAAAAIk4AAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAhjgAAAAAAACGOAAAAAAAAAAAAAAAAPC/1jgAAAAAAADWOAAAAAAAAAAAAAAAAPC/BTkAAAAAAAAFOQAAAAAAAAAAAAAAAPC/HDkAAAAAAAAcOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1315,
					1,
					"left_delete",
					null,
					"BAAAACc5AAAAAAAAJzkAAAAAAAABAAAAcg05AAAAAAAADTkAAAAAAAABAAAActs4AAAAAAAA2zgAAAAAAAABAAAAcog4AAAAAAAAiDgAAAAAAAABAAAAcg",
					"AQAAAAAAAAAEAAAAiTgAAAAAAACJOAAAAAAAAAAAAAAAAPC/3DgAAAAAAADcOAAAAAAAAAAAAAAAAPC/DjkAAAAAAAAOOQAAAAAAAAAAAAAAAPC/KDkAAAAAAAAoOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1316,
					1,
					"insert",
					{
						"characters": "yr:"
					},
					"DAAAACQ5AAAAAAAAJTkAAAAAAAAAAAAACzkAAAAAAAAMOQAAAAAAAAAAAADaOAAAAAAAANs4AAAAAAAAAAAAAIg4AAAAAAAAiTgAAAAAAAAAAAAAKDkAAAAAAAApOQAAAAAAAAAAAAAOOQAAAAAAAA85AAAAAAAAAAAAANw4AAAAAAAA3TgAAAAAAAAAAAAAiTgAAAAAAACKOAAAAAAAAAAAAAAsOQAAAAAAAC05AAAAAAAAAAAAABE5AAAAAAAAEjkAAAAAAAAAAAAA3jgAAAAAAADfOAAAAAAAAAAAAACKOAAAAAAAAIs4AAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAiDgAAAAAAACIOAAAAAAAAAAAAAAAAPC/2jgAAAAAAADaOAAAAAAAAAAAAAAAAPC/CzkAAAAAAAALOQAAAAAAAAAAAAAAAPC/JDkAAAAAAAAkOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1318,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"BAAAAIs4AAAAAAAAjDgAAAAAAAAAAAAA4TgAAAAAAADiOAAAAAAAAAAAAAAWOQAAAAAAABc5AAAAAAAAAAAAADM5AAAAAAAANDkAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAizgAAAAAAACLOAAAAAAAAAAAAAAAAPC/4DgAAAAAAADgOAAAAAAAAAAAAAAAAPC/FDkAAAAAAAAUOQAAAAAAAAAAAAAAAPC/MDkAAAAAAAAwOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1326,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJk4AAAAAAAAmjgAAAAAAAAAAAAAmjgAAAAAAACeOAAAAAAAAAAAAACaOAAAAAAAAJo4AAAAAAAABAAAACAgICCaOAAAAAAAAKA4AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmTgAAAAAAACZOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1328,
					1,
					"insert",
					{
						"characters": "dplyr"
					},
					"BQAAAKA4AAAAAAAAoTgAAAAAAAAAAAAAoTgAAAAAAACiOAAAAAAAAAAAAACiOAAAAAAAAKM4AAAAAAAAAAAAAKM4AAAAAAAApDgAAAAAAAAAAAAApDgAAAAAAAClOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoDgAAAAAAACgOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1330,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKU4AAAAAAAApjgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApTgAAAAAAAClOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1332,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAKY4AAAAAAAApzgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjgAAAAAAACmOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1339,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAN84AAAAAAAA4DgAAAAAAAAAAAAA4DgAAAAAAADmOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3zgAAAAAAADfOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1341,
					1,
					"left_delete",
					null,
					"AQAAAOQ4AAAAAAAA5DgAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA5jgAAAAAAADmOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1347,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAAQ5AAAAAAAABTkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABDkAAAAAAAAEOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": "tringr:"
					},
					"BwAAAAU5AAAAAAAABjkAAAAAAAAAAAAABjkAAAAAAAAHOQAAAAAAAAAAAAAHOQAAAAAAAAg5AAAAAAAAAAAAAAg5AAAAAAAACTkAAAAAAAAAAAAACTkAAAAAAAAKOQAAAAAAAAAAAAAKOQAAAAAAAAs5AAAAAAAAAAAAAAs5AAAAAAAADDkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABTkAAAAAAAAFOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAAw5AAAAAAAADTkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADDkAAAAAAAAMOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1359,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"DAAAADo5AAAAAAAAOzkAAAAAAAAAAAAAFzkAAAAAAAAYOQAAAAAAAAAAAAA8OQAAAAAAAD05AAAAAAAAAAAAABg5AAAAAAAAGTkAAAAAAAAAAAAAPjkAAAAAAAA/OQAAAAAAAAAAAAAZOQAAAAAAABo5AAAAAAAAAAAAAEA5AAAAAAAAQTkAAAAAAAAAAAAAGjkAAAAAAAAbOQAAAAAAAAAAAABCOQAAAAAAAEM5AAAAAAAAAAAAABs5AAAAAAAAHDkAAAAAAAAAAAAARDkAAAAAAABFOQAAAAAAAAAAAAAcOQAAAAAAAB05AAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAFzkAAAAAAAAXOQAAAAAAAAAAAAAAAPC/OjkAAAAAAAA6OQAAAAAAAAAAAAAAAPC/"
				],
				[
					1364,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAIo5AAAAAAAAizkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAijkAAAAAAACKOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"left_delete",
					null,
					"AQAAAIo5AAAAAAAAijkAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAizkAAAAAAACLOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1369,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAIo5AAAAAAAAizkAAAAAAAAAAAAAizkAAAAAAACMOQAAAAAAAAAAAACMOQAAAAAAAI05AAAAAAAAAAAAAI05AAAAAAAAjjkAAAAAAAAAAAAAjjkAAAAAAACPOQAAAAAAAAAAAACPOQAAAAAAAJA5AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAijkAAAAAAACKOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"right_delete",
					null,
					"AQAAAJc5AAAAAAAAlzkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1373,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJc5AAAAAAAAmDkAAAAAAAAAAAAAmDkAAAAAAACgOQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlzkAAAAAAACXOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1381,
					1,
					"right_delete",
					null,
					"AQAAAL05AAAAAAAAvTkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAvTkAAAAAAAC9OQAAAAAAAAAAAAAAAPC/"
				],
				[
					1383,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL05AAAAAAAAvjkAAAAAAAAAAAAAvjkAAAAAAADGOQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvTkAAAAAAAC9OQAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AgAAADI5AAAAAAAAMzkAAAAAAAAAAAAAMzkAAAAAAAAzOQAAAAAAAAUAAABkcGx5cg",
					"AQAAAAAAAAABAAAAMjkAAAAAAAA3OQAAAAAAAAAAAAAAAPC/"
				],
				[
					1405,
					1,
					"insert",
					{
						"characters": "idyr"
					},
					"BAAAADM5AAAAAAAANDkAAAAAAAAAAAAANDkAAAAAAAA1OQAAAAAAAAAAAAA1OQAAAAAAADY5AAAAAAAAAAAAADY5AAAAAAAANzkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMzkAAAAAAAAzOQAAAAAAAAAAAAAAAPC/"
				],
				[
					1420,
					1,
					"insert",
					{
						"characters": "tidyr"
					},
					"BgAAAIU4AAAAAAAAhjgAAAAAAAAAAAAAhjgAAAAAAACGOAAAAAAAAAUAAABkcGx5coY4AAAAAAAAhzgAAAAAAAAAAAAAhzgAAAAAAACIOAAAAAAAAAAAAACIOAAAAAAAAIk4AAAAAAAAAAAAAIk4AAAAAAAAijgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhTgAAAAAAACKOAAAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BQAAAHY4AAAAAAAAdzgAAAAAAAAAAAAAdzgAAAAAAAB3OAAAAAAAAAYAAABwbG90MDh3OAAAAAAAAHg4AAAAAAAAAAAAAHg4AAAAAAAAeTgAAAAAAAAAAAAAeTgAAAAAAAB6OAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdjgAAAAAAAB8OAAAAAAAAAAAAAAAAPC/"
				],
				[
					1465,
					1,
					"insert",
					{
						"characters": "d"
					},
					"BgAAAMw6AAAAAAAAzToAAAAAAAAAAAAAsToAAAAAAACyOgAAAAAAAAAAAACSOgAAAAAAAJM6AAAAAAAAAAAAAHQ6AAAAAAAAdToAAAAAAAAAAAAA+zkAAAAAAAD8OQAAAAAAAAAAAADpOQAAAAAAAOo5AAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAA6TkAAAAAAADpOQAAAAAAAAAAAAAAAPC/+zkAAAAAAAD7OQAAAAAAAAAAAAAAAPC/dDoAAAAAAAB0OgAAAAAAAAAAAAAAAPC/kjoAAAAAAACSOgAAAAAAAAAAAAAAAPC/sToAAAAAAACxOgAAAAAAAAAAAAAAAPC/zDoAAAAAAADMOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					1,
					"insert",
					{
						"characters": "plyr"
					},
					"GAAAANI6AAAAAAAA0zoAAAAAAAAAAAAAtjoAAAAAAAC3OgAAAAAAAAAAAACWOgAAAAAAAJc6AAAAAAAAAAAAAHc6AAAAAAAAeDoAAAAAAAAAAAAA/TkAAAAAAAD+OQAAAAAAAAAAAADqOQAAAAAAAOs5AAAAAAAAAAAAANg6AAAAAAAA2ToAAAAAAAAAAAAAuzoAAAAAAAC8OgAAAAAAAAAAAACaOgAAAAAAAJs6AAAAAAAAAAAAAHo6AAAAAAAAezoAAAAAAAAAAAAA/zkAAAAAAAAAOgAAAAAAAAAAAADrOQAAAAAAAOw5AAAAAAAAAAAAAN46AAAAAAAA3zoAAAAAAAAAAAAAwDoAAAAAAADBOgAAAAAAAAAAAACeOgAAAAAAAJ86AAAAAAAAAAAAAH06AAAAAAAAfjoAAAAAAAAAAAAAAToAAAAAAAACOgAAAAAAAAAAAADsOQAAAAAAAO05AAAAAAAAAAAAAOQ6AAAAAAAA5ToAAAAAAAAAAAAAxToAAAAAAADGOgAAAAAAAAAAAACiOgAAAAAAAKM6AAAAAAAAAAAAAIA6AAAAAAAAgToAAAAAAAAAAAAAAzoAAAAAAAAEOgAAAAAAAAAAAADtOQAAAAAAAO45AAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAA6jkAAAAAAADqOQAAAAAAAAAAAAAAAPC//TkAAAAAAAD9OQAAAAAAAAAAAAAAAPC/dzoAAAAAAAB3OgAAAAAAAAAAAAAAAPC/ljoAAAAAAACWOgAAAAAAAAAAAAAAAPC/tjoAAAAAAAC2OgAAAAAAAAAAAAAAAPC/0joAAAAAAADSOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1469,
					1,
					"insert",
					{
						"characters": ":"
					},
					"BgAAAOo6AAAAAAAA6zoAAAAAAAAAAAAAyjoAAAAAAADLOgAAAAAAAAAAAACmOgAAAAAAAKc6AAAAAAAAAAAAAIM6AAAAAAAAhDoAAAAAAAAAAAAABToAAAAAAAAGOgAAAAAAAAAAAADuOQAAAAAAAO85AAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAA7jkAAAAAAADuOQAAAAAAAAAAAAAAAPC/BToAAAAAAAAFOgAAAAAAAAAAAAAAAPC/gzoAAAAAAACDOgAAAAAAAAAAAAAAAPC/pjoAAAAAAACmOgAAAAAAAAAAAAAAAPC/yjoAAAAAAADKOgAAAAAAAAAAAAAAAPC/6joAAAAAAADqOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1471,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"BgAAAO85AAAAAAAA8DkAAAAAAAAAAAAACDoAAAAAAAAJOgAAAAAAAAAAAACIOgAAAAAAAIk6AAAAAAAAAAAAAK06AAAAAAAArjoAAAAAAAAAAAAA0zoAAAAAAADUOgAAAAAAAAAAAAD1OgAAAAAAAPY6AAAAAAAAAAAAAA",
					"AQAAAAAAAAAGAAAA7zkAAAAAAADvOQAAAAAAAAAAAAAAAPC/BzoAAAAAAAAHOgAAAAAAAAAAAAAAAPC/hjoAAAAAAACGOgAAAAAAAAAAAAAAAPC/qjoAAAAAAACqOgAAAAAAAAAAAAAAAPC/zzoAAAAAAADPOgAAAAAAAAAAAAAAAPC/8DoAAAAAAADwOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1482,
					1,
					"insert",
					{
						"characters": ".data#"
					},
					"HgAAAN06AAAAAAAA3joAAAAAAAAAAAAAtDoAAAAAAAC1OgAAAAAAAAAAAABaOgAAAAAAAFs6AAAAAAAAAAAAADo6AAAAAAAAOzoAAAAAAAAAAAAAGjoAAAAAAAAbOgAAAAAAAAAAAADiOgAAAAAAAOM6AAAAAAAAAAAAALg6AAAAAAAAuToAAAAAAAAAAAAAXToAAAAAAABeOgAAAAAAAAAAAAA8OgAAAAAAAD06AAAAAAAAAAAAABs6AAAAAAAAHDoAAAAAAAAAAAAA5zoAAAAAAADoOgAAAAAAAAAAAAC8OgAAAAAAAL06AAAAAAAAAAAAAGA6AAAAAAAAYToAAAAAAAAAAAAAPjoAAAAAAAA/OgAAAAAAAAAAAAAcOgAAAAAAAB06AAAAAAAAAAAAAOw6AAAAAAAA7ToAAAAAAAAAAAAAwDoAAAAAAADBOgAAAAAAAAAAAABjOgAAAAAAAGQ6AAAAAAAAAAAAAEA6AAAAAAAAQToAAAAAAAAAAAAAHToAAAAAAAAeOgAAAAAAAAAAAADxOgAAAAAAAPI6AAAAAAAAAAAAAMQ6AAAAAAAAxToAAAAAAAAAAAAAZjoAAAAAAABnOgAAAAAAAAAAAABCOgAAAAAAAEM6AAAAAAAAAAAAAB46AAAAAAAAHzoAAAAAAAAAAAAA9joAAAAAAAD3OgAAAAAAAAAAAADIOgAAAAAAAMk6AAAAAAAAAAAAAGk6AAAAAAAAajoAAAAAAAAAAAAARDoAAAAAAABFOgAAAAAAAAAAAAAfOgAAAAAAACA6AAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAGjoAAAAAAAAaOgAAAAAAAAAAAAAAAPC/OjoAAAAAAAA6OgAAAAAAAAAAAAAAAPC/WjoAAAAAAABaOgAAAAAAAAAAAAAAAPC/tDoAAAAAAAC0OgAAAAAAAAAAAAAAAPC/3ToAAAAAAADdOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1484,
					1,
					"left_delete",
					null,
					"BQAAAPo6AAAAAAAA+joAAAAAAAABAAAAI8s6AAAAAAAAyzoAAAAAAAABAAAAI2s6AAAAAAAAazoAAAAAAAABAAAAI0U6AAAAAAAARToAAAAAAAABAAAAIx86AAAAAAAAHzoAAAAAAAABAAAAIw",
					"AQAAAAAAAAAFAAAAIDoAAAAAAAAgOgAAAAAAAAAAAAAAAPC/RjoAAAAAAABGOgAAAAAAAAAAAAAAAPC/bDoAAAAAAABsOgAAAAAAAAAAAAAAAPC/zDoAAAAAAADMOgAAAAAAAAAAAAAAAPC/+zoAAAAAAAD7OgAAAAAAAAAAAAAAAPC/"
				],
				[
					1486,
					1,
					"insert",
					{
						"characters": "$"
					},
					"BQAAAPY6AAAAAAAA9zoAAAAAAAAAAAAAyDoAAAAAAADJOgAAAAAAAAAAAABpOgAAAAAAAGo6AAAAAAAAAAAAAEQ6AAAAAAAARToAAAAAAAAAAAAAHzoAAAAAAAAgOgAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAHzoAAAAAAAAfOgAAAAAAAAAAAAAAAPC/RDoAAAAAAABEOgAAAAAAAAAAAAAAAPC/aToAAAAAAABpOgAAAAAAAAAAAAAAAPC/yDoAAAAAAADIOgAAAAAAAAAAAAAAAPC/9joAAAAAAAD2OgAAAAAAAAAAAAAAAPC/"
				],
				[
					1495,
					1,
					"insert",
					{
						"characters": ".data"
					},
					"CgAAANY6AAAAAAAA1zoAAAAAAAAAAAAAqToAAAAAAACqOgAAAAAAAAAAAADYOgAAAAAAANk6AAAAAAAAAAAAAKo6AAAAAAAAqzoAAAAAAAAAAAAA2joAAAAAAADbOgAAAAAAAAAAAACrOgAAAAAAAKw6AAAAAAAAAAAAANw6AAAAAAAA3ToAAAAAAAAAAAAArDoAAAAAAACtOgAAAAAAAAAAAADeOgAAAAAAAN86AAAAAAAAAAAAAK06AAAAAAAArjoAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAqToAAAAAAACpOgAAAAAAAAAAAAAAAPC/1joAAAAAAADWOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1496,
					1,
					"insert",
					{
						"characters": "#$"
					},
					"BAAAAOA6AAAAAAAA4ToAAAAAAAAAAAAArjoAAAAAAACvOgAAAAAAAAAAAADiOgAAAAAAAOM6AAAAAAAAAAAAAK86AAAAAAAAsDoAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAArjoAAAAAAACuOgAAAAAAAAAAAAAAAPC/4DoAAAAAAADgOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1497,
					2,
					"left_delete",
					null,
					"BAAAAOM6AAAAAAAA4zoAAAAAAAABAAAAJK86AAAAAAAArzoAAAAAAAABAAAAJOE6AAAAAAAA4ToAAAAAAAABAAAAI646AAAAAAAArjoAAAAAAAABAAAAIw",
					"AQAAAAAAAAACAAAAsDoAAAAAAACwOgAAAAAAAAAAAAAAAPC/5DoAAAAAAADkOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1498,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AgAAAOA6AAAAAAAA4ToAAAAAAAAAAAAArjoAAAAAAACvOgAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAArjoAAAAAAACuOgAAAAAAAAAAAAAAAPC/4DoAAAAAAADgOgAAAAAAAAAAAAAAAPC/"
				],
				[
					1514,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"GAAAAIY7AAAAAAAAhzsAAAAAAAAAAAAAbzsAAAAAAABwOwAAAAAAAAAAAABKOwAAAAAAAEs7AAAAAAAAAAAAAEI7AAAAAAAAQzsAAAAAAAAAAAAAijsAAAAAAACLOwAAAAAAAAAAAAByOwAAAAAAAHM7AAAAAAAAAAAAAEw7AAAAAAAATTsAAAAAAAAAAAAAQzsAAAAAAABEOwAAAAAAAAAAAACOOwAAAAAAAI87AAAAAAAAAAAAAHU7AAAAAAAAdjsAAAAAAAAAAAAATjsAAAAAAABPOwAAAAAAAAAAAABEOwAAAAAAAEU7AAAAAAAAAAAAAJI7AAAAAAAAkzsAAAAAAAAAAAAAeDsAAAAAAAB5OwAAAAAAAAAAAABQOwAAAAAAAFE7AAAAAAAAAAAAAEU7AAAAAAAARjsAAAAAAAAAAAAAljsAAAAAAACXOwAAAAAAAAAAAAB7OwAAAAAAAHw7AAAAAAAAAAAAAFI7AAAAAAAAUzsAAAAAAAAAAAAARjsAAAAAAABHOwAAAAAAAAAAAACaOwAAAAAAAJs7AAAAAAAAAAAAAH47AAAAAAAAfzsAAAAAAAAAAAAAVDsAAAAAAABVOwAAAAAAAAAAAABHOwAAAAAAAEg7AAAAAAAAAAAAAA",
					"AQAAAAAAAAAEAAAAQjsAAAAAAABCOwAAAAAAAAAAAAAAAPC/SjsAAAAAAABKOwAAAAAAAAAAAAAAAPC/bzsAAAAAAABvOwAAAAAAAAAAAAAAAPC/hjsAAAAAAACGOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"right_delete",
					null,
					"AQAAAOk7AAAAAAAA6TsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA6TsAAAAAAADpOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1531,
					1,
					"right_delete",
					null,
					"AQAAAOk7AAAAAAAA6TsAAAAAAACtAAAAICAjIGV4dHJhY3QgbGFiZWxzCiAgZGF0YV9wcmVwYXJlZCA8LSBEaWFzcG9yYVN1cnZleVJlc3VsdHM6OmV4dHJhY3RfbGFiZWxzKGRhdGFfcHJlcGFyZWQpJGRhdGEKICBkYXRhX2xhYmVscyA8LSBEaWFzcG9yYVN1cnZleVJlc3VsdHM6OmV4dHJhY3RfbGFiZWxzKGRhdGFfcHJlcGFyZWQpJGxhYmVscwo",
					"AQAAAAAAAAABAAAA6TsAAAAAAACWPAAAAAAAAAAAAAAAAAAA"
				],
				[
					1549,
					1,
					"right_delete",
					null,
					"AQAAAOk7AAAAAAAA6TsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA6TsAAAAAAADpOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1560,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOg7AAAAAAAA6TsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6DsAAAAAAADoOwAAAAAAAAAAAAAAQFRA"
				],
				[
					1562,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOk7AAAAAAAA6jsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6TsAAAAAAADpOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1565,
					1,
					"reindent",
					null,
					"AQAAAOk7AAAAAAAA7TsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6TsAAAAAAADpOwAAAAAAAAAAAAAAAAAA"
				],
				[
					1568,
					1,
					"left_delete",
					null,
					"AQAAAOs7AAAAAAAA6zsAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA7TsAAAAAAADtOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "data_prepae"
					},
					"CwAAAOs7AAAAAAAA7DsAAAAAAAAAAAAA7DsAAAAAAADtOwAAAAAAAAAAAADtOwAAAAAAAO47AAAAAAAAAAAAAO47AAAAAAAA7zsAAAAAAAAAAAAA7zsAAAAAAADwOwAAAAAAAAAAAADwOwAAAAAAAPE7AAAAAAAAAAAAAPE7AAAAAAAA8jsAAAAAAAAAAAAA8jsAAAAAAADzOwAAAAAAAAAAAADzOwAAAAAAAPQ7AAAAAAAAAAAAAPQ7AAAAAAAA9TsAAAAAAAAAAAAA9TsAAAAAAAD2OwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6zsAAAAAAADrOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"left_delete",
					null,
					"AQAAAPU7AAAAAAAA9TsAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA9jsAAAAAAAD2OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1572,
					1,
					"insert",
					{
						"characters": "red$wh"
					},
					"BgAAAPU7AAAAAAAA9jsAAAAAAAAAAAAA9jsAAAAAAAD3OwAAAAAAAAAAAAD3OwAAAAAAAPg7AAAAAAAAAAAAAPg7AAAAAAAA+TsAAAAAAAAAAAAA+TsAAAAAAAD6OwAAAAAAAAAAAAD6OwAAAAAAAPs7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9TsAAAAAAAD1OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"insert",
					{
						"characters": "ere"
					},
					"AwAAAPs7AAAAAAAA/DsAAAAAAAAAAAAA/DsAAAAAAAD9OwAAAAAAAAAAAAD9OwAAAAAAAP47AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+zsAAAAAAAD7OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					1,
					"cut",
					null,
					"AQAAAOs7AAAAAAAA6zsAAAAAAAATAAAAZGF0YV9wcmVwYXJlZCR3aGVyZQ",
					"AQAAAAAAAAABAAAA/jsAAAAAAADrOwAAAAAAAAAAAAAAADJA"
				],
				[
					1579,
					1,
					"right_delete",
					null,
					"AQAAAOs7AAAAAAAA6zsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA6zsAAAAAAADrOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"right_delete",
					null,
					"AQAAAOs7AAAAAAAA6zsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA6zsAAAAAAADrOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1587,
					1,
					"cut",
					null,
					"AQAAAB88AAAAAAAAHzwAAAAAAABGAAAAICAgIGRwbHlyOjptdXRhdGUocXVlc3Rpb24gPSBvcmRlcmVkKC5kYXRhJGFnZSwgbGV2ZWxzID0gZGF0YV9sYWJlbHMpKQ",
					"AQAAAAAAAAABAAAAHzwAAAAAAABlPAAAAAAAAP///////+9/"
				],
				[
					1589,
					1,
					"left_delete",
					null,
					"AQAAAB48AAAAAAAAHjwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAHzwAAAAAAAAfPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					1,
					"left_delete",
					null,
					"AQAAAB08AAAAAAAAHTwAAAAAAAABAAAAJQ",
					"AQAAAAAAAAABAAAAHjwAAAAAAAAePAAAAAAAAAAAAAAAAPC/"
				],
				[
					1593,
					3,
					"left_delete",
					null,
					"AwAAABw8AAAAAAAAHDwAAAAAAAABAAAAPhs8AAAAAAAAGzwAAAAAAAABAAAAJRo8AAAAAAAAGjwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAHTwAAAAAAAAdPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1622,
					1,
					"insert",
					{
						"characters": "Unique"
					},
					"BgAAAKU9AAAAAAAApj0AAAAAAAAAAAAApj0AAAAAAACnPQAAAAAAAAAAAACnPQAAAAAAAKg9AAAAAAAAAAAAAKg9AAAAAAAAqT0AAAAAAAAAAAAAqT0AAAAAAACqPQAAAAAAAAAAAACqPQAAAAAAAKs9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApT0AAAAAAAClPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1623,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKs9AAAAAAAArD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqz0AAAAAAACrPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAAOc7AAAAAAAA7DsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5zsAAAAAAADnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1645,
					1,
					"insert",
					{
						"characters": "\ndplyr"
					},
					"BwAAAOw7AAAAAAAA7TsAAAAAAAAAAAAA7TsAAAAAAADxOwAAAAAAAAAAAADxOwAAAAAAAPI7AAAAAAAAAAAAAPI7AAAAAAAA8zsAAAAAAAAAAAAA8zsAAAAAAAD0OwAAAAAAAAAAAAD0OwAAAAAAAPU7AAAAAAAAAAAAAPU7AAAAAAAA9jsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7DsAAAAAAADsOwAAAAAAAAAAAAAAAPC/"
				],
				[
					1647,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAPY7AAAAAAAA9zsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9jsAAAAAAAD2OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAPc7AAAAAAAA+DsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9zsAAAAAAAD3OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert",
					{
						"characters": "ungroup"
					},
					"BwAAAPg7AAAAAAAA+TsAAAAAAAAAAAAA+TsAAAAAAAD6OwAAAAAAAAAAAAD6OwAAAAAAAPs7AAAAAAAAAAAAAPs7AAAAAAAA/DsAAAAAAAAAAAAA/DsAAAAAAAD9OwAAAAAAAAAAAAD9OwAAAAAAAP47AAAAAAAAAAAAAP47AAAAAAAA/zsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+DsAAAAAAAD4OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP87AAAAAAAAATwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/zsAAAAAAAD/OwAAAAAAAAAAAAAAAPC/"
				],
				[
					1653,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAOs7AAAAAAAA6zsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1675,
					1,
					"left_delete",
					null,
					"AQAAAIw8AAAAAAAAjDwAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAjTwAAAAAAACNPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAIw8AAAAAAAAjTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjDwAAAAAAACMPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "ercentage"
					},
					"CQAAAI08AAAAAAAAjjwAAAAAAAAAAAAAjjwAAAAAAACPPAAAAAAAAAAAAACPPAAAAAAAAJA8AAAAAAAAAAAAAJA8AAAAAAAAkTwAAAAAAAAAAAAAkTwAAAAAAACSPAAAAAAAAAAAAACSPAAAAAAAAJM8AAAAAAAAAAAAAJM8AAAAAAAAlDwAAAAAAAAAAAAAlDwAAAAAAACVPAAAAAAAAAAAAACVPAAAAAAAAJY8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjTwAAAAAAACNPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1692,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AgAAAKU8AAAAAAAApjwAAAAAAAAAAAAApjwAAAAAAACmPAAAAAAAAAgAAABxdWVzdGlvbg",
					"AQAAAAAAAAABAAAApTwAAAAAAACtPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1694,
					1,
					"insert",
					{
						"characters": "uestion"
					},
					"BwAAAKY8AAAAAAAApzwAAAAAAAAAAAAApzwAAAAAAACoPAAAAAAAAAAAAACoPAAAAAAAAKk8AAAAAAAAAAAAAKk8AAAAAAAAqjwAAAAAAAAAAAAAqjwAAAAAAACrPAAAAAAAAAAAAACrPAAAAAAAAKw8AAAAAAAAAAAAAKw8AAAAAAAArTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjwAAAAAAACmPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AgAAAKU8AAAAAAAApjwAAAAAAAAAAAAApjwAAAAAAACmPAAAAAAAAAgAAABxdWVzdGlvbg",
					"AQAAAAAAAAABAAAArTwAAAAAAAClPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "here"
					},
					"BAAAAKY8AAAAAAAApzwAAAAAAAAAAAAApzwAAAAAAACoPAAAAAAAAAAAAACoPAAAAAAAAKk8AAAAAAAAAAAAAKk8AAAAAAAAqjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApjwAAAAAAACmPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1707,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKo8AAAAAAAAqzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjwAAAAAAACqPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1708,
					1,
					"insert",
					{
						"characters": " label"
					},
					"BgAAAKs8AAAAAAAArDwAAAAAAAAAAAAArDwAAAAAAACtPAAAAAAAAAAAAACtPAAAAAAAAK48AAAAAAAAAAAAAK48AAAAAAAArzwAAAAAAAAAAAAArzwAAAAAAACwPAAAAAAAAAAAAACwPAAAAAAAALE8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqzwAAAAAAACrPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1709,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALE8AAAAAAAAsjwAAAAAAAAAAAAAsjwAAAAAAACzPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsTwAAAAAAACxPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1710,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAALM8AAAAAAAAtDwAAAAAAAAAAAAAtDwAAAAAAAC1PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAszwAAAAAAACzPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1711,
					1,
					"left_delete",
					null,
					"AQAAALQ8AAAAAAAAtDwAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAtTwAAAAAAAC1PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1712,
					1,
					"insert",
					{
						"characters": ".data."
					},
					"BgAAALQ8AAAAAAAAtTwAAAAAAAAAAAAAtTwAAAAAAAC2PAAAAAAAAAAAAAC2PAAAAAAAALc8AAAAAAAAAAAAALc8AAAAAAAAuDwAAAAAAAAAAAAAuDwAAAAAAAC5PAAAAAAAAAAAAAC5PAAAAAAAALo8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1713,
					1,
					"left_delete",
					null,
					"AQAAALk8AAAAAAAAuTwAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAujwAAAAAAAC6PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1714,
					1,
					"insert",
					{
						"characters": "$labels"
					},
					"BwAAALk8AAAAAAAAujwAAAAAAAAAAAAAujwAAAAAAAC7PAAAAAAAAAAAAAC7PAAAAAAAALw8AAAAAAAAAAAAALw8AAAAAAAAvTwAAAAAAAAAAAAAvTwAAAAAAAC+PAAAAAAAAAAAAAC+PAAAAAAAAL88AAAAAAAAAAAAAL88AAAAAAAAwDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuTwAAAAAAAC5PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1719,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAG48AAAAAAAAbzwAAAAAAAAAAAAAbzwAAAAAAABzPAAAAAAAAAAAAABvPAAAAAAAAG88AAAAAAAABAAAACAgICBvPAAAAAAAAHU8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbjwAAAAAAABuPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1727,
					1,
					"right_delete",
					null,
					"AwAAALI8AAAAAAAAsjwAAAAAAAABAAAAIJ48AAAAAAAAnjwAAAAAAAABAAAAIIg8AAAAAAAAiDwAAAAAAAABAAAAIA",
					"AQAAAAAAAAADAAAAiDwAAAAAAACIPAAAAAAAAAAAAAAAAPC/njwAAAAAAACePAAAAAAAAAAAAAAAAPC/sjwAAAAAAACyPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BgAAALA8AAAAAAAAsTwAAAAAAAAAAAAAsTwAAAAAAAC3PAAAAAAAAAAAAACdPAAAAAAAAJ48AAAAAAAAAAAAAJ48AAAAAAAApDwAAAAAAAAAAAAAiDwAAAAAAACJPAAAAAAAAAAAAACJPAAAAAAAAI88AAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAiDwAAAAAAACIPAAAAAAAAAAAAAAAAPC/nTwAAAAAAACdPAAAAAAAAAAAAAAAAPC/sDwAAAAAAACwPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1736,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANk8AAAAAAAA2jwAAAAAAAAAAAAA2jwAAAAAAADgPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2TwAAAAAAADZPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1738,
					1,
					"left_delete",
					null,
					"AQAAAN48AAAAAAAA3jwAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAA4DwAAAAAAADgPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1763,
					1,
					"insert",
					{
						"characters": "labels"
					},
					"BwAAAE49AAAAAAAATz0AAAAAAAAAAAAATz0AAAAAAABPPQAAAAAAAAEAAABuTz0AAAAAAABQPQAAAAAAAAAAAABQPQAAAAAAAFE9AAAAAAAAAAAAAFE9AAAAAAAAUj0AAAAAAAAAAAAAUj0AAAAAAABTPQAAAAAAAAAAAABTPQAAAAAAAFQ9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATz0AAAAAAABOPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1772,
					1,
					"left_delete",
					null,
					"AQAAAGk9AAAAAAAAaT0AAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAaj0AAAAAAABqPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1774,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAGk9AAAAAAAAaj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaT0AAAAAAABpPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1776,
					1,
					"left_delete",
					null,
					"AQAAAGk9AAAAAAAAaT0AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAaj0AAAAAAABqPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"insert",
					{
						"characters": "labels"
					},
					"BgAAAGk9AAAAAAAAaj0AAAAAAAAAAAAAaj0AAAAAAABrPQAAAAAAAAAAAABrPQAAAAAAAGw9AAAAAAAAAAAAAGw9AAAAAAAAbT0AAAAAAAAAAAAAbT0AAAAAAABuPQAAAAAAAAAAAABuPQAAAAAAAG89AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaT0AAAAAAABpPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1801,
					1,
					"insert",
					{
						"characters": "percentage"
					},
					"CwAAAGk9AAAAAAAAaj0AAAAAAAAAAAAAaj0AAAAAAABqPQAAAAAAAAYAAABsYWJlbHNqPQAAAAAAAGs9AAAAAAAAAAAAAGs9AAAAAAAAbD0AAAAAAAAAAAAAbD0AAAAAAABtPQAAAAAAAAAAAABtPQAAAAAAAG49AAAAAAAAAAAAAG49AAAAAAAAbz0AAAAAAAAAAAAAbz0AAAAAAABwPQAAAAAAAAAAAABwPQAAAAAAAHE9AAAAAAAAAAAAAHE9AAAAAAAAcj0AAAAAAAAAAAAAcj0AAAAAAABzPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaT0AAAAAAABvPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1818,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAAFQ9AAAAAAAAVT0AAAAAAAAAAAAAVT0AAAAAAABVPQAAAAAAADUAAAAsIHkgPSAuMDc1Km1heCguZGF0YSRwZXJjZW50YWdlKSwgc2l6ZSA9IDEyKSwgYWxwaGE9MQ",
					"AQAAAAAAAAABAAAAiT0AAAAAAABUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1820,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFU9AAAAAAAAVj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVT0AAAAAAABVPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1821,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFY9AAAAAAAAVz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVj0AAAAAAABWPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1822,
					1,
					"paste",
					null,
					"AQAAAFc9AAAAAAAAfD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVz0AAAAAAABXPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1844,
					1,
					"insert",
					{
						"characters": "group"
					},
					"BgAAAMU8AAAAAAAAxjwAAAAAAAAAAAAAxjwAAAAAAADGPAAAAAAAAAUAAABsYWJlbMY8AAAAAAAAxzwAAAAAAAAAAAAAxzwAAAAAAADIPAAAAAAAAAAAAADIPAAAAAAAAMk8AAAAAAAAAAAAAMk8AAAAAAAAyjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyjwAAAAAAADFPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1849,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AgAAANM8AAAAAAAA1DwAAAAAAAAAAAAA1DwAAAAAAADUPAAAAAAAAAYAAABsYWJlbHM",
					"AQAAAAAAAAABAAAA2TwAAAAAAADTPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1851,
					1,
					"insert",
					{
						"characters": "jere"
					},
					"BAAAANQ8AAAAAAAA1TwAAAAAAAAAAAAA1TwAAAAAAADWPAAAAAAAAAAAAADWPAAAAAAAANc8AAAAAAAAAAAAANc8AAAAAAAA2DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1DwAAAAAAADUPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1852,
					4,
					"left_delete",
					null,
					"BAAAANc8AAAAAAAA1zwAAAAAAAABAAAAZdY8AAAAAAAA1jwAAAAAAAABAAAActU8AAAAAAAA1TwAAAAAAAABAAAAZdQ8AAAAAAAA1DwAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAA2DwAAAAAAADYPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1853,
					1,
					"insert",
					{
						"characters": "here"
					},
					"BAAAANQ8AAAAAAAA1TwAAAAAAAAAAAAA1TwAAAAAAADWPAAAAAAAAAAAAADWPAAAAAAAANc8AAAAAAAAAAAAANc8AAAAAAAA2DwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1DwAAAAAAADUPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1871,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM09AAAAAAAAzj0AAAAAAAAAAAAAzj0AAAAAAADSPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzT0AAAAAAADNPQAAAAAAAP///////+9/"
				],
				[
					1873,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAANI9AAAAAAAA0z0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0j0AAAAAAADSPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1875,
					1,
					"insert",
					{
						"characters": "cale_f"
					},
					"BgAAANM9AAAAAAAA1D0AAAAAAAAAAAAA1D0AAAAAAADVPQAAAAAAAAAAAADVPQAAAAAAANY9AAAAAAAAAAAAANY9AAAAAAAA1z0AAAAAAAAAAAAA1z0AAAAAAADYPQAAAAAAAAAAAADYPQAAAAAAANk9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0z0AAAAAAADTPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1877,
					1,
					"insert",
					{
						"characters": "il"
					},
					"AgAAANk9AAAAAAAA2j0AAAAAAAAAAAAA2j0AAAAAAADbPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2T0AAAAAAADZPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1881,
					1,
					"insert_completion",
					{
						"completion": "scale_fill_brewer",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "scale_fill_brewer"
					},
					"AgAAANI9AAAAAAAA0j0AAAAAAAAJAAAAc2NhbGVfZmls0j0AAAAAAADjPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2z0AAAAAAADbPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1883,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOM9AAAAAAAA5T0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4z0AAAAAAADjPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1894,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAOQ9AAAAAAAA5T0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5D0AAAAAAADkPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1896,
					1,
					"insert",
					{
						"characters": "irection"
					},
					"CAAAAOU9AAAAAAAA5j0AAAAAAAAAAAAA5j0AAAAAAADnPQAAAAAAAAAAAADnPQAAAAAAAOg9AAAAAAAAAAAAAOg9AAAAAAAA6T0AAAAAAAAAAAAA6T0AAAAAAADqPQAAAAAAAAAAAADqPQAAAAAAAOs9AAAAAAAAAAAAAOs9AAAAAAAA7D0AAAAAAAAAAAAA7D0AAAAAAADtPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5T0AAAAAAADlPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1897,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAO09AAAAAAAA7j0AAAAAAAAAAAAA7j0AAAAAAADvPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7T0AAAAAAADtPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1898,
					1,
					"insert",
					{
						"characters": " -1"
					},
					"AwAAAO89AAAAAAAA8D0AAAAAAAAAAAAA8D0AAAAAAADxPQAAAAAAAAAAAADxPQAAAAAAAPI9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7z0AAAAAAADvPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1907,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAIM9AAAAAAAAhT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApD0AAAAAAACkPQAAAAAAAAAAAAAA0HRA"
				],
				[
					1920,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH49AAAAAAAAfz0AAAAAAAAAAAAAfz0AAAAAAACDPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfj0AAAAAAAB+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1922,
					1,
					"paste",
					null,
					"AQAAAH89AAAAAAAAvz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgz0AAAAAAACDPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1930,
					1,
					"right_delete",
					null,
					"AgAAAHU9AAAAAAAAdT0AAAAAAAABAAAAIL49AAAAAAAAvj0AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAdT0AAAAAAAB1PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1933,
					1,
					"right_delete",
					null,
					"AQAAAHY9AAAAAAAAdj0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdj0AAAAAAAB2PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1936,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHU9AAAAAAAAdj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdT0AAAAAAAB1PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1939,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHc9AAAAAAAAeD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdz0AAAAAAAB3PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1943,
					1,
					"right_delete",
					null,
					"AQAAAHw9AAAAAAAAfD0AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAfD0AAAAAAAB8PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1947,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAIA9AAAAAAAAgj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgD0AAAAAAACAPQAAAAAAAAAAAAAAADJA"
				],
				[
					1958,
					1,
					"paste",
					null,
					"AQAAAMA9AAAAAAAAVD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwD0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1963,
					1,
					"indent",
					null,
					"BgAAAMA9AAAAAAAAwj0AAAAAAAAAAAAA1j0AAAAAAADYPQAAAAAAAAAAAADuPQAAAAAAAPA9AAAAAAAAAAAAAAI+AAAAAAAABD4AAAAAAAAAAAAALz4AAAAAAAAxPgAAAAAAAAAAAABbPgAAAAAAAF0+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVD4AAAAAAADAPQAAAAAAAAAAAAAAAAAA"
				],
				[
					1965,
					1,
					"indent",
					null,
					"BgAAAMA9AAAAAAAAwj0AAAAAAAAAAAAA2D0AAAAAAADaPQAAAAAAAAAAAADyPQAAAAAAAPQ9AAAAAAAAAAAAAAg+AAAAAAAACj4AAAAAAAAAAAAANz4AAAAAAAA5PgAAAAAAAAAAAABlPgAAAAAAAGc+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYD4AAAAAAADCPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1979,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAFw+AAAAAAAAXT4AAAAAAAAAAAAAXT4AAAAAAABePgAAAAAAAAAAAABePgAAAAAAAF8+AAAAAAAAAAAAAF8+AAAAAAAAYD4AAAAAAAAAAAAAYD4AAAAAAABhPgAAAAAAAAAAAABhPgAAAAAAAGI+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXD4AAAAAAABcPgAAAAAAAAAAAAAAAPC/"
				],
				[
					1995,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAABk+AAAAAAAAGj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGT4AAAAAAAAZPgAAAAAAAAAAAAAAAPC/"
				],
				[
					1997,
					1,
					"insert",
					{
						"characters": "tringr"
					},
					"BgAAABo+AAAAAAAAGz4AAAAAAAAAAAAAGz4AAAAAAAAcPgAAAAAAAAAAAAAcPgAAAAAAAB0+AAAAAAAAAAAAAB0+AAAAAAAAHj4AAAAAAAAAAAAAHj4AAAAAAAAfPgAAAAAAAAAAAAAfPgAAAAAAACA+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGj4AAAAAAAAaPgAAAAAAAAAAAAAAAPC/"
				],
				[
					1998,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAACA+AAAAAAAAIT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAID4AAAAAAAAgPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2000,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAACE+AAAAAAAAIj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIT4AAAAAAAAhPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2010,
					1,
					"unindent",
					null,
					"BQAAANg9AAAAAAAA2D0AAAAAAAACAAAAICDwPQAAAAAAAPA9AAAAAAAAAgAAACAgBD4AAAAAAAAEPgAAAAAAAAIAAAAgIDo+AAAAAAAAOj4AAAAAAAACAAAAICBsPgAAAAAAAGw+AAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAez4AAAAAAADxPQAAAAAAAAAAAAAAQG1A"
				],
				[
					2045,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADM8AAAAAAAANDwAAAAAAAAAAAAANDwAAAAAAAA2PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMzwAAAAAAAAzPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2046,
					1,
					"paste",
					null,
					"AQAAADQ8AAAAAAAAgDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjwAAAAAAAA2PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2047,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAIA8AAAAAAAAgDwAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAgjwAAAAAAACCPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2052,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADQ8AAAAAAAANjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANDwAAAAAAAA0PAAAAAAAAAAAAAAAAAAA"
				],
				[
					2069,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAMA+AAAAAAAAwT4AAAAAAAAAAAAAwT4AAAAAAADCPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwD4AAAAAAADAPgAAAAAAAAAAAAAAgEZA"
				],
				[
					2089,
					1,
					"cut",
					null,
					"AQAAAIc/AAAAAAAAhz8AAAAAAAATAAAAICAgIGNvb3JkX2ZsaXAoKSArCg",
					"AQAAAAAAAAABAAAAjD8AAAAAAACMPwAAAAAAAAAAAAAAgEZA"
				],
				[
					2102,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAACM+AAAAAAAAJD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIz4AAAAAAAAjPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2104,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAACQ+AAAAAAAAJT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJD4AAAAAAAAkPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2106,
					1,
					"insert",
					{
						"characters": "bels"
					},
					"BAAAACU+AAAAAAAAJj4AAAAAAAAAAAAAJj4AAAAAAAAnPgAAAAAAAAAAAAAnPgAAAAAAACg+AAAAAAAAAAAAACg+AAAAAAAAKT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJT4AAAAAAAAlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2107,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAACk+AAAAAAAAKj4AAAAAAAAAAAAAKj4AAAAAAAArPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKT4AAAAAAAApPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACs+AAAAAAAALD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKz4AAAAAAAArPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2110,
					1,
					"left_delete",
					null,
					"AQAAACs+AAAAAAAAKz4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAALD4AAAAAAAAsPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2112,
					1,
					"left_delete",
					null,
					"AQAAACo+AAAAAAAAKj4AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAKz4AAAAAAAArPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2114,
					7,
					"left_delete",
					null,
					"BwAAACk+AAAAAAAAKT4AAAAAAAABAAAAICg+AAAAAAAAKD4AAAAAAAABAAAAcyc+AAAAAAAAJz4AAAAAAAABAAAAbCY+AAAAAAAAJj4AAAAAAAABAAAAZSU+AAAAAAAAJT4AAAAAAAABAAAAYiQ+AAAAAAAAJD4AAAAAAAABAAAAYSM+AAAAAAAAIz4AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAKj4AAAAAAAAqPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2135,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABg/AAAAAAAAGj8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOT8AAAAAAAA5PwAAAAAAAAAAAAAAAPC/"
				],
				[
					2156,
					1,
					"insert",
					{
						"characters": "label"
					},
					"BgAAABQ9AAAAAAAAFT0AAAAAAAAAAAAAFT0AAAAAAAAVPQAAAAAAAAUAAABncm91cBU9AAAAAAAAFj0AAAAAAAAAAAAAFj0AAAAAAAAXPQAAAAAAAAAAAAAXPQAAAAAAABg9AAAAAAAAAAAAABg9AAAAAAAAGT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGT0AAAAAAAAUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2160,
					1,
					"insert",
					{
						"characters": "labels"
					},
					"BwAAACI9AAAAAAAAIz0AAAAAAAAAAAAAIz0AAAAAAAAjPQAAAAAAAAUAAAB3aGVyZSM9AAAAAAAAJD0AAAAAAAAAAAAAJD0AAAAAAAAlPQAAAAAAAAAAAAAlPQAAAAAAACY9AAAAAAAAAAAAACY9AAAAAAAAJz0AAAAAAAAAAAAAJz0AAAAAAAAoPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJz0AAAAAAAAiPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2193,
					1,
					"insert",
					{
						"characters": "\ncoord"
					},
					"BwAAAIk/AAAAAAAAij8AAAAAAAAAAAAAij8AAAAAAACOPwAAAAAAAAAAAACOPwAAAAAAAI8/AAAAAAAAAAAAAI8/AAAAAAAAkD8AAAAAAAAAAAAAkD8AAAAAAACRPwAAAAAAAAAAAACRPwAAAAAAAJI/AAAAAAAAAAAAAJI/AAAAAAAAkz8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiT8AAAAAAACJPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2195,
					1,
					"insert",
					{
						"characters": "_pl"
					},
					"AwAAAJM/AAAAAAAAlD8AAAAAAAAAAAAAlD8AAAAAAACVPwAAAAAAAAAAAACVPwAAAAAAAJY/AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkz8AAAAAAACTPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2196,
					1,
					"left_delete",
					null,
					"AQAAAJU/AAAAAAAAlT8AAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAlj8AAAAAAACWPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2197,
					1,
					"insert_completion",
					{
						"completion": "coord_flip",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "coord_flip"
					},
					"AgAAAI4/AAAAAAAAjj8AAAAAAAAHAAAAY29vcmRfcI4/AAAAAAAAmD8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlT8AAAAAAACVPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2198,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJg/AAAAAAAAmj8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmD8AAAAAAACYPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2203,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAJo/AAAAAAAAmz8AAAAAAAAAAAAAmz8AAAAAAACcPwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmj8AAAAAAACaPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2204,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJw/AAAAAAAAnT8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnD8AAAAAAACcPwAAAAAAAAAAAAAAAPC/"
				],
				[
					2498,
					1,
					"insert",
					{
						"characters": "group"
					},
					"BgAAABQ9AAAAAAAAFT0AAAAAAAAAAAAAFT0AAAAAAAAVPQAAAAAAAAUAAABsYWJlbBU9AAAAAAAAFj0AAAAAAAAAAAAAFj0AAAAAAAAXPQAAAAAAAAAAAAAXPQAAAAAAABg9AAAAAAAAAAAAABg9AAAAAAAAGT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFD0AAAAAAAAZPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2518,
					1,
					"insert",
					{
						"characters": "we"
					},
					"AwAAACI9AAAAAAAAIz0AAAAAAAAAAAAAIz0AAAAAAAAjPQAAAAAAAAYAAABsYWJlbHMjPQAAAAAAACQ9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIj0AAAAAAAAoPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2520,
					1,
					"left_delete",
					null,
					"AQAAACM9AAAAAAAAIz0AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAJD0AAAAAAAAkPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2521,
					1,
					"insert",
					{
						"characters": "here"
					},
					"BAAAACM9AAAAAAAAJD0AAAAAAAAAAAAAJD0AAAAAAAAlPQAAAAAAAAAAAAAlPQAAAAAAACY9AAAAAAAAAAAAACY9AAAAAAAAJz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIz0AAAAAAAAjPQAAAAAAAAAAAAAAAPC/"
				],
				[
					2545,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABg/AAAAAAAAGD8AAAAAAAACAAAAIyA",
					"AQAAAAAAAAABAAAAGz8AAAAAAAAbPwAAAAAAAAAAAAAAgE9A"
				],
				[
					2553,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAADk/AAAAAAAAOj8AAAAAAAAAAAAAOj8AAAAAAAA7PwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOT8AAAAAAAA5PwAAAAAAAAAAAAAAAPC/"
				],
				[
					2573,
					1,
					"insert",
					{
						"characters": "top"
					},
					"BAAAAGhAAAAAAAAAaUAAAAAAAAAAAAAAaUAAAAAAAABpQAAAAAAAAAQAAABub25laUAAAAAAAABqQAAAAAAAAAAAAABqQAAAAAAAAGtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbEAAAAAAAABoQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2574,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAJs/AAAAAAAAmz8AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAa0AAAAAAAABrQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2582,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANVAAAAAAAAA1kAAAAAAAAAAAAAA1kAAAAAAAADcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1UAAAAAAAADVQAAAAAAAAP///////+9/"
				],
				[
					2583,
					1,
					"paste",
					null,
					"AQAAANZAAAAAAAAAH0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3EAAAAAAAADcQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2589,
					1,
					"left_delete",
					null,
					"AgAAAOdAAAAAAAAA50AAAAAAAAABAAAAeB5BAAAAAAAAHkEAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAA6EAAAAAAAADoQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2590,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAOdAAAAAAAAA6EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA50AAAAAAAADnQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2595,
					1,
					"insert",
					{
						"characters": "elemen"
					},
					"BwAAAOtAAAAAAAAA7EAAAAAAAAAAAAAA7EAAAAAAAADsQAAAAAAAADIAAABlbGVtZW50X3RleHQobWFyZ2luID0gbWFyZ2luKDEwLDAsMCwwKSwgaGp1c3QgPSAxKexAAAAAAAAA7UAAAAAAAAAAAAAA7UAAAAAAAADuQAAAAAAAAAAAAADuQAAAAAAAAO9AAAAAAAAAAAAAAO9AAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAADxQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA60AAAAAAAAAdQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2597,
					1,
					"insert_completion",
					{
						"completion": "element_blank",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "element_blank"
					},
					"AgAAAOtAAAAAAAAA60AAAAAAAAAGAAAAZWxlbWVu60AAAAAAAAD4QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8UAAAAAAAADxQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2598,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAPhAAAAAAAAA+UAAAAAAAAAAAAAA+UAAAAAAAAD6QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+EAAAAAAAAD4QAAAAAAAAAAAAAAAAPC/"
				],
				[
					2603,
					6,
					"left_delete",
					null,
					"BgAAAOVAAAAAAAAA5UAAAAAAAAABAAAAZeRAAAAAAAAA5EAAAAAAAAABAAAAbONAAAAAAAAA40AAAAAAAAABAAAAdOJAAAAAAAAA4kAAAAAAAAABAAAAaeFAAAAAAAAA4UAAAAAAAAABAAAAdOBAAAAAAAAA4EAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA5kAAAAAAAADmQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2609,
					1,
					"insert",
					{
						"characters": "text."
					},
					"BQAAAOFAAAAAAAAA4kAAAAAAAAAAAAAA4kAAAAAAAADjQAAAAAAAAAAAAADjQAAAAAAAAORAAAAAAAAAAAAAAORAAAAAAAAA5UAAAAAAAAAAAAAA5UAAAAAAAADmQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4UAAAAAAAADhQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2613,
					2,
					"right_delete",
					null,
					"AgAAAPpAAAAAAAAA+kAAAAAAAAABAAAACvpAAAAAAAAA+kAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA+kAAAAAAAAD6QAAAAAAAAP///////+9/"
				],
				[
					2615,
					5,
					"right_delete",
					null,
					"BQAAAPpAAAAAAAAA+kAAAAAAAAABAAAAIPpAAAAAAAAA+kAAAAAAAAABAAAAIPpAAAAAAAAA+kAAAAAAAAABAAAAIPpAAAAAAAAA+kAAAAAAAAABAAAAIPpAAAAAAAAA+kAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+kAAAAAAAAD6QAAAAAAAAAAAAAAAAPC/"
				],
				[
					2645,
					1,
					"insert",
					{
						"characters": "ticks.x"
					},
					"CAAAAOFAAAAAAAAA4kAAAAAAAAAAAAAA4kAAAAAAAADiQAAAAAAAAAYAAAB0ZXh0LnniQAAAAAAAAONAAAAAAAAAAAAAAONAAAAAAAAA5EAAAAAAAAAAAAAA5EAAAAAAAADlQAAAAAAAAAAAAADlQAAAAAAAAOZAAAAAAAAAAAAAAOZAAAAAAAAA50AAAAAAAAAAAAAA50AAAAAAAADoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA50AAAAAAAADhQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2662,
					1,
					"right_delete",
					null,
					"AQAAANxAAAAAAAAA3EAAAAAAAAAgAAAAYXhpcy50aWNrcy54ID0gZWxlbWVudF9ibGFuaygpLCA",
					"AQAAAAAAAAABAAAA/EAAAAAAAADcQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2672,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABM+AAAAAAAAFT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJj4AAAAAAAAmPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2693,
					1,
					"insert",
					{
						"characters": " %>% "
					},
					"AQAAADM8AAAAAAAAODwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMzwAAAAAAAAzPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2695,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAADg8AAAAAAAAOjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAODwAAAAAAAA4PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2697,
					3,
					"left_delete",
					null,
					"AwAAADk8AAAAAAAAOTwAAAAAAAABAAAAIDg8AAAAAAAAODwAAAAAAAABAAAAIDc8AAAAAAAANzwAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOjwAAAAAAAA6PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2698,
					1,
					"insert",
					{
						"characters": "\n\tdplyr:"
					},
					"CQAAADc8AAAAAAAAODwAAAAAAAAAAAAAODwAAAAAAAA6PAAAAAAAAAAAAAA6PAAAAAAAADw8AAAAAAAAAAAAADw8AAAAAAAAPTwAAAAAAAAAAAAAPTwAAAAAAAA+PAAAAAAAAAAAAAA+PAAAAAAAAD88AAAAAAAAAAAAAD88AAAAAAAAQDwAAAAAAAAAAAAAQDwAAAAAAABBPAAAAAAAAAAAAABBPAAAAAAAAEI8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANzwAAAAAAAA3PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2701,
					1,
					"insert_snippet",
					{
						"contents": ":"
					},
					"AQAAAEI8AAAAAAAAQzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQjwAAAAAAABCPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2702,
					1,
					"insert",
					{
						"characters": "mutate"
					},
					"BgAAAEM8AAAAAAAARDwAAAAAAAAAAAAARDwAAAAAAABFPAAAAAAAAAAAAABFPAAAAAAAAEY8AAAAAAAAAAAAAEY8AAAAAAAARzwAAAAAAAAAAAAARzwAAAAAAABIPAAAAAAAAAAAAABIPAAAAAAAAEk8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQzwAAAAAAABDPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2703,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEk8AAAAAAAASzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASTwAAAAAAABJPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2704,
					1,
					"insert",
					{
						"characters": "where"
					},
					"BQAAAEo8AAAAAAAASzwAAAAAAAAAAAAASzwAAAAAAABMPAAAAAAAAAAAAABMPAAAAAAAAE08AAAAAAAAAAAAAE08AAAAAAAATjwAAAAAAAAAAAAATjwAAAAAAABPPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjwAAAAAAABKPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2705,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAE88AAAAAAAAUDwAAAAAAAAAAAAAUDwAAAAAAABRPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATzwAAAAAAABPPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2706,
					1,
					"insert",
					{
						"characters": " ordered"
					},
					"CAAAAFE8AAAAAAAAUjwAAAAAAAAAAAAAUjwAAAAAAABTPAAAAAAAAAAAAABTPAAAAAAAAFQ8AAAAAAAAAAAAAFQ8AAAAAAAAVTwAAAAAAAAAAAAAVTwAAAAAAABWPAAAAAAAAAAAAABWPAAAAAAAAFc8AAAAAAAAAAAAAFc8AAAAAAAAWDwAAAAAAAAAAAAAWDwAAAAAAABZPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUTwAAAAAAABRPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2707,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFk8AAAAAAAAWzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWTwAAAAAAABZPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2708,
					1,
					"insert",
					{
						"characters": "where"
					},
					"BQAAAFo8AAAAAAAAWzwAAAAAAAAAAAAAWzwAAAAAAABcPAAAAAAAAAAAAABcPAAAAAAAAF08AAAAAAAAAAAAAF08AAAAAAAAXjwAAAAAAAAAAAAAXjwAAAAAAABfPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWjwAAAAAAABaPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2714,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGE8AAAAAAAAYjwAAAAAAAAAAAAAYjwAAAAAAABmPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTwAAAAAAABhPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2725,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALU8AAAAAAAAtjwAAAAAAAAAAAAAYjwAAAAAAABiPAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAtTwAAAAAAAC1PAAAAAAAAAAAAAAAACJA"
				],
				[
					2727,
					1,
					"reindent",
					null,
					"AQAAALI8AAAAAAAAtDwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsjwAAAAAAACyPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2729,
					1,
					"insert",
					{
						"characters": "data_final"
					},
					"CgAAALQ8AAAAAAAAtTwAAAAAAAAAAAAAtTwAAAAAAAC2PAAAAAAAAAAAAAC2PAAAAAAAALc8AAAAAAAAAAAAALc8AAAAAAAAuDwAAAAAAAAAAAAAuDwAAAAAAAC5PAAAAAAAAAAAAAC5PAAAAAAAALo8AAAAAAAAAAAAALo8AAAAAAAAuzwAAAAAAAAAAAAAuzwAAAAAAAC8PAAAAAAAAAAAAAC8PAAAAAAAAL08AAAAAAAAAAAAAL08AAAAAAAAvjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2731,
					1,
					"insert",
					{
						"characters": "$whwere"
					},
					"BwAAAL48AAAAAAAAvzwAAAAAAAAAAAAAvzwAAAAAAADAPAAAAAAAAAAAAADAPAAAAAAAAME8AAAAAAAAAAAAAME8AAAAAAAAwjwAAAAAAAAAAAAAwjwAAAAAAADDPAAAAAAAAAAAAADDPAAAAAAAAMQ8AAAAAAAAAAAAAMQ8AAAAAAAAxTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvjwAAAAAAAC+PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2736,
					1,
					"left_delete",
					null,
					"AQAAAME8AAAAAAAAwTwAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAwjwAAAAAAADCPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2741,
					1,
					"left_delete",
					null,
					"AQAAALQ8AAAAAAAAtDwAAAAAAAAQAAAAZGF0YV9maW5hbCR3aGVyZQ",
					"AQAAAAAAAAABAAAAtDwAAAAAAADEPAAAAAAAAP///////+9/"
				],
				[
					2743,
					1,
					"left_delete",
					null,
					"AQAAALI8AAAAAAAAsjwAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAtDwAAAAAAAC0PAAAAAAAAAAAAAAAAPC/"
				],
				[
					2745,
					1,
					"left_delete",
					null,
					"AQAAALE8AAAAAAAAsTwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsjwAAAAAAACyPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2747,
					1,
					"right_delete",
					null,
					"AQAAALE8AAAAAAAAsTwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAsTwAAAAAAACxPAAAAAAAAAAAAAAAAPC/"
				],
				[
					2767,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAEE+AAAAAAAAQT4AAAAAAAACAAAAIyA",
					"AQAAAAAAAAABAAAAVT4AAAAAAABVPgAAAAAAAAAAAAAAAPC/"
				],
				[
					2783,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAANBAAAAAAAABEEAAAAAAAAAAAAABEEAAAAAAAAKQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA0EAAAAAAAADQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2784,
					1,
					"paste",
					null,
					"AQAAAARBAAAAAAAATUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACkEAAAAAAAAKQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2790,
					1,
					"left_delete",
					null,
					"AgAAABVBAAAAAAAAFUEAAAAAAAABAAAAeExBAAAAAAAATEEAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAAFkEAAAAAAAAWQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2792,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAABVBAAAAAAAAFkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUEAAAAAAAAVQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2796,
					1,
					"insert",
					{
						"characters": "element"
					},
					"CAAAABlBAAAAAAAAGkEAAAAAAAAAAAAAGkEAAAAAAAAaQQAAAAAAAAwAAABlbGVtZW50X3RleHQaQQAAAAAAABtBAAAAAAAAAAAAABtBAAAAAAAAHEEAAAAAAAAAAAAAHEEAAAAAAAAdQQAAAAAAAAAAAAAdQQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAH0EAAAAAAAAAAAAAH0EAAAAAAAAgQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGUEAAAAAAAAlQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2798,
					1,
					"insert_completion",
					{
						"completion": "element_blank",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "element_blank"
					},
					"AgAAABlBAAAAAAAAGUEAAAAAAAAHAAAAZWxlbWVudBlBAAAAAAAAJkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIEEAAAAAAAAgQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2799,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAACZBAAAAAAAAJ0EAAAAAAAAAAAAAJ0EAAAAAAAAoQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJkEAAAAAAAAmQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2802,
					1,
					"left_delete",
					null,
					"AQAAAChBAAAAAAAAKEEAAAAAAAAmAAAAKG1hcmdpbiA9IG1hcmdpbigxMCwwLDAsMCksIGhqdXN0ID0gMSk",
					"AQAAAAAAAAABAAAAKEEAAAAAAABOQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2807,
					7,
					"right_delete",
					null,
					"BwAAAClBAAAAAAAAKUEAAAAAAAABAAAACilBAAAAAAAAKUEAAAAAAAABAAAACilBAAAAAAAAKUEAAAAAAAABAAAAIClBAAAAAAAAKUEAAAAAAAABAAAAIClBAAAAAAAAKUEAAAAAAAABAAAAIClBAAAAAAAAKUEAAAAAAAABAAAAIClBAAAAAAAAKUEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKUEAAAAAAAApQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2833,
					1,
					"left_delete",
					null,
					"AQAAABVBAAAAAAAAFUEAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAFkEAAAAAAAAWQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2835,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAABVBAAAAAAAAFkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUEAAAAAAAAVQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2867,
					1,
					"paste",
					null,
					"AQAAAClBAAAAAAAAR0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKUEAAAAAAAApQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2870,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEdBAAAAAAAASEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR0EAAAAAAABHQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2872,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEhBAAAAAAAASUEAAAAAAAAAAAAASUEAAAAAAABPQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASEEAAAAAAABIQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2873,
					1,
					"paste",
					null,
					"AQAAAE9BAAAAAAAAbUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAT0EAAAAAAABPQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2879,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAClBAAAAAAAAKkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKUEAAAAAAAApQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2882,
					4,
					"right_delete",
					null,
					"BAAAADBBAAAAAAAAMEEAAAAAAAABAAAAaTBBAAAAAAAAMEEAAAAAAAABAAAAdDBBAAAAAAAAMEEAAAAAAAABAAAAbDBBAAAAAAAAMEEAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAMEEAAAAAAAAwQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2883,
					1,
					"insert",
					{
						"characters": "ext"
					},
					"AwAAADBBAAAAAAAAMUEAAAAAAAAAAAAAMUEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADNBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMEEAAAAAAAAwQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2890,
					3,
					"left_delete",
					null,
					"AwAAAFhBAAAAAAAAWEEAAAAAAAABAAAAZVdBAAAAAAAAV0EAAAAAAAABAAAAbFZBAAAAAAAAVkEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAWUEAAAAAAABZQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2891,
					1,
					"insert",
					{
						"characters": "cks"
					},
					"AwAAAFZBAAAAAAAAV0EAAAAAAAAAAAAAV0EAAAAAAABYQQAAAAAAAAAAAABYQQAAAAAAAFlBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVkEAAAAAAABWQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2899,
					1,
					"right_delete",
					null,
					"AQAAADxAAAAAAAAAPEAAAAAAAAAgAAAAYXhpcy50aWNrcy55ID0gZWxlbWVudF9ibGFuaygpLCA",
					"AQAAAAAAAAABAAAAXEAAAAAAAAA8QAAAAAAAAAAAAAAAAEtA"
				],
				[
					2903,
					1,
					"cut",
					null,
					"AQAAADxAAAAAAAAAPEAAAAAAAABeAAAAcGFuZWwuYm9yZGVyID0gZWxlbWVudF9ibGFuaygpLAogICAgICBsZWdlbmQucG9zaXRpb24gPSAndG9wJywgYXhpcy50aWNrcy54ID0gZWxlbWVudF9ibGFuaygpLA",
					"AQAAAAAAAAABAAAAPEAAAAAAAACaQAAAAAAAAP///////+9/"
				],
				[
					2905,
					1,
					"left_delete",
					null,
					"AQAAADpAAAAAAAAAOkAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAPEAAAAAAAAA8QAAAAAAAAAAAAAAAAPC/"
				],
				[
					2907,
					3,
					"left_delete",
					null,
					"AwAAADhAAAAAAAAAOEAAAAAAAAACAAAAICA2QAAAAAAAADZAAAAAAAAAAgAAACAgNUAAAAAAAAA1QAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAOkAAAAAAAAA6QAAAAAAAAAAAAAAAAPC/"
				],
				[
					2914,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAdBAAAAAAAACEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB0EAAAAAAAAHQQAAAAAAAAAAAAAAOIZA"
				],
				[
					2915,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAhBAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAPQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACEEAAAAAAAAIQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2916,
					1,
					"paste",
					null,
					"AQAAAA9BAAAAAAAAbUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD0EAAAAAAAAPQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2921,
					1,
					"cut",
					null,
					"AQAAAAlBAAAAAAAACUEAAAAAAAAmAAAAICAgICAgcGFuZWwuYm9yZGVyID0gZWxlbWVudF9ibGFuaygpLAo",
					"AQAAAAAAAAABAAAALkEAAAAAAAAuQQAAAAAAAAAAAAAAcIFA"
				],
				[
					2925,
					1,
					"paste",
					null,
					"AQAAADZAAAAAAAAAXEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANkAAAAAAAAA2QAAAAAAAAAAAAAAAAAAA"
				],
				[
					2933,
					1,
					"cut",
					null,
					"AQAAAE5BAAAAAAAATkEAAAAAAAAfAAAAYXhpcy50aWNrcy54ID0gZWxlbWVudF9ibGFuaygpLA",
					"AQAAAAAAAAABAAAATkEAAAAAAABtQQAAAAAAAP///////+9/"
				],
				[
					2939,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFtAAAAAAAAAXEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW0AAAAAAAABbQAAAAAAAAP///////+9/"
				],
				[
					2940,
					1,
					"paste",
					null,
					"AQAAAFxAAAAAAAAAe0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXEAAAAAAAABcQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2946,
					1,
					"left_delete",
					null,
					"AQAAAG1BAAAAAAAAbUEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAbkEAAAAAAABuQQAAAAAAAAAAAAAAaINA"
				],
				[
					2948,
					1,
					"left_delete",
					null,
					"AQAAAGxBAAAAAAAAbEEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAbUEAAAAAAABtQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2967,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC5BAAAAAAAAL0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALkEAAAAAAAAuQQAAAAAAAAAAAAAAAPC/"
				],
				[
					2985,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHtAAAAAAAAAfEAAAAAAAAAAAAAAfEAAAAAAAACCQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe0AAAAAAAAB7QAAAAAAAAAAAAAAAAPC/"
				],
				[
					2986,
					1,
					"paste",
					null,
					"AQAAAIJAAAAAAAAAoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgkAAAAAAAACCQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2991,
					4,
					"right_delete",
					null,
					"BAAAAIdAAAAAAAAAh0AAAAAAAAABAAAAdIdAAAAAAAAAh0AAAAAAAAABAAAAaYdAAAAAAAAAh0AAAAAAAAABAAAAY4dAAAAAAAAAh0AAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAh0AAAAAAAACHQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2992,
					1,
					"insert",
					{
						"characters": "text"
					},
					"BAAAAIdAAAAAAAAAiEAAAAAAAAAAAAAAiEAAAAAAAACJQAAAAAAAAAAAAACJQAAAAAAAAIpAAAAAAAAAAAAAAIpAAAAAAAAAi0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAh0AAAAAAAACHQAAAAAAAAAAAAAAAAPC/"
				],
				[
					2993,
					1,
					"right_delete",
					null,
					"AQAAAItAAAAAAAAAi0AAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAi0AAAAAAAACLQAAAAAAAAAAAAAAAAPC/"
				],
				[
					3022,
					1,
					"left_delete",
					null,
					"AQAAABBBAAAAAAAAEEEAAAAAAAAeAAAAYXhpcy50ZXh0LnkgPSBlbGVtZW50X2JsYW5rKCks",
					"AQAAAAAAAAABAAAAEEEAAAAAAAAuQQAAAAAAAP///////+9/"
				],
				[
					3025,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAA9BAAAAAAAAD0EAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEEEAAAAAAAAQQQAAAAAAAAAAAAAAAPC/"
				],
				[
					3058,
					1,
					"right_delete",
					null,
					"AQAAAME2AAAAAAAAwTYAAAAAAAA6AAAACiAgcm0obGlzdD1scygpKQogIGxpYnJhcnkobWFncml0dHIpCiAgbGlicmFyeSh0aWR5dmVyc2UpCg",
					"AQAAAAAAAAABAAAA+zYAAAAAAADBNgAAAAAAAAAAAAAAAPC/"
				],
				[
					3077,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAABhBAAAAAAAAGUEAAAAAAAAAAAAAGUEAAAAAAAAZQQAAAAAAAAEAAAA4",
					"AQAAAAAAAAABAAAAGUEAAAAAAAAYQQAAAAAAAAAAAAAAAPC/"
				],
				[
					3091,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAABhBAAAAAAAAGUEAAAAAAAAAAAAAGUEAAAAAAAAZQQAAAAAAAAEAAAA0",
					"AQAAAAAAAAABAAAAGUEAAAAAAAAYQQAAAAAAAAAAAAAAAPC/"
				],
				[
					3115,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAD03AAAAAAAAPjcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPTcAAAAAAAA9NwAAAAAAAAAAAAAAAPC/"
				],
				[
					3116,
					1,
					"insert",
					{
						"characters": " q3_2"
					},
					"BQAAAD43AAAAAAAAPzcAAAAAAAAAAAAAPzcAAAAAAABANwAAAAAAAAAAAABANwAAAAAAAEE3AAAAAAAAAAAAAEE3AAAAAAAAQjcAAAAAAAAAAAAAQjcAAAAAAABDNwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPjcAAAAAAAA+NwAAAAAAAAAAAAAAAPC/"
				],
				[
					3122,
					1,
					"insert",
					{
						"characters": ".data$"
					},
					"BgAAAD83AAAAAAAAQDcAAAAAAAAAAAAAQDcAAAAAAABBNwAAAAAAAAAAAABBNwAAAAAAAEI3AAAAAAAAAAAAAEI3AAAAAAAAQzcAAAAAAAAAAAAAQzcAAAAAAABENwAAAAAAAAAAAABENwAAAAAAAEU3AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzcAAAAAAAA/NwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "R/mod_03_demographics.R",
			"settings":
			{
				"buffer_size": 5015,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEADAAAAAAAAQQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAwAAAAAAAEADAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABKAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAwAAAAAAAEEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"paste",
					null,
					"AQAAAEoDAAAAAAAAVAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAwAAAAAAAEoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBQAAAAAAAEwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABWBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBQAAAAAAAE0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAE4FAAAAAAAATgUAAAAAAAAIAAAAICAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWBQAAAAAAAFYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					2,
					"left_delete",
					null,
					"AgAAAE0FAAAAAAAATQUAAAAAAAABAAAACkwFAAAAAAAATAUAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBQAAAAAAAE4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					5,
					"left_delete",
					null,
					"BQAAAFMFAAAAAAAAUwUAAAAAAAABAAAAKVEFAAAAAAAAUQUAAAAAAAACAAAAICBPBQAAAAAAAE8FAAAAAAAAAgAAACAgTQUAAAAAAABNBQAAAAAAAAIAAAAgIEwFAAAAAAAATAUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUBQAAAAAAAFQFAAAAAAAAAAAAAABAVEA"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBQAAAAAAAEwFAAAAAAAAAAAAAAAQd0A"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABWBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBQAAAAAAAE0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"paste",
					null,
					"AQAAAFYFAAAAAAAARQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWBQAAAAAAAFYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"paste",
					null,
					"AQAAAEMFAAAAAAAAWAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBQAAAAAAAE0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"cut",
					null,
					"AQAAAEMFAAAAAAAAQwUAAAAAAAAVAAAAICAgICAgICBzaGlueTo6YnIoKSwK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNBQAAAAAAAE0FAAAAAAAAAAAAAACAVkA"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAE4FAAAAAAAAYwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBQAAAAAAAE4FAAAAAAAAAAAAAAAAAAA"
				],
				[
					91,
					1,
					"right_delete",
					null,
					"AQAAAB8HAAAAAAAAHwcAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfBwAAAAAAAB8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAB8HAAAAAAAAIAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfBwAAAAAAAB8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"left_delete",
					null,
					"AQAAAEoHAAAAAAAASgcAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLBwAAAAAAAEsHAAAAAAAAAAAAAABgdUA"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAEoHAAAAAAAASwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKBwAAAAAAAEoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAACsJAAAAAAAAKwkAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsCQAAAAAAACwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAACsJAAAAAAAALAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArCQAAAAAAACsJAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAFYJAAAAAAAAVgkAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXCQAAAAAAAFcJAAAAAAAAAAAAAABgdUA"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAFYJAAAAAAAAVwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWCQAAAAAAAFYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGIJAAAAAAAAYwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiCQAAAAAAAGIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAGMJAAAAAAAAZAkAAAAAAAAAAAAAZAkAAAAAAABqCQAAAAAAAAAAAABkCQAAAAAAAGQJAAAAAAAABgAAACAgICAgIGQJAAAAAAAAbAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjCQAAAAAAAGMJAAAAAAAAAAAAAAAA8L8"
				],
				[
					130,
					1,
					"paste",
					null,
					"AQAAAGwJAAAAAAAAbwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsCQAAAAAAAGwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAGEJAAAAAAAAYwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhCQAAAAAAAGEJAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"right_delete",
					null,
					"AQAAADcLAAAAAAAANwsAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3CwAAAAAAADcLAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAADcLAAAAAAAAOAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3CwAAAAAAADcLAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"left_delete",
					null,
					"AQAAAGILAAAAAAAAYgsAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjCwAAAAAAAGMLAAAAAAAAAAAAAABgdUA"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGILAAAAAAAAYwsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiCwAAAAAAAGILAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					1,
					"left_delete",
					null,
					"AQAAAHALAAAAAAAAcAsAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxCwAAAAAAAHELAAAAAAAAAAAAAABgdUA"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHALAAAAAAAAcQsAAAAAAAAAAAAAcQsAAAAAAAB5CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwCwAAAAAAAHALAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"left_delete",
					null,
					"AQAAAHcLAAAAAAAAdwsAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5CwAAAAAAAHkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAHcLAAAAAAAAeAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3CwAAAAAAAHcLAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAIDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADDQAAAAAAAAMNAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAgNAAAAAAAACQ0AAAAAAAAAAAAACQ0AAAAAAAANDQAAAAAAAAAAAAAEDQAAAAAAAAQNAAAAAAAABAAAACAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIDQAAAAAAAAgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"paste",
					null,
					"AQAAAAkNAAAAAAAAyQ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJDQAAAAAAAAkNAAAAAAAAAAAAAAAA8L8"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAMkNAAAAAAAAyg0AAAAAAAAAAAAAyg0AAAAAAADODQAAAAAAAAAAAADODQAAAAAAAM8NAAAAAAAAAAAAAM8NAAAAAAAA0w0AAAAAAAAAAAAAyg0AAAAAAADKDQAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJDQAAAAAAAMkNAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"paste",
					null,
					"AQAAAM8NAAAAAAAAjw4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPDQAAAAAAAM8NAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAI8OAAAAAAAAkA4AAAAAAAAAAAAAkA4AAAAAAACUDgAAAAAAAAAAAACUDgAAAAAAAJUOAAAAAAAAAAAAAJUOAAAAAAAAmQ4AAAAAAAAAAAAAkA4AAAAAAACQDgAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPDgAAAAAAAI8OAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"paste",
					null,
					"AQAAAJUOAAAAAAAAVQ8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVDgAAAAAAAJUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFUPAAAAAAAAVg8AAAAAAAAAAAAAVg8AAAAAAABaDwAAAAAAAAAAAABaDwAAAAAAAFsPAAAAAAAAAAAAAFsPAAAAAAAAXw8AAAAAAAAAAAAAVg8AAAAAAABWDwAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVDwAAAAAAAFUPAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAFsPAAAAAAAAGxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbDwAAAAAAAFsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					231,
					1,
					"alignment",
					null,
					"CAAAAA0NAAAAAAAADQ0AAAAAAAAAAAAAcQ0AAAAAAAB1DQAAAAAAAAAAAADXDQAAAAAAANcNAAAAAAAAAAAAADsOAAAAAAAAPw4AAAAAAAAAAAAAoQ4AAAAAAAChDgAAAAAAAAAAAAAFDwAAAAAAAAkPAAAAAAAAAAAAAGsPAAAAAAAAaw8AAAAAAAAAAAAAzw8AAAAAAADTDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAgAAAANDQAAAAAAAA0NAAAAAAAAAAAAAAAA8L9xDQAAAAAAAHENAAAAAAAAAAAAAAAA8L/TDQAAAAAAANMNAAAAAAAAAAAAAAAA8L83DgAAAAAAADcOAAAAAAAAAAAAAAAA8L+ZDgAAAAAAAJkOAAAAAAAAAAAAAAAA8L/9DgAAAAAAAP0OAAAAAAAAAAAAAAAA8L9fDwAAAAAAAF8PAAAAAAAAAAAAAAAA8L/DDwAAAAAAAMMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					233,
					1,
					"left_delete",
					null,
					"CAAAANEPAAAAAAAA0Q8AAAAAAAACAAAAICBpDwAAAAAAAGkPAAAAAAAAAgAAACAgBw8AAAAAAAAHDwAAAAAAAAIAAAAgIJ8OAAAAAAAAnw4AAAAAAAACAAAAICA9DgAAAAAAAD0OAAAAAAAAAgAAACAg1Q0AAAAAAADVDQAAAAAAAAIAAAAgIHMNAAAAAAAAcw0AAAAAAAACAAAAICALDQAAAAAAAAsNAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAgAAAANDQAAAAAAAA0NAAAAAAAAAAAAAAAA8L91DQAAAAAAAHUNAAAAAAAAAAAAAAAA8L/XDQAAAAAAANcNAAAAAAAAAAAAAAAA8L8/DgAAAAAAAD8OAAAAAAAAAAAAAAAA8L+hDgAAAAAAAKEOAAAAAAAAAAAAAAAA8L8JDwAAAAAAAAkPAAAAAAAAAAAAAAAA8L9rDwAAAAAAAGsPAAAAAAAAAAAAAAAA8L/TDwAAAAAAANMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"CAAAAMEPAAAAAAAAwQ8AAAAAAAACAAAAICBbDwAAAAAAAFsPAAAAAAAAAgAAACAg+w4AAAAAAAD7DgAAAAAAAAIAAAAgIJUOAAAAAAAAlQ4AAAAAAAACAAAAICA1DgAAAAAAADUOAAAAAAAAAgAAACAgzw0AAAAAAADPDQAAAAAAAAIAAAAgIG8NAAAAAAAAbw0AAAAAAAACAAAAICAJDQAAAAAAAAkNAAAAAAAAAgAAACAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAgAAAALDQAAAAAAAAsNAAAAAAAAAAAAAAAA8L9xDQAAAAAAAHENAAAAAAAAAAAAAAAA8L/RDQAAAAAAANENAAAAAAAAAAAAAAAA8L83DgAAAAAAADcOAAAAAAAAAAAAAAAA8L+XDgAAAAAAAJcOAAAAAAAAAAAAAAAA8L/9DgAAAAAAAP0OAAAAAAAAAAAAAAAA8L9dDwAAAAAAAF0PAAAAAAAAAAAAAAAA8L/DDwAAAAAAAMMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"left_delete",
					null,
					"BAAAAL8PAAAAAAAAvw8AAAAAAAABAAAAMf0OAAAAAAAA/Q4AAAAAAAABAAAAMTsOAAAAAAAAOw4AAAAAAAABAAAAMXkNAAAAAAAAeQ0AAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAQAAAB6DQAAAAAAAHoNAAAAAAAAAAAAAAAA8L88DgAAAAAAADwOAAAAAAAAAAAAAAAA8L/+DgAAAAAAAP4OAAAAAAAAAAAAAAAA8L/ADwAAAAAAAMAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					251,
					1,
					"text_pastry_step",
					{
						"text": "2"
					},
					"BAAAAHkNAAAAAAAAeg0AAAAAAAAAAAAAOw4AAAAAAAA8DgAAAAAAAAAAAAD9DgAAAAAAAP4OAAAAAAAAAAAAAL8PAAAAAAAAwA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAQAAAB5DQAAAAAAAHkNAAAAAAAAAAAAAAAA8L86DgAAAAAAADoOAAAAAAAAAAAAAAAA8L/7DgAAAAAAAPsOAAAAAAAAAAAAAAAA8L+8DwAAAAAAALwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"BAAAAFsPAAAAAAAAWw8AAAAAAAABAAAAMZkOAAAAAAAAmQ4AAAAAAAABAAAAMdcNAAAAAAAA1w0AAAAAAAABAAAAMRUNAAAAAAAAFQ0AAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAQAAAAWDQAAAAAAABYNAAAAAAAAAAAAAAAA8L/YDQAAAAAAANgNAAAAAAAAAAAAAAAA8L+aDgAAAAAAAJoOAAAAAAAAAAAAAAAA8L9cDwAAAAAAAFwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					269,
					1,
					"text_pastry_step",
					{
						"text": "2"
					},
					"BAAAABUNAAAAAAAAFg0AAAAAAAAAAAAA1w0AAAAAAADYDQAAAAAAAAAAAACZDgAAAAAAAJoOAAAAAAAAAAAAAFsPAAAAAAAAXA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAQAAAAVDQAAAAAAABUNAAAAAAAAAAAAAAAA8L/WDQAAAAAAANYNAAAAAAAAAAAAAAAA8L+XDgAAAAAAAJcOAAAAAAAAAAAAAAAA8L9YDwAAAAAAAFgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"left_delete",
					null,
					"AgAAALsNAAAAAAAAuw0AAAAAAAABAAAANFMNAAAAAAAAUw0AAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAABUDQAAAAAAAFQNAAAAAAAAAAAAAAAA8L+8DQAAAAAAALwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					280,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAALoNAAAAAAAAuw0AAAAAAAAAAAAAUw0AAAAAAABUDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAABTDQAAAAAAAFMNAAAAAAAAAAAAAAAA8L+6DQAAAAAAALoNAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"left_delete",
					null,
					"AgAAAH0OAAAAAAAAfQ4AAAAAAAABAAAANBUOAAAAAAAAFQ4AAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAWDgAAAAAAABYOAAAAAAAAAAAAAABgdUB+DgAAAAAAAH4OAAAAAAAAAAAAAADAeEA"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AgAAAHwOAAAAAAAAfQ4AAAAAAAAAAAAAFQ4AAAAAAAAWDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAVDgAAAAAAABUOAAAAAAAAAAAAAAAA8L98DgAAAAAAAHwOAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AgAAAD8PAAAAAAAAPw8AAAAAAAABAAAANNcOAAAAAAAA1w4AAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAADYDgAAAAAAANgOAAAAAAAAAAAAAABgdUBADwAAAAAAAEAPAAAAAAAAAAAAAADAeEA"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AgAAAD4PAAAAAAAAPw8AAAAAAAAAAAAA1w4AAAAAAADYDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAADXDgAAAAAAANcOAAAAAAAAAAAAAAAA8L8+DwAAAAAAAD4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BgAAAAkQAAAAAAAACxAAAAAAAAAAAAAA2g8AAAAAAADcDwAAAAAAAAAAAACzDwAAAAAAALUPAAAAAAAAAAAAAKsPAAAAAAAArQ8AAAAAAAAAAAAAeA8AAAAAAAB6DwAAAAAAAAAAAABPDwAAAAAAAFEPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPDwAAAAAAAAsQAAAAAAAA////////738"
				],
				[
					305,
					1,
					"right_delete",
					null,
					"AQAAABcQAAAAAAAAFxAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXEAAAAAAAABcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcQAAAAAAAAGBAAAAAAAAAAAAAAGBAAAAAAAAAcEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXEAAAAAAAABcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					314,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAABgQAAAAAAAAGBAAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcEAAAAAAAABwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"EwAAAHcLAAAAAAAAeQsAAAAAAAAAAAAAbQsAAAAAAABvCwAAAAAAAAAAAABDCwAAAAAAAEULAAAAAAAAAAAAABgLAAAAAAAAGgsAAAAAAAAAAAAABAsAAAAAAAAGCwAAAAAAAAAAAAD2CgAAAAAAAPgKAAAAAAAAAAAAAOgKAAAAAAAA6goAAAAAAAAAAAAAzwoAAAAAAADRCgAAAAAAAAAAAACwCgAAAAAAALIKAAAAAAAAAAAAAJEKAAAAAAAAkwoAAAAAAAAAAAAAbAoAAAAAAABuCgAAAAAAAAAAAABHCgAAAAAAAEkKAAAAAAAAAAAAACwKAAAAAAAALgoAAAAAAAAAAAAAEQoAAAAAAAATCgAAAAAAAAAAAADiCQAAAAAAAOQJAAAAAAAAAAAAALoJAAAAAAAAvAkAAAAAAAAAAAAAngkAAAAAAACgCQAAAAAAAAAAAACBCQAAAAAAAIMJAAAAAAAAAAAAAGwJAAAAAAAAbgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuCQAAAAAAAHgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAJsLAAAAAAAAmwsAAAAAAAACAAAAIyA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeCwAAAAAAAJ4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					392,
					1,
					"left_delete",
					null,
					"AQAAAGQJAAAAAAAAZAkAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlCQAAAAAAAGUJAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"EgAAAI4LAAAAAAAAjgsAAAAAAAACAAAAIyBiCwAAAAAAAGILAAAAAAAAAgAAACMgNQsAAAAAAAA1CwAAAAAAAAIAAAAjIB8LAAAAAAAAHwsAAAAAAAACAAAAIyAPCwAAAAAAAA8LAAAAAAAAAgAAACMg/woAAAAAAAD/CgAAAAAAAAIAAAAjIOQKAAAAAAAA5AoAAAAAAAACAAAAIyDDCgAAAAAAAMMKAAAAAAAAAgAAACMgogoAAAAAAACiCgAAAAAAAAIAAAAjIHsKAAAAAAAAewoAAAAAAAACAAAAIyBUCgAAAAAAAFQKAAAAAAAAAgAAACMgNwoAAAAAAAA3CgAAAAAAAAIAAAAjIBoKAAAAAAAAGgoAAAAAAAACAAAAIyDpCQAAAAAAAOkJAAAAAAAAAgAAACMgvwkAAAAAAAC/CQAAAAAAAAIAAAAjIKEJAAAAAAAAoQkAAAAAAAACAAAAIyCCCQAAAAAAAIIJAAAAAAAAAgAAACMgawkAAAAAAABrCQAAAAAAAAIAAAAjIA",
					"AQAAAAAAAAABAAAAkwsAAAAAAABlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BgAAABIQAAAAAAAAEhAAAAAAAAACAAAAIyDhDwAAAAAAAOEPAAAAAAAAAgAAACMguA8AAAAAAAC4DwAAAAAAAAIAAAAjIK4PAAAAAAAArg8AAAAAAAACAAAAIyB5DwAAAAAAAHkPAAAAAAAAAgAAACMgTg8AAAAAAABODwAAAAAAAAIAAAAjIA",
					"AQAAAAAAAAABAAAAFhAAAAAAAABJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAAJgPAAAAAAAAmA8AAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAmQ8AAAAAAACZDwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAJgPAAAAAAAAmQ8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmA8AAAAAAACYDwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAAAQAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABEAAAAAAAAAEAAAA0",
					"AQAAAAAAAAABAAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGQJAAAAAAAAZQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAkAAAAAAABkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAsQAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAABEQAAAAAAAAAAAAABEQAAAAAAAAFRAAAAAAAAAAAAAADBAAAAAAAAAMEAAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"paste",
					null,
					"AQAAABEQAAAAAAAA0RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERAAAAAAAAAREAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"unindent",
					null,
					"AQAAAA0QAAAAAAAADRAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAExAAAAAAAAATEAAAAAAAAAAAAAAAAEtA"
				],
				[
					111,
					1,
					"unindent",
					null,
					"AQAAAA0QAAAAAAAADRAAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAERAAAAAAAAAREAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AgAAAIEQAAAAAAAAgRAAAAAAAAABAAAANR0QAAAAAAAAHRAAAAAAAAABAAAANQ",
					"AQAAAAAAAAACAAAAHhAAAAAAAAAeEAAAAAAAAAAAAAAAAPC/ghAAAAAAAACCEAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AgAAAIAQAAAAAAAAgRAAAAAAAAAAAAAAHRAAAAAAAAAeEAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAHRAAAAAAAAAdEAAAAAAAAAAAAAAAAPC/gBAAAAAAAACAEAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"left_delete",
					null,
					"AQAAAFsQAAAAAAAAWxAAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAXBAAAAAAAABcEAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAFsQAAAAAAAAXBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxAAAAAAAABbEAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAMMQAAAAAAAAwxAAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAMMQAAAAAAAAxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxAAAAAAAADDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"left_delete",
					null,
					"AQAAAMMQAAAAAAAAwxAAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAMMQAAAAAAAAxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxAAAAAAAADDEAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHALAAAAAAAAcQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAsAAAAAAABwCwAAAAAAAAAAAAAAEHdA"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHELAAAAAAAAcgsAAAAAAAAAAAAAcgsAAAAAAAB6CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQsAAAAAAABxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"paste",
					null,
					"AQAAAHoLAAAAAAAAfA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegsAAAAAAAB6CwAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AgAAAEMNAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABEDQAAAAAAAAEAAAA0",
					"AQAAAAAAAAABAAAAQw0AAAAAAABEDQAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"left_delete",
					null,
					"AQAAAG4NAAAAAAAAbg0AAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAbw0AAAAAAABvDQAAAAAAAAAAAAAAYHVA"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAG4NAAAAAAAAbw0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbg0AAAAAAABuDQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				],
				[
					"Packages/User/LaTeX.sublime-build",
					""
				],
				[
					"Packages/User/LaTeX.sublime-build",
					"Build Bibliography"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"PdfLaTeX"
			]
		],
		[
			[
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/MarkdownPreview/Markdown.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Markdown.sublime-build",
					""
				],
				[
					"Packages/SendCode/support/R - Source File.sublime-build",
					""
				],
				[
					"Packages/User/pandoc.md2pdf.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R Markdown.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"term",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"swap",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"git rebas",
				"git: rebase"
			],
			[
				"git sta",
				"git: status"
			],
			[
				"set syntax R",
				"Set Syntax: R"
			],
			[
				"git confi",
				"Set Syntax: Git Config"
			],
			[
				"remote",
				"github: set remote for integration"
			],
			[
				"git stat",
				"git: status"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"sort l",
				"Sort Lines"
			],
			[
				"syntax: R",
				"Set Syntax: R"
			],
			[
				"soert",
				"Set Syntax: Property List (XML)"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"duplica",
				"File: Duplicate"
			],
			[
				"format r",
				"R-Box: Format Selected Code"
			],
			[
				"ter",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"git pus",
				"git: push"
			],
			[
				"add remote",
				"git: remote add"
			],
			[
				"set remote",
				"github: set remote for integration"
			],
			[
				"re",
				"Rename File"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"swa",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"git st",
				"git: status"
			],
			[
				"git clo",
				"git: clone"
			],
			[
				"send co",
				"SendCode: Choose Program"
			],
			[
				"R IDE",
				"Preferences: R-IDE Settings"
			],
			[
				"view toggl",
				"View: Toggle Tabs"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"title",
				"Convert Case: Title Case"
			],
			[
				"swpa",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"Rmkar",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"git remote a",
				"git: remote add"
			],
			[
				"git remove",
				"git: remote remove"
			],
			[
				"git add remote",
				"git: remote add"
			],
			[
				"git remote add",
				"git: remote add"
			],
			[
				"git remote",
				"github: set remote for integration"
			],
			[
				"git",
				"git: commit"
			],
			[
				"git remo",
				"git: remote remove"
			],
			[
				"git remode",
				"git: remote add"
			],
			[
				"quote",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"git status",
				"git: status"
			],
			[
				"git ",
				"git: commit"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"R-ID",
				"Preferences: R-IDE Settings"
			],
			[
				"LSP",
				"LSP: Enable Language Server Globally"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"file dupl",
				"File: Duplicate"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"move",
				"File: Move"
			],
			[
				"MOVE",
				"File: Move"
			],
			[
				"syntax RM",
				"Set Syntax: R Markdown"
			],
			[
				"build",
				"Build With: knitr - Run"
			],
			[
				"syntax rm",
				"Set Syntax: R Markdown"
			],
			[
				"buil",
				"Build: New Build System"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"syntax Rmd",
				"Set Syntax: R Markdown"
			],
			[
				"file move",
				"File: Move"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"syntax HT",
				"Set Syntax: HTML"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"wrap",
				"Wrap at Ruler"
			],
			[
				"bla",
				"Sublack: Format file"
			],
			[
				"black",
				"Sublack: Format file"
			],
			[
				"sub",
				"Sublack: Format file"
			],
			[
				"Sublack",
				"Sublack: Format file"
			],
			[
				"package contr",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"latex",
				"LaTeXTools: Check system"
			],
			[
				"preferences",
				"Preferences: Settings"
			],
			[
				"latext",
				"LaTeXTools: Check system"
			],
			[
				"file ren",
				"File: Rename"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"uit ",
				"UI: Select Theme"
			],
			[
				"package control i",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"Title",
				"Convert Case: Title Case"
			],
			[
				"syntax pyt",
				"Set Syntax: Python"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"terminus tab",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"package sync",
				"Package Syncing: Disable Syncing"
			],
			[
				"color sch",
				"UI: Select Color Scheme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 415.0,
		"history":
		[
			"exit()",
			"exit",
			"os.getcwd()",
			"import os",
			"which python"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts"
	],
	"file_history":
	[
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_03_demographics_fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_08_compare.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/app_ui.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/03_demographics.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/utils_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_02_selection_fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/app_server.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/14_modelTopics.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/01_wrangleData.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/01_wrangleData ACG copy.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/app_server.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/06_intent_of_returning.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_01_welcome.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_05_attachment_fct_helpers.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/app_ui.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_06_return_fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_04_experience_fct_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_06_return.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_05_attachment.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_03_demographics.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_04_experience.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_02_selection.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/05_attachment.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_07_senseofus.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/04_experience.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_09_acknowledgement.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw/analysis_text.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/02_selection.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw/survey_data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/04_scratch.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/plot_helpers.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/03_deploy.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/run_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/codecov.yml",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/querido-diario-data-processing/index/elasticsearch.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat/test-app.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/functions.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/fct_helpers.R",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Management/translated_files.csv",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Scripts/03_processTranscripts.py",
		"/Users/aassumpcao/Dropbox (Personal)/Religion and Politics Translation 2020/Scripts/05_populateData.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/.gitignore",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/dev/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/untitledsurv",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data-raw/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/dev/01_start.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/dev/01_start.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/ColombiaDashboard/data-raw/untitled",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat/test-golem-recommended.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey_data.rda",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/.Rhistory",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/data/survey_data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/tests/testthat.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/mod_08_acknowledgement.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/mod_input.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 CNJ Inova/App/R/mod_geral.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/README.Rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/dev copy/02_dev.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/00_main.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/00_replication.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/07_text.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/scripts/00_replication.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/R/run_app.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults/app.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/scratch/01_accessAPI.py",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2020 Querido Diário/querido-diario-data-processing/data_extraction/text_extraction.py",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_extraction.sh",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/05_sourceOccupations.py",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2021 Políticos Litigantes/manuscript/01 Folha de Rosto.docx",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/tools_final01.csv",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_final/tools_focal.csv",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/A-01/pageimage_04.png",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/source_tools_A.txt",
		"/Users/aassumpcao/Dropbox (CID)/DOT/aassumpcao/proj/2020-08-01 - Tools Extraction and Survey/tools_jobfamilyseries/A-01/pageimage_07.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/manuscript/Analysis.rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/11_analyzeText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot40_identity.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot31_reasons_for_return.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/plot41_wall.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/graphs/q3_6_languages.png",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/08_conjoint.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/10_translateText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/requirements.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2018 Discretion and corruption/discretionperformance/analysis/12-DiscretionCorruption-Analysis.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Research/2019 Electoral Crime/scripts/11_tse_analysis.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/survey_data.csv",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Q3_2-Q3_5_Sankey diagram.do",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/colombia.txt",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/test.txt",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/data-processed/colombia_final.txt",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/data.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data-raw/data.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/code_sample.rmd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/assumpcao.rmd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/functions.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/tests/testthat/test-CJIL.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.gitignore",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/create_package.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.Rproj.user/0FBC00F5/pcs/workbench-pane.pper",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/README.md",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/tests/testthat.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/data_XXX.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/R/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/man/nccourts.Rd",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/data-raw/nccourts.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/data-raw/process.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL_draft/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/LICENSE.md",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/CJIL.Rproj",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/CJIL/.Rproj.user/shared/notebooks/paths",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/functions.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/DESCRIPTION",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/replication_script.R",
		"/Users/aassumpcao/Dropbox (Personal)/Documents/Jobs/2021 Criminal Justice Innovation Lab UNC/UNCtask/R/data.R",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/Analysis.rmd",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/python_environment.sh",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/12_analyzeText.py",
		"/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/XX_analyzeText.py",
		"/Users/aassumpcao/nltk_data/corpora/stopwords/spanish"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"05",
			",",
			"question",
			"where",
			"q3_4",
			"3_8",
			"=",
			",",
			"plot15_sliced",
			"data",
			"plot15",
			"education",
			"3_4",
			"plot",
			"text01",
			"output$",
			",",
			"                                                                 ",
			",",
			"\"",
			"            \n",
			"\",            ",
			"school",
			"            \n",
			"                ",
			"list",
			"str_detect",
			"plot06",
			"perc_total",
			"q3_5",
			"            ",
			"   ",
			"  ",
			"\"",
			"q3_4",
			"new_city",
			"city.y",
			"q3_6",
			"city",
			",",
			"q3_2",
			"city_new",
			"str_detect",
			"str",
			"= '0",
			"_",
			"               ",
			"               \n",
			"                                        ",
			"\"",
			"_ui(",
			"_ui",
			"q6_2",
			"    ",
			"module",
			"\"",
			"include_comparison",
			"mutate",
			"        ",
			",",
			"       ",
			",",
			"       ",
			"alpha = .85",
			"alpha = .3",
			",",
			"n",
			"q3_4",
			"mod_",
			"mutate",
			"d%",
			"%",
			"stringr::str_pad(",
			", ",
			",",
			"\"",
			"'{                  ",
			"          ",
			"\"",
			"str_detect",
			" ifelse(",
			"== 'All', NULL, input$country",
			"input$country0",
			"input$country01",
			"c('Spain', 'United States')",
			"'plot_q2_3'",
			"ns",
			"input",
			"drop_na",
			"abs",
			"ab",
			"(",
			"Residency",
			"50",
			"100",
			".data",
			"Korea",
			"Iran",
			".env",
			"p01",
			"(",
			"y",
			"x_label",
			"@param",
			"str_split",
			"dplyr::unnest",
			"group",
			"question",
			"prepared_data",
			"prepared_",
			"prepare"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "dev/run_dev.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 318,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								318
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"utils",
								"base",
								"stats",
								"graphics",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 28,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.repo_path": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/DiasporaSurveyResults",
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617194323.63,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/01_wrangleData.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39270,
						"regions":
						{
						},
						"selection":
						[
							[
								10235,
								10235
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"tidyverse_logo\t{tidyverse}",
									"tidyverse_logo"
								],
								[
									"tidyverse_update\t{tidyverse}",
									"tidyverse_update"
								],
								[
									"tidyverse_conflicts\t{tidyverse}",
									"tidyverse_conflicts"
								],
								[
									"tidyverse_packages\t{tidyverse}",
									"tidyverse_packages"
								],
								[
									"tidyverse_deps\t{tidyverse}",
									"tidyverse_deps"
								],
								[
									"tidyverse_sitrep\t{tidyverse}",
									"tidyverse_sitrep"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"multiply_by_matrix\t{magrittr}",
									"multiply_by_matrix"
								],
								[
									"raise_to_power\t{magrittr}",
									"raise_to_power"
								],
								[
									"inset2\t{magrittr}",
									"inset2"
								],
								[
									"set_attributes\t{magrittr}",
									"set_attributes"
								],
								[
									"extract\t{magrittr}",
									"extract"
								],
								[
									"divide_by_int\t{magrittr}",
									"divide_by_int"
								],
								[
									"is_less_than\t{magrittr}",
									"is_less_than"
								],
								[
									"undebug_fseq\t{magrittr}",
									"undebug_fseq"
								],
								[
									"multiply_by\t{magrittr}",
									"multiply_by"
								],
								[
									"or\t{magrittr}",
									"or"
								],
								[
									"use_series\t{magrittr}",
									"use_series"
								],
								[
									"set_rownames\t{magrittr}",
									"set_rownames"
								],
								[
									"equals\t{magrittr}",
									"equals"
								],
								[
									"not\t{magrittr}",
									"not"
								],
								[
									"add\t{magrittr}",
									"add"
								],
								[
									"inset\t{magrittr}",
									"inset"
								],
								[
									"and\t{magrittr}",
									"and"
								],
								[
									"debug_pipe\t{magrittr}",
									"debug_pipe"
								],
								[
									"divide_by\t{magrittr}",
									"divide_by"
								],
								[
									"debug_fseq\t{magrittr}",
									"debug_fseq"
								],
								[
									"set_names\t{magrittr}",
									"set_names"
								],
								[
									"mod\t{magrittr}",
									"mod"
								],
								[
									"set_attr\t{magrittr}",
									"set_attr"
								],
								[
									"extract2\t{magrittr}",
									"extract2"
								],
								[
									"set_colnames\t{magrittr}",
									"set_colnames"
								],
								[
									"pas\t{magrittr}",
									"pas"
								],
								[
									"subtract\t{magrittr}",
									"subtract"
								],
								[
									"freduce\t{magrittr}",
									"freduce"
								],
								[
									"is_weakly_less_than\t{magrittr}",
									"is_weakly_less_than"
								],
								[
									"is_in\t{magrittr}",
									"is_in"
								],
								[
									"is_weakly_greater_than\t{magrittr}",
									"is_weakly_greater_than"
								],
								[
									"set_class\t{magrittr}",
									"set_class"
								],
								[
									"functions\t{magrittr}",
									"functions"
								],
								[
									"pipe_nested\t{magrittr}",
									"pipe_nested"
								],
								[
									"pipe_eager_lexical\t{magrittr}",
									"pipe_eager_lexical"
								],
								[
									"is_greater_than\t{magrittr}",
									"is_greater_than"
								],
								[
									"pipe_lazy_masking\t{magrittr}",
									"pipe_lazy_masking"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"tidyverse",
								"utils",
								"base",
								"stats",
								"graphics",
								"magrittr",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 683,
								"count": 1375,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										10235,
										10236
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										10227,
										10228
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617050516.82,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3887.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dev/01_start.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1723,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"utils",
								"base",
								"stats",
								"graphics",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 143,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617065973.63,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 242.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "dev/02_dev.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2327,
						"regions":
						{
						},
						"selection":
						[
							[
								1106,
								1106
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"utils",
								"base",
								"stats",
								"graphics",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 10,
								"count": 146,
								"modified": true,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617066887.56,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/aassumpcao/Dropbox (CID)/Colombian Diaspora/survey/Analysis/scripts/03_demographics.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12173,
						"regions":
						{
						},
						"selection":
						[
							[
								11532,
								11477
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"tidyverse_logo\t{tidyverse}",
									"tidyverse_logo"
								],
								[
									"tidyverse_update\t{tidyverse}",
									"tidyverse_update"
								],
								[
									"tidyverse_conflicts\t{tidyverse}",
									"tidyverse_conflicts"
								],
								[
									"tidyverse_packages\t{tidyverse}",
									"tidyverse_packages"
								],
								[
									"tidyverse_deps\t{tidyverse}",
									"tidyverse_deps"
								],
								[
									"tidyverse_sitrep\t{tidyverse}",
									"tidyverse_sitrep"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"multiply_by_matrix\t{magrittr}",
									"multiply_by_matrix"
								],
								[
									"raise_to_power\t{magrittr}",
									"raise_to_power"
								],
								[
									"inset2\t{magrittr}",
									"inset2"
								],
								[
									"set_attributes\t{magrittr}",
									"set_attributes"
								],
								[
									"extract\t{magrittr}",
									"extract"
								],
								[
									"divide_by_int\t{magrittr}",
									"divide_by_int"
								],
								[
									"is_less_than\t{magrittr}",
									"is_less_than"
								],
								[
									"undebug_fseq\t{magrittr}",
									"undebug_fseq"
								],
								[
									"multiply_by\t{magrittr}",
									"multiply_by"
								],
								[
									"or\t{magrittr}",
									"or"
								],
								[
									"use_series\t{magrittr}",
									"use_series"
								],
								[
									"set_rownames\t{magrittr}",
									"set_rownames"
								],
								[
									"equals\t{magrittr}",
									"equals"
								],
								[
									"not\t{magrittr}",
									"not"
								],
								[
									"add\t{magrittr}",
									"add"
								],
								[
									"inset\t{magrittr}",
									"inset"
								],
								[
									"and\t{magrittr}",
									"and"
								],
								[
									"debug_pipe\t{magrittr}",
									"debug_pipe"
								],
								[
									"divide_by\t{magrittr}",
									"divide_by"
								],
								[
									"debug_fseq\t{magrittr}",
									"debug_fseq"
								],
								[
									"set_names\t{magrittr}",
									"set_names"
								],
								[
									"mod\t{magrittr}",
									"mod"
								],
								[
									"set_attr\t{magrittr}",
									"set_attr"
								],
								[
									"extract2\t{magrittr}",
									"extract2"
								],
								[
									"set_colnames\t{magrittr}",
									"set_colnames"
								],
								[
									"pas\t{magrittr}",
									"pas"
								],
								[
									"subtract\t{magrittr}",
									"subtract"
								],
								[
									"freduce\t{magrittr}",
									"freduce"
								],
								[
									"is_weakly_less_than\t{magrittr}",
									"is_weakly_less_than"
								],
								[
									"is_in\t{magrittr}",
									"is_in"
								],
								[
									"is_weakly_greater_than\t{magrittr}",
									"is_weakly_greater_than"
								],
								[
									"set_class\t{magrittr}",
									"set_class"
								],
								[
									"functions\t{magrittr}",
									"functions"
								],
								[
									"pipe_nested\t{magrittr}",
									"pipe_nested"
								],
								[
									"pipe_eager_lexical\t{magrittr}",
									"pipe_eager_lexical"
								],
								[
									"is_greater_than\t{magrittr}",
									"is_greater_than"
								],
								[
									"pipe_lazy_masking\t{magrittr}",
									"pipe_lazy_masking"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"tidyverse",
								"utils",
								"base",
								"stats",
								"graphics",
								"magrittr",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 0,
								"count": 675,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										11578,
										11579
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										11471,
										11472
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": false,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617149657.89,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 6815.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 5,
					"file": "R/mod_03_demographics_fct_helpers.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16749,
						"regions":
						{
						},
						"selection":
						[
							[
								14149,
								14149
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"utils",
								"base",
								"stats",
								"graphics",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 2046,
								"count": 816,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_complete_triggers":
							[
								{
									"characters": "\\",
									"selector": "text.tex.latex"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14153,
										14154
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										14118,
										14119
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"sftp_duplicate_views": 0,
							"sorttabs_lastactivated": 1617194914.71,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7949.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "R/mod_03_demographics.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5015,
						"regions":
						{
						},
						"selection":
						[
							[
								3007,
								3007
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"extends\t{methods}",
									"extends"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".debugMethod\t{methods}",
									".debugMethod"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									".isMethodDebugged\t{methods}",
									".isMethodDebugged"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".TraceWithMethods\t{methods}",
									".TraceWithMethods"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".undebugMethod\t{methods}",
									".undebugMethod"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"CRAN.packages\t{utils}",
									"CRAN.packages"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"check_tzones\t{base}",
									"check_tzones"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									".methodsNamespace\t{base}",
									".methodsNamespace"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"CJIL\tInstalled Package",
									"CJIL"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"DiasporaSurveyResults\tInstalled Package",
									"DiasporaSurveyResults"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"Rttf2pt1\tInstalled Package",
									"Rttf2pt1"
								],
								[
									"airports\tInstalled Package",
									"airports"
								],
								[
									"alluvial\tInstalled Package",
									"alluvial"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"attempt\tInstalled Package",
									"attempt"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bs4Dash\tInstalled Package",
									"bs4Dash"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"cherryblossom\tInstalled Package",
									"cherryblossom"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"darkstudio\tInstalled Package",
									"darkstudio"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dichromat\tInstalled Package",
									"dichromat"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dockerfiler\tInstalled Package",
									"dockerfiler"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"egg\tInstalled Package",
									"egg"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"extrafont\tInstalled Package",
									"extrafont"
								],
								[
									"extrafontdb\tInstalled Package",
									"extrafontdb"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"feather\tInstalled Package",
									"feather"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"fresh\tInstalled Package",
									"fresh"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"fuzzyjoin\tInstalled Package",
									"fuzzyjoin"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geobr\tInstalled Package",
									"geobr"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"ggalluvial\tInstalled Package",
									"ggalluvial"
								],
								[
									"ggfittext\tInstalled Package",
									"ggfittext"
								],
								[
									"ggforce\tInstalled Package",
									"ggforce"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggwaffle\tInstalled Package",
									"ggwaffle"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"golem\tInstalled Package",
									"golem"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"gridBase\tInstalled Package",
									"gridBase"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"janitor\tInstalled Package",
									"janitor"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lex\tInstalled Package",
									"lex"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"lmtest\tInstalled Package",
									"lmtest"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"modelr\tInstalled Package",
									"modelr"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"openintro\tInstalled Package",
									"openintro"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"permute\tInstalled Package",
									"permute"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"repr\tInstalled Package",
									"repr"
								],
								[
									"reprex\tInstalled Package",
									"reprex"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"servr\tInstalled Package",
									"servr"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"shades\tInstalled Package",
									"shades"
								],
								[
									"shinipsum\tInstalled Package",
									"shinipsum"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"shinyFeedback\tInstalled Package",
									"shinyFeedback"
								],
								[
									"shinycssloaders\tInstalled Package",
									"shinycssloaders"
								],
								[
									"shinythemes\tInstalled Package",
									"shinythemes"
								],
								[
									"snakecase\tInstalled Package",
									"snakecase"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"stringdist\tInstalled Package",
									"stringdist"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"thematic\tInstalled Package",
									"thematic"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tidyverse\tInstalled Package",
									"tidyverse"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"treemap\tInstalled Package",
									"treemap"
								],
								[
									"treemapify\tInstalled Package",
									"treemapify"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"usdata\tInstalled Package",
									"usdata"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"utils\tInstalled Package",
									"utils"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vegan\tInstalled Package",
									"vegan"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waffle\tInstalled Package",
									"waffle"
								],
								[
									"waiter\tInstalled Package",
									"waiter"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"writexl\tInstalled Package",
									"writexl"
								],
								[
									"xaringan\tInstalled Package",
									"xaringan"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								]
							],
							"R-Box.loaded_packages":
							[
								"methods",
								"utils",
								"base",
								"stats",
								"graphics",
								"grDevices"
							],
							"WordCount":
							{
								"changes": 55,
								"count": 193,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3451,
										3452
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2977,
										2978
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"sorttabs_lastactivated": 1617149692.49,
							"synced": false,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2925.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.482960885351,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.GitSavvy":
	{
		"height": 234.0
	},
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 126.0
	},
	"output.markdown":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.show_commit_info":
	{
		"height": 126.0
	},
	"pinned_build_system": "Packages/knitr/knitr-Markdown.sublime-build",
	"project": "colombia.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				".Rproj.user/26B2EB61/pcs/windowlayoutstate.pper"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 316.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
